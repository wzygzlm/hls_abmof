-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity eventStreamToConstEncntFrameStream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    frameStream_TREADY : IN STD_LOGIC;
    xStream_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    xStream_V_V_TVALID : IN STD_LOGIC;
    xStream_V_V_TREADY : OUT STD_LOGIC;
    yStream_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    yStream_V_V_TVALID : IN STD_LOGIC;
    yStream_V_V_TREADY : OUT STD_LOGIC;
    count_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    count_V_ap_vld : OUT STD_LOGIC;
    vgaEn_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    vgaEn_V_ap_vld : OUT STD_LOGIC;
    vCnt_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    vCnt_V_ap_vld : OUT STD_LOGIC;
    hCnt_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    hCnt_V_ap_vld : OUT STD_LOGIC;
    regX_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    regX_V_ap_vld : OUT STD_LOGIC;
    regY_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    regY_V_ap_vld : OUT STD_LOGIC;
    frameStream_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    frameStream_TVALID : OUT STD_LOGIC;
    frameStream_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    frameStream_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    frameStream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    frameStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    frameStream_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    frameStream_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of eventStreamToConstEncntFrameStream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "eventStreamToConstEncntFrameStream,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=9.671000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=228,HLS_SYN_DSP=0,HLS_SYN_FF=498,HLS_SYN_LUT=1080}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv12_159 : STD_LOGIC_VECTOR (11 downto 0) := "000101011001";
    constant ap_const_lv12_103 : STD_LOGIC_VECTOR (11 downto 0) := "000100000011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_31F : STD_LOGIC_VECTOR (11 downto 0) := "001100011111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_320 : STD_LOGIC_VECTOR (11 downto 0) := "001100100000";
    constant ap_const_lv12_258 : STD_LOGIC_VECTOR (11 downto 0) := "001001011000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_66 : STD_LOGIC_VECTOR (7 downto 0) := "01100110";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv16_12B : STD_LOGIC_VECTOR (15 downto 0) := "0000000100101011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_C7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000011000111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal frameStream_V_data_V_1_ack_in : STD_LOGIC;
    signal vgaOutputEn_load_reg_2194 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_io : BOOLEAN;
    signal frameStream_V_keep_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_strb_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_user_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_last_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_id_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_dest_V_1_ack_in : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal vgaOutputEn_load_reg_2194_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal frameStream_V_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal frameStream_V_data_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_data_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_data_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal frameStream_V_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal frameStream_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal frameStream_V_data_V_1_sel : STD_LOGIC;
    signal frameStream_V_data_V_1_load_A : STD_LOGIC;
    signal frameStream_V_data_V_1_load_B : STD_LOGIC;
    signal frameStream_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal frameStream_V_keep_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal frameStream_V_keep_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_keep_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_keep_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_keep_V_1_sel : STD_LOGIC;
    signal frameStream_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_strb_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal frameStream_V_strb_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_strb_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_strb_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_strb_V_1_sel : STD_LOGIC;
    signal frameStream_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_user_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal frameStream_V_user_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_user_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_user_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_user_V_1_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal frameStream_V_user_V_1_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal frameStream_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal frameStream_V_user_V_1_sel : STD_LOGIC;
    signal frameStream_V_user_V_1_load_A : STD_LOGIC;
    signal frameStream_V_user_V_1_load_B : STD_LOGIC;
    signal frameStream_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal frameStream_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_last_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_last_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_last_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal frameStream_V_last_V_1_sel : STD_LOGIC;
    signal frameStream_V_last_V_1_load_A : STD_LOGIC;
    signal frameStream_V_last_V_1_load_B : STD_LOGIC;
    signal frameStream_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal frameStream_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_id_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_id_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_id_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_id_V_1_sel : STD_LOGIC;
    signal frameStream_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_dest_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_dest_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_dest_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_dest_V_1_sel : STD_LOGIC;
    signal frameStream_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal currentStoreSliceIdx : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal hCntReg_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal vCntReg_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal glDVSSlice_V_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_0_ce0 : STD_LOGIC;
    signal glDVSSlice_V_0_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal glDVSSlice_V_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_0_ce1 : STD_LOGIC;
    signal glDVSSlice_V_0_we1 : STD_LOGIC;
    signal glDVSSlice_V_0_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal glDVSSlice_V_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_ce0 : STD_LOGIC;
    signal glDVSSlice_V_1_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal glDVSSlice_V_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_ce1 : STD_LOGIC;
    signal glDVSSlice_V_1_we1 : STD_LOGIC;
    signal glDVSSlice_V_1_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal vgaOutputEn : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal cntReg_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal startX_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal startY_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal evCntReg_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal frameStream_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_0583_1_reg_319 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0583_1_reg_319_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal hCntReg_V_load_3_reg_374 : STD_LOGIC_VECTOR (11 downto 0);
    signal hCntReg_V_load_3_reg_374_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal vCntReg_V_load_3_reg_387 : STD_LOGIC_VECTOR (11 downto 0);
    signal vCntReg_V_load_3_reg_387_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal skipFlag_reg_435 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_reg_2141 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_reg_2141_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal currentStoreSliceIdx_1_load_fu_508_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal currentStoreSliceIdx_1_reg_2149 : STD_LOGIC_VECTOR (0 downto 0);
    signal glDVSSlice_V_0_addr_1_reg_2153 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_addr_reg_2159 : STD_LOGIC_VECTOR (11 downto 0);
    signal vCntReg_V_load_reg_2165 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_addr_1_reg_2172 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_2178 : STD_LOGIC_VECTOR (0 downto 0);
    signal glDVSSlice_V_0_addr_reg_2183 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_20_reg_2189 : STD_LOGIC_VECTOR (0 downto 0);
    signal vgaOutputEn_load_load_fu_611_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_2198 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_2204 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_680_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_1_reg_2212 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_1_reg_2212_pp0_iter1_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_66_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_reg_2217 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_reg_2217_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pixVal_V_fu_2032_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_user_V_fu_2040_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_p_0583_s_phi_fu_312_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0583_s_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_n_1_fu_498_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_n_fu_490_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_0583_1_phi_fu_323_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0583_1_reg_319 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_hCntReg_V_flag_phi_fu_334_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_hCntReg_V_flag_reg_331 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vCntReg_V_flag_phi_fu_349_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_vCntReg_V_flag_reg_346 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vgaOutputEn_flag_phi_fu_364_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_vgaOutputEn_flag_reg_361 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_hCntReg_V_load_3_phi_fu_377_p6 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_61_fu_634_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter0_hCntReg_V_load_3_reg_374 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_vCntReg_V_load_3_phi_fu_390_p6 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter0_vCntReg_V_load_3_reg_387 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_tmp_1_fu_660_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_val_assign_s_phi_fu_402_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_val_assign_s_reg_399 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_s_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vgaOutputEn_flag_1_phi_fu_415_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_vgaOutputEn_flag_1_reg_412 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vgaOutputEn_new_1_phi_fu_427_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_vgaOutputEn_new_1_reg_424 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_skipFlag_reg_435 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_skipFlag_reg_435 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_0568_2_phi_fu_452_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_fu_1285_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0568_2_reg_449 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0568_1_fu_1934_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_val_assign_reg_458 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_val_assign_reg_458 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_val_assign_reg_458 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_cast_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_cast_fu_583_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_90_cast_fu_606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_s_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_708_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_tmp_s_fu_2064_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge1_fu_2094_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_72_fu_2112_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_reg_ioackin_count_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_vgaEn_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_vCnt_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_hCnt_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_regX_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_regY_V_dummy_ack : STD_LOGIC := '0';
    signal tmp_122_fu_1086_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_97_fu_2013_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_140_fu_1364_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_43_fu_1735_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_3_fu_522_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_518_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_18_cast_fu_532_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_6_fu_540_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_471_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_26_cast_fu_565_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_92_cast_fu_569_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_93_fu_577_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_11_cast_fu_588_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_89_cast_fu_592_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_47_fu_600_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_59_fu_622_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_63_fu_647_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_98_fu_726_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_73_fu_730_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_fu_738_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_fu_750_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_1_fu_758_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_fu_770_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_2_fu_778_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_790_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_3_fu_798_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_fu_810_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_4_fu_818_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_830_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_5_fu_838_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_fu_850_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_6_fu_858_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_870_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_7_fu_878_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_106_fu_882_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_862_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_fu_842_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_822_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_802_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_782_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_fu_762_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_fu_742_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_53_7_fu_890_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_910_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmpPixVal_V_fu_916_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_107_fu_924_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_s_fu_928_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_fu_942_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_fu_932_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_1_fu_950_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_111_fu_964_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_fu_954_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_2_fu_972_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_113_fu_986_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_fu_976_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_3_fu_994_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_fu_1008_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_fu_998_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_4_fu_1016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_117_fu_1030_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_fu_1020_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_5_fu_1038_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_119_fu_1052_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_fu_1042_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_6_fu_1060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_fu_1074_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_fu_1064_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_7_fu_1082_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_124_fu_1102_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_81_fu_1105_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_3_fu_1113_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_fu_1125_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_1_fu_1133_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_1145_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_2_fu_1153_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_1165_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_3_fu_1173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_1185_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_4_fu_1193_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_fu_1205_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_5_fu_1213_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_1225_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_6_fu_1233_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_1245_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_7_fu_1253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_132_fu_1257_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_fu_1237_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_fu_1217_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_1197_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_1177_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_127_fu_1157_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_126_fu_1137_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_fu_1117_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_61_7_fu_1265_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_133_fu_1294_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_134_fu_1304_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_135_fu_1314_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_136_fu_1324_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_137_fu_1334_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_138_fu_1344_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_139_fu_1354_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_7_fu_1375_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1379_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_s_fu_1387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1399_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_1_fu_1407_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1419_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_2_fu_1427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1439_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_3_fu_1447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1459_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_4_fu_1467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1479_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_5_fu_1487_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1499_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_6_fu_1507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1519_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_7_fu_1527_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1531_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1511_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1491_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1471_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1451_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1431_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_1411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1391_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_69_7_fu_1539_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_1559_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmpPixVal_V_2_fu_1565_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_1573_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_8_fu_1577_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_1591_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1581_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_1_fu_1599_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_1613_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1603_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_2_fu_1621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_1635_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1625_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_3_fu_1643_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_1657_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1647_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_4_fu_1665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_1679_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1669_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_5_fu_1687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1701_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1691_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_6_fu_1709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_1723_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1713_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_7_fu_1731_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_1751_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_35_fu_1754_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_2_fu_1762_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1774_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_1_fu_1782_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_1794_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_2_fu_1802_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_1814_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_3_fu_1822_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_1834_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_4_fu_1842_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1854_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_5_fu_1862_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_1874_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_6_fu_1882_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_1894_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_7_fu_1902_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_1906_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1886_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_1866_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_1846_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1826_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1806_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1786_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_1766_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_1746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_77_7_fu_1914_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_89_fu_1943_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_90_fu_1953_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_91_fu_1963_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_92_fu_1973_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_94_fu_1983_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_95_fu_1993_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_96_fu_2003_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal r_V_fu_2024_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_67_fu_2052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_2058_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_69_fu_2082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_2088_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_639 : BOOLEAN;
    signal ap_condition_540 : BOOLEAN;
    signal ap_condition_90 : BOOLEAN;

    component eventStreamToConsbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (511 downto 0) );
    end component;



begin
    glDVSSlice_V_0_U : component eventStreamToConsbkb
    generic map (
        DataWidth => 512,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => glDVSSlice_V_0_address0,
        ce0 => glDVSSlice_V_0_ce0,
        q0 => glDVSSlice_V_0_q0,
        address1 => glDVSSlice_V_0_address1,
        ce1 => glDVSSlice_V_0_ce1,
        we1 => glDVSSlice_V_0_we1,
        d1 => glDVSSlice_V_0_d1);

    glDVSSlice_V_1_U : component eventStreamToConsbkb
    generic map (
        DataWidth => 512,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => glDVSSlice_V_1_address0,
        ce0 => glDVSSlice_V_1_ce0,
        q0 => glDVSSlice_V_1_q0,
        address1 => glDVSSlice_V_1_address1,
        ce1 => glDVSSlice_V_1_ce1,
        we1 => glDVSSlice_V_1_we1,
        d1 => glDVSSlice_V_1_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_count_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_count_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_count_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_count_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_hCnt_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_hCnt_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_hCnt_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_hCnt_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_regX_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_regX_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_regX_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_regX_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_regY_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_regY_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_regY_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_regY_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_vCnt_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_vCnt_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_vCnt_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_vCnt_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_vgaEn_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_vgaEn_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_vgaEn_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_vgaEn_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_data_V_1_ack_out = ap_const_logic_1) and (frameStream_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_data_V_1_sel_rd <= not(frameStream_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((frameStream_V_data_V_1_ack_in = ap_const_logic_1) and (frameStream_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        frameStream_V_data_V_1_sel_wr <= not(frameStream_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_data_V_1_vld_in = ap_const_logic_0) and (frameStream_V_data_V_1_state = ap_const_lv2_2)) or ((frameStream_V_data_V_1_vld_in = ap_const_logic_0) and (frameStream_V_data_V_1_ack_out = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_data_V_1_ack_out = ap_const_logic_0) and (frameStream_V_data_V_1_state = ap_const_lv2_1)) or ((frameStream_V_data_V_1_ack_out = ap_const_logic_0) and (frameStream_V_data_V_1_vld_in = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_data_V_1_vld_in = ap_const_logic_0) and (frameStream_V_data_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_data_V_1_ack_out = ap_const_logic_0) and (frameStream_V_data_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_data_V_1_state = ap_const_lv2_3)) or ((frameStream_V_data_V_1_ack_out = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_1)) or ((frameStream_V_data_V_1_vld_in = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_dest_V_1_ack_out = ap_const_logic_1) and (frameStream_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_dest_V_1_sel_rd <= not(frameStream_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_dest_V_1_vld_in = ap_const_logic_0) and (frameStream_V_dest_V_1_state = ap_const_lv2_2)) or ((frameStream_V_dest_V_1_vld_in = ap_const_logic_0) and (frameStream_V_dest_V_1_ack_out = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_dest_V_1_ack_out = ap_const_logic_0) and (frameStream_V_dest_V_1_state = ap_const_lv2_1)) or ((frameStream_V_dest_V_1_ack_out = ap_const_logic_0) and (frameStream_V_dest_V_1_vld_in = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_dest_V_1_vld_in = ap_const_logic_0) and (frameStream_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_dest_V_1_ack_out = ap_const_logic_0) and (frameStream_V_dest_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_dest_V_1_state = ap_const_lv2_3)) or ((frameStream_V_dest_V_1_ack_out = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_1)) or ((frameStream_V_dest_V_1_vld_in = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_id_V_1_ack_out = ap_const_logic_1) and (frameStream_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_id_V_1_sel_rd <= not(frameStream_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_id_V_1_vld_in = ap_const_logic_0) and (frameStream_V_id_V_1_state = ap_const_lv2_2)) or ((frameStream_V_id_V_1_vld_in = ap_const_logic_0) and (frameStream_V_id_V_1_ack_out = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_id_V_1_ack_out = ap_const_logic_0) and (frameStream_V_id_V_1_state = ap_const_lv2_1)) or ((frameStream_V_id_V_1_ack_out = ap_const_logic_0) and (frameStream_V_id_V_1_vld_in = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_id_V_1_vld_in = ap_const_logic_0) and (frameStream_V_id_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_id_V_1_ack_out = ap_const_logic_0) and (frameStream_V_id_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_id_V_1_state = ap_const_lv2_3)) or ((frameStream_V_id_V_1_ack_out = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_1)) or ((frameStream_V_id_V_1_vld_in = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_keep_V_1_ack_out = ap_const_logic_1) and (frameStream_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_keep_V_1_sel_rd <= not(frameStream_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_keep_V_1_vld_in = ap_const_logic_0) and (frameStream_V_keep_V_1_state = ap_const_lv2_2)) or ((frameStream_V_keep_V_1_vld_in = ap_const_logic_0) and (frameStream_V_keep_V_1_ack_out = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_keep_V_1_ack_out = ap_const_logic_0) and (frameStream_V_keep_V_1_state = ap_const_lv2_1)) or ((frameStream_V_keep_V_1_ack_out = ap_const_logic_0) and (frameStream_V_keep_V_1_vld_in = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_keep_V_1_vld_in = ap_const_logic_0) and (frameStream_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_keep_V_1_ack_out = ap_const_logic_0) and (frameStream_V_keep_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_keep_V_1_state = ap_const_lv2_3)) or ((frameStream_V_keep_V_1_ack_out = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_1)) or ((frameStream_V_keep_V_1_vld_in = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_last_V_1_ack_out = ap_const_logic_1) and (frameStream_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_last_V_1_sel_rd <= not(frameStream_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((frameStream_V_last_V_1_ack_in = ap_const_logic_1) and (frameStream_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        frameStream_V_last_V_1_sel_wr <= not(frameStream_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_last_V_1_vld_in = ap_const_logic_0) and (frameStream_V_last_V_1_state = ap_const_lv2_2)) or ((frameStream_V_last_V_1_vld_in = ap_const_logic_0) and (frameStream_V_last_V_1_ack_out = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_last_V_1_ack_out = ap_const_logic_0) and (frameStream_V_last_V_1_state = ap_const_lv2_1)) or ((frameStream_V_last_V_1_ack_out = ap_const_logic_0) and (frameStream_V_last_V_1_vld_in = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_last_V_1_vld_in = ap_const_logic_0) and (frameStream_V_last_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_last_V_1_ack_out = ap_const_logic_0) and (frameStream_V_last_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_last_V_1_state = ap_const_lv2_3)) or ((frameStream_V_last_V_1_ack_out = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_1)) or ((frameStream_V_last_V_1_vld_in = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_strb_V_1_ack_out = ap_const_logic_1) and (frameStream_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_strb_V_1_sel_rd <= not(frameStream_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_strb_V_1_vld_in = ap_const_logic_0) and (frameStream_V_strb_V_1_state = ap_const_lv2_2)) or ((frameStream_V_strb_V_1_vld_in = ap_const_logic_0) and (frameStream_V_strb_V_1_ack_out = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_strb_V_1_ack_out = ap_const_logic_0) and (frameStream_V_strb_V_1_state = ap_const_lv2_1)) or ((frameStream_V_strb_V_1_ack_out = ap_const_logic_0) and (frameStream_V_strb_V_1_vld_in = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_strb_V_1_vld_in = ap_const_logic_0) and (frameStream_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_strb_V_1_ack_out = ap_const_logic_0) and (frameStream_V_strb_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_strb_V_1_state = ap_const_lv2_3)) or ((frameStream_V_strb_V_1_ack_out = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_1)) or ((frameStream_V_strb_V_1_vld_in = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_user_V_1_ack_out = ap_const_logic_1) and (frameStream_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_user_V_1_sel_rd <= not(frameStream_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((frameStream_V_user_V_1_ack_in = ap_const_logic_1) and (frameStream_V_user_V_1_vld_in = ap_const_logic_1))) then 
                                        frameStream_V_user_V_1_sel_wr <= not(frameStream_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_user_V_1_vld_in = ap_const_logic_0) and (frameStream_V_user_V_1_state = ap_const_lv2_2)) or ((frameStream_V_user_V_1_vld_in = ap_const_logic_0) and (frameStream_V_user_V_1_ack_out = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_user_V_1_ack_out = ap_const_logic_0) and (frameStream_V_user_V_1_state = ap_const_lv2_1)) or ((frameStream_V_user_V_1_ack_out = ap_const_logic_0) and (frameStream_V_user_V_1_vld_in = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_user_V_1_vld_in = ap_const_logic_0) and (frameStream_V_user_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_user_V_1_ack_out = ap_const_logic_0) and (frameStream_V_user_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_user_V_1_state = ap_const_lv2_3)) or ((frameStream_V_user_V_1_ack_out = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_1)) or ((frameStream_V_user_V_1_vld_in = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_skipFlag_reg_435_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_90)) then
                if (((empty_n_fu_490_p1 = ap_const_lv1_1) and (empty_n_1_fu_498_p1 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_skipFlag_reg_435 <= ap_const_lv1_0;
                elsif (((empty_n_fu_490_p1 = ap_const_lv1_0) or (empty_n_1_fu_498_p1 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_skipFlag_reg_435 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_skipFlag_reg_435 <= ap_phi_reg_pp0_iter0_skipFlag_reg_435;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_val_assign_reg_458_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_90)) then
                if ((tmp_66_fu_684_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter1_val_assign_reg_458 <= ap_phi_mux_val_assign_s_phi_fu_402_p6;
                elsif ((tmp_66_fu_684_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_val_assign_reg_458 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_val_assign_reg_458 <= ap_phi_reg_pp0_iter0_val_assign_reg_458;
                end if;
            end if; 
        end if;
    end process;

    hCntReg_V_load_3_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_90)) then
                if (((tmp_62_fu_641_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1))) then 
                    hCntReg_V_load_3_reg_374 <= ap_const_lv12_0;
                elsif ((vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_0)) then 
                    hCntReg_V_load_3_reg_374 <= hCntReg_V;
                elsif (((vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (tmp_62_fu_641_p2 = ap_const_lv1_0))) then 
                    hCntReg_V_load_3_reg_374 <= tmp_61_fu_634_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    hCntReg_V_load_3_reg_374 <= ap_phi_reg_pp0_iter0_hCntReg_V_load_3_reg_374;
                end if;
            end if; 
        end if;
    end process;

    p_0583_1_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_90)) then
                if (((empty_n_fu_490_p1 = ap_const_lv1_1) and (empty_n_1_fu_498_p1 = ap_const_lv1_1))) then 
                    p_0583_1_reg_319 <= yStream_V_V_TDATA;
                elsif (((empty_n_fu_490_p1 = ap_const_lv1_0) or (empty_n_1_fu_498_p1 = ap_const_lv1_0))) then 
                    p_0583_1_reg_319 <= ap_phi_mux_p_0583_s_phi_fu_312_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_0583_1_reg_319 <= ap_phi_reg_pp0_iter0_p_0583_1_reg_319;
                end if;
            end if; 
        end if;
    end process;

    vCntReg_V_load_3_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_62_fu_641_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                vCntReg_V_load_3_reg_387 <= p_tmp_1_fu_660_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_fu_641_p2 = ap_const_lv1_0)))) then 
                vCntReg_V_load_3_reg_387 <= vCntReg_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                vCntReg_V_load_3_reg_387 <= ap_phi_reg_pp0_iter0_vCntReg_V_load_3_reg_387;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_val_assign_reg_458 <= ap_phi_reg_pp0_iter1_val_assign_reg_458;
                skipFlag_reg_435 <= ap_phi_reg_pp0_iter1_skipFlag_reg_435;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                cntReg_V <= tmp_71_fu_708_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_66_fu_684_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                currentStoreSliceIdx <= p_s_fu_512_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                currentStoreSliceIdx_1_reg_2149 <= currentStoreSliceIdx;
                glDVSSlice_V_0_addr_1_reg_2153 <= tmp_28_cast_fu_546_p1(12 - 1 downto 0);
                glDVSSlice_V_1_addr_reg_2159 <= tmp_28_cast_fu_546_p1(12 - 1 downto 0);
                hCntReg_V_load_3_reg_374_pp0_iter1_reg <= hCntReg_V_load_3_reg_374;
                p_0583_1_reg_319_pp0_iter1_reg <= p_0583_1_reg_319;
                r_V_1_reg_2212 <= r_V_1_fu_680_p1;
                r_V_1_reg_2212_pp0_iter1_reg <= r_V_1_reg_2212;
                tmp_66_reg_2217 <= tmp_66_fu_684_p2;
                tmp_66_reg_2217_pp0_iter1_reg <= tmp_66_reg_2217;
                tmp_V_reg_2141 <= xStream_V_V_TDATA;
                tmp_V_reg_2141_pp0_iter1_reg <= tmp_V_reg_2141;
                vCntReg_V_load_3_reg_387_pp0_iter1_reg <= vCntReg_V_load_3_reg_387;
                vCntReg_V_load_reg_2165 <= vCntReg_V;
                vgaOutputEn_load_reg_2194 <= vgaOutputEn;
                vgaOutputEn_load_reg_2194_pp0_iter1_reg <= vgaOutputEn_load_reg_2194;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (skipFlag_reg_435 = ap_const_lv1_0))) then
                evCntReg_V <= tmp_72_fu_2112_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_data_V_1_load_A = ap_const_logic_1)) then
                frameStream_V_data_V_1_payload_A <= pixVal_V_fu_2032_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_data_V_1_load_B = ap_const_logic_1)) then
                frameStream_V_data_V_1_payload_B <= pixVal_V_fu_2032_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_last_V_1_load_A = ap_const_logic_1)) then
                frameStream_V_last_V_1_payload_A <= tmp_last_V_reg_2198;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_last_V_1_load_B = ap_const_logic_1)) then
                frameStream_V_last_V_1_payload_B <= tmp_last_V_reg_2198;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_user_V_1_load_A = ap_const_logic_1)) then
                frameStream_V_user_V_1_payload_A <= tmp_user_V_fu_2040_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_user_V_1_load_B = ap_const_logic_1)) then
                frameStream_V_user_V_1_payload_B <= tmp_user_V_fu_2040_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                glDVSSlice_V_0_addr_reg_2183 <= tmp_90_cast_fu_606_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_0))) then
                glDVSSlice_V_1_addr_1_reg_2172 <= tmp_93_cast_fu_583_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_hCntReg_V_flag_phi_fu_334_p6 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                hCntReg_V <= ap_phi_mux_hCntReg_V_load_3_phi_fu_377_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_66_reg_2217_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                startX_V <= p_tmp_s_fu_2064_p3;
                startY_V <= storemerge1_fu_2094_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_20_reg_2189 <= grp_fu_480_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_0))) then
                tmp_33_reg_2178 <= grp_fu_480_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_60_reg_2204 <= tmp_60_fu_628_p2;
                tmp_last_V_reg_2198 <= tmp_last_V_fu_616_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_vCntReg_V_flag_phi_fu_349_p6 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                vCntReg_V <= ap_phi_mux_vCntReg_V_load_3_phi_fu_390_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_vgaOutputEn_flag_1_phi_fu_415_p4 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                vgaOutputEn <= ap_phi_mux_vgaOutputEn_new_1_phi_fu_427_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter2, frameStream_V_data_V_1_ack_in, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0) or (frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0))) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, frameStream_V_data_V_1_ack_in, ap_block_state2_io, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0) or (frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, frameStream_V_data_V_1_ack_in, ap_block_state2_io, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0) or (frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state2_io_assign_proc : process(frameStream_V_data_V_1_ack_in, vgaOutputEn_load_reg_2194)
    begin
                ap_block_state2_io <= ((vgaOutputEn_load_reg_2194 = ap_const_lv1_1) and (frameStream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(frameStream_V_data_V_1_ack_in, vgaOutputEn_load_reg_2194_pp0_iter1_reg)
    begin
                ap_block_state3_io <= ((vgaOutputEn_load_reg_2194_pp0_iter1_reg = ap_const_lv1_1) and (frameStream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(frameStream_V_data_V_1_ack_in, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0) or (frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_condition_540_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_540 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_639_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
                ap_condition_639 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_90_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_90 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_hCntReg_V_flag_phi_fu_334_p6_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_611_p1, ap_phi_reg_pp0_iter0_hCntReg_V_flag_reg_331, tmp_62_fu_641_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_0))) then 
            ap_phi_mux_hCntReg_V_flag_phi_fu_334_p6 <= ap_const_lv1_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_62_fu_641_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_fu_641_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_hCntReg_V_flag_phi_fu_334_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_hCntReg_V_flag_phi_fu_334_p6 <= ap_phi_reg_pp0_iter0_hCntReg_V_flag_reg_331;
        end if; 
    end process;


    ap_phi_mux_hCntReg_V_load_3_phi_fu_377_p6_assign_proc : process(hCntReg_V, vgaOutputEn_load_load_fu_611_p1, tmp_62_fu_641_p2, tmp_61_fu_634_p2, ap_phi_reg_pp0_iter0_hCntReg_V_load_3_reg_374, ap_condition_639)
    begin
        if ((ap_const_boolean_1 = ap_condition_639)) then
            if (((tmp_62_fu_641_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1))) then 
                ap_phi_mux_hCntReg_V_load_3_phi_fu_377_p6 <= ap_const_lv12_0;
            elsif ((vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_hCntReg_V_load_3_phi_fu_377_p6 <= hCntReg_V;
            elsif (((vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (tmp_62_fu_641_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_hCntReg_V_load_3_phi_fu_377_p6 <= tmp_61_fu_634_p2;
            else 
                ap_phi_mux_hCntReg_V_load_3_phi_fu_377_p6 <= ap_phi_reg_pp0_iter0_hCntReg_V_load_3_reg_374;
            end if;
        else 
            ap_phi_mux_hCntReg_V_load_3_phi_fu_377_p6 <= ap_phi_reg_pp0_iter0_hCntReg_V_load_3_reg_374;
        end if; 
    end process;


    ap_phi_mux_p_0568_2_phi_fu_452_p4_assign_proc : process(currentStoreSliceIdx_1_reg_2149, p_2_fu_1285_p3, ap_phi_reg_pp0_iter1_p_0568_2_reg_449, p_0568_1_fu_1934_p3, ap_condition_540)
    begin
        if ((ap_const_boolean_1 = ap_condition_540)) then
            if ((currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0568_2_phi_fu_452_p4 <= p_0568_1_fu_1934_p3;
            elsif ((currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0568_2_phi_fu_452_p4 <= p_2_fu_1285_p3;
            else 
                ap_phi_mux_p_0568_2_phi_fu_452_p4 <= ap_phi_reg_pp0_iter1_p_0568_2_reg_449;
            end if;
        else 
            ap_phi_mux_p_0568_2_phi_fu_452_p4 <= ap_phi_reg_pp0_iter1_p_0568_2_reg_449;
        end if; 
    end process;


    ap_phi_mux_p_0583_1_phi_fu_323_p4_assign_proc : process(yStream_V_V_TDATA, ap_phi_mux_p_0583_s_phi_fu_312_p4, empty_n_1_fu_498_p1, empty_n_fu_490_p1, ap_phi_reg_pp0_iter0_p_0583_1_reg_319, ap_condition_639)
    begin
        if ((ap_const_boolean_1 = ap_condition_639)) then
            if (((empty_n_fu_490_p1 = ap_const_lv1_1) and (empty_n_1_fu_498_p1 = ap_const_lv1_1))) then 
                ap_phi_mux_p_0583_1_phi_fu_323_p4 <= yStream_V_V_TDATA;
            elsif (((empty_n_fu_490_p1 = ap_const_lv1_0) or (empty_n_1_fu_498_p1 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0583_1_phi_fu_323_p4 <= ap_phi_mux_p_0583_s_phi_fu_312_p4;
            else 
                ap_phi_mux_p_0583_1_phi_fu_323_p4 <= ap_phi_reg_pp0_iter0_p_0583_1_reg_319;
            end if;
        else 
            ap_phi_mux_p_0583_1_phi_fu_323_p4 <= ap_phi_reg_pp0_iter0_p_0583_1_reg_319;
        end if; 
    end process;


    ap_phi_mux_p_0583_s_phi_fu_312_p4_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, yStream_V_V_TDATA, ap_block_pp0_stage0, ap_phi_reg_pp0_iter0_p_0583_s_reg_309, empty_n_1_fu_498_p1, empty_n_fu_490_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (empty_n_fu_490_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_n_1_fu_498_p1 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0583_s_phi_fu_312_p4 <= yStream_V_V_TDATA;
        else 
            ap_phi_mux_p_0583_s_phi_fu_312_p4 <= ap_phi_reg_pp0_iter0_p_0583_s_reg_309;
        end if; 
    end process;


    ap_phi_mux_vCntReg_V_flag_phi_fu_349_p6_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_611_p1, tmp_62_fu_641_p2, ap_phi_reg_pp0_iter0_vCntReg_V_flag_reg_346)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_62_fu_641_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_vCntReg_V_flag_phi_fu_349_p6 <= ap_const_lv1_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_fu_641_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_vCntReg_V_flag_phi_fu_349_p6 <= ap_const_lv1_0;
        else 
            ap_phi_mux_vCntReg_V_flag_phi_fu_349_p6 <= ap_phi_reg_pp0_iter0_vCntReg_V_flag_reg_346;
        end if; 
    end process;


    ap_phi_mux_vCntReg_V_load_3_phi_fu_390_p6_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, vCntReg_V, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_611_p1, tmp_62_fu_641_p2, ap_phi_reg_pp0_iter0_vCntReg_V_load_3_reg_387, p_tmp_1_fu_660_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_62_fu_641_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_vCntReg_V_load_3_phi_fu_390_p6 <= p_tmp_1_fu_660_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_fu_641_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_vCntReg_V_load_3_phi_fu_390_p6 <= vCntReg_V;
        else 
            ap_phi_mux_vCntReg_V_load_3_phi_fu_390_p6 <= ap_phi_reg_pp0_iter0_vCntReg_V_load_3_reg_387;
        end if; 
    end process;


    ap_phi_mux_val_assign_s_phi_fu_402_p6_assign_proc : process(vgaOutputEn, vgaOutputEn_load_load_fu_611_p1, tmp_62_fu_641_p2, ap_phi_reg_pp0_iter0_val_assign_s_reg_399, not_tmp_s_fu_669_p2, ap_condition_639)
    begin
        if ((ap_const_boolean_1 = ap_condition_639)) then
            if (((tmp_62_fu_641_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1))) then 
                ap_phi_mux_val_assign_s_phi_fu_402_p6 <= not_tmp_s_fu_669_p2;
            elsif ((vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_val_assign_s_phi_fu_402_p6 <= vgaOutputEn;
            elsif (((vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (tmp_62_fu_641_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_val_assign_s_phi_fu_402_p6 <= ap_const_lv1_1;
            else 
                ap_phi_mux_val_assign_s_phi_fu_402_p6 <= ap_phi_reg_pp0_iter0_val_assign_s_reg_399;
            end if;
        else 
            ap_phi_mux_val_assign_s_phi_fu_402_p6 <= ap_phi_reg_pp0_iter0_val_assign_s_reg_399;
        end if; 
    end process;


    ap_phi_mux_vgaOutputEn_flag_1_phi_fu_415_p4_assign_proc : process(tmp_66_fu_684_p2, ap_phi_mux_vgaOutputEn_flag_phi_fu_364_p6, ap_phi_reg_pp0_iter0_vgaOutputEn_flag_1_reg_412, ap_condition_639)
    begin
        if ((ap_const_boolean_1 = ap_condition_639)) then
            if ((tmp_66_fu_684_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_vgaOutputEn_flag_1_phi_fu_415_p4 <= ap_phi_mux_vgaOutputEn_flag_phi_fu_364_p6;
            elsif ((tmp_66_fu_684_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_vgaOutputEn_flag_1_phi_fu_415_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_vgaOutputEn_flag_1_phi_fu_415_p4 <= ap_phi_reg_pp0_iter0_vgaOutputEn_flag_1_reg_412;
            end if;
        else 
            ap_phi_mux_vgaOutputEn_flag_1_phi_fu_415_p4 <= ap_phi_reg_pp0_iter0_vgaOutputEn_flag_1_reg_412;
        end if; 
    end process;


    ap_phi_mux_vgaOutputEn_flag_phi_fu_364_p6_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_611_p1, tmp_62_fu_641_p2, ap_phi_reg_pp0_iter0_vgaOutputEn_flag_reg_361, tmp_64_fu_653_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_62_fu_641_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_vgaOutputEn_flag_phi_fu_364_p6 <= tmp_64_fu_653_p2;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_611_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_fu_641_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_vgaOutputEn_flag_phi_fu_364_p6 <= ap_const_lv1_0;
        else 
            ap_phi_mux_vgaOutputEn_flag_phi_fu_364_p6 <= ap_phi_reg_pp0_iter0_vgaOutputEn_flag_reg_361;
        end if; 
    end process;


    ap_phi_mux_vgaOutputEn_new_1_phi_fu_427_p4_assign_proc : process(tmp_66_fu_684_p2, ap_phi_reg_pp0_iter0_vgaOutputEn_new_1_reg_424, ap_condition_639)
    begin
        if ((ap_const_boolean_1 = ap_condition_639)) then
            if ((tmp_66_fu_684_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_vgaOutputEn_new_1_phi_fu_427_p4 <= ap_const_lv1_0;
            elsif ((tmp_66_fu_684_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_vgaOutputEn_new_1_phi_fu_427_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_vgaOutputEn_new_1_phi_fu_427_p4 <= ap_phi_reg_pp0_iter0_vgaOutputEn_new_1_reg_424;
            end if;
        else 
            ap_phi_mux_vgaOutputEn_new_1_phi_fu_427_p4 <= ap_phi_reg_pp0_iter0_vgaOutputEn_new_1_reg_424;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_hCntReg_V_flag_reg_331 <= "X";
    ap_phi_reg_pp0_iter0_hCntReg_V_load_3_reg_374 <= "XXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0583_1_reg_319 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0583_s_reg_309 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_skipFlag_reg_435 <= "X";
    ap_phi_reg_pp0_iter0_vCntReg_V_flag_reg_346 <= "X";
    ap_phi_reg_pp0_iter0_vCntReg_V_load_3_reg_387 <= "XXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_val_assign_reg_458 <= "X";
    ap_phi_reg_pp0_iter0_val_assign_s_reg_399 <= "X";
    ap_phi_reg_pp0_iter0_vgaOutputEn_flag_1_reg_412 <= "X";
    ap_phi_reg_pp0_iter0_vgaOutputEn_flag_reg_361 <= "X";
    ap_phi_reg_pp0_iter0_vgaOutputEn_new_1_reg_424 <= "X";
    ap_phi_reg_pp0_iter1_p_0568_2_reg_449 <= "XXXXXXXX";

    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    count_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_reg_2212_pp0_iter1_reg),64));

    count_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_01001, ap_reg_ioackin_count_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_count_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            count_V_ap_vld <= ap_const_logic_1;
        else 
            count_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    currentStoreSliceIdx_1_load_fu_508_p1 <= currentStoreSliceIdx;
    empty_n_1_fu_498_p1 <= (0=>yStream_V_V_TVALID, others=>'-');
    empty_n_fu_490_p1 <= (0=>xStream_V_V_TVALID, others=>'-');
    frameStream_TDATA <= frameStream_V_data_V_1_data_out;

    frameStream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, vgaOutputEn_load_reg_2194, vgaOutputEn_load_reg_2194_pp0_iter1_reg, frameStream_V_data_V_1_state, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_reg_2194_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_reg_2194 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            frameStream_TDATA_blk_n <= frameStream_V_data_V_1_state(1);
        else 
            frameStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    frameStream_TDEST <= frameStream_V_dest_V_1_data_out;
    frameStream_TID <= frameStream_V_id_V_1_data_out;
    frameStream_TKEEP <= frameStream_V_keep_V_1_data_out;
    frameStream_TLAST <= frameStream_V_last_V_1_data_out;
    frameStream_TSTRB <= frameStream_V_strb_V_1_data_out;
    frameStream_TUSER <= frameStream_V_user_V_1_data_out;
    frameStream_TVALID <= frameStream_V_dest_V_1_state(0);
    frameStream_V_data_V_1_ack_in <= frameStream_V_data_V_1_state(1);
    frameStream_V_data_V_1_ack_out <= frameStream_TREADY;

    frameStream_V_data_V_1_data_out_assign_proc : process(frameStream_V_data_V_1_payload_A, frameStream_V_data_V_1_payload_B, frameStream_V_data_V_1_sel)
    begin
        if ((frameStream_V_data_V_1_sel = ap_const_logic_1)) then 
            frameStream_V_data_V_1_data_out <= frameStream_V_data_V_1_payload_B;
        else 
            frameStream_V_data_V_1_data_out <= frameStream_V_data_V_1_payload_A;
        end if; 
    end process;

    frameStream_V_data_V_1_load_A <= (frameStream_V_data_V_1_state_cmp_full and not(frameStream_V_data_V_1_sel_wr));
    frameStream_V_data_V_1_load_B <= (frameStream_V_data_V_1_state_cmp_full and frameStream_V_data_V_1_sel_wr);
    frameStream_V_data_V_1_sel <= frameStream_V_data_V_1_sel_rd;
    frameStream_V_data_V_1_state_cmp_full <= '0' when (frameStream_V_data_V_1_state = ap_const_lv2_1) else '1';

    frameStream_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, vgaOutputEn_load_reg_2194, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2194 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            frameStream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_data_V_1_vld_out <= frameStream_V_data_V_1_state(0);
    frameStream_V_dest_V_1_ack_in <= frameStream_V_dest_V_1_state(1);
    frameStream_V_dest_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_dest_V_1_data_out <= ap_const_lv1_0;
    frameStream_V_dest_V_1_sel <= frameStream_V_dest_V_1_sel_rd;

    frameStream_V_dest_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, vgaOutputEn_load_reg_2194, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2194 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            frameStream_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_dest_V_1_vld_out <= frameStream_V_dest_V_1_state(0);
    frameStream_V_id_V_1_ack_in <= frameStream_V_id_V_1_state(1);
    frameStream_V_id_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_id_V_1_data_out <= ap_const_lv1_0;
    frameStream_V_id_V_1_sel <= frameStream_V_id_V_1_sel_rd;

    frameStream_V_id_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, vgaOutputEn_load_reg_2194, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2194 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            frameStream_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_id_V_1_vld_out <= frameStream_V_id_V_1_state(0);
    frameStream_V_keep_V_1_ack_in <= frameStream_V_keep_V_1_state(1);
    frameStream_V_keep_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_keep_V_1_data_out <= ap_const_lv3_7;
    frameStream_V_keep_V_1_sel <= frameStream_V_keep_V_1_sel_rd;

    frameStream_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, vgaOutputEn_load_reg_2194, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2194 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            frameStream_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_keep_V_1_vld_out <= frameStream_V_keep_V_1_state(0);
    frameStream_V_last_V_1_ack_in <= frameStream_V_last_V_1_state(1);
    frameStream_V_last_V_1_ack_out <= frameStream_TREADY;

    frameStream_V_last_V_1_data_out_assign_proc : process(frameStream_V_last_V_1_payload_A, frameStream_V_last_V_1_payload_B, frameStream_V_last_V_1_sel)
    begin
        if ((frameStream_V_last_V_1_sel = ap_const_logic_1)) then 
            frameStream_V_last_V_1_data_out <= frameStream_V_last_V_1_payload_B;
        else 
            frameStream_V_last_V_1_data_out <= frameStream_V_last_V_1_payload_A;
        end if; 
    end process;

    frameStream_V_last_V_1_load_A <= (frameStream_V_last_V_1_state_cmp_full and not(frameStream_V_last_V_1_sel_wr));
    frameStream_V_last_V_1_load_B <= (frameStream_V_last_V_1_state_cmp_full and frameStream_V_last_V_1_sel_wr);
    frameStream_V_last_V_1_sel <= frameStream_V_last_V_1_sel_rd;
    frameStream_V_last_V_1_state_cmp_full <= '0' when (frameStream_V_last_V_1_state = ap_const_lv2_1) else '1';

    frameStream_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, vgaOutputEn_load_reg_2194, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2194 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            frameStream_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_last_V_1_vld_out <= frameStream_V_last_V_1_state(0);
    frameStream_V_strb_V_1_ack_in <= frameStream_V_strb_V_1_state(1);
    frameStream_V_strb_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_strb_V_1_data_out <= ap_const_lv3_7;
    frameStream_V_strb_V_1_sel <= frameStream_V_strb_V_1_sel_rd;

    frameStream_V_strb_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, vgaOutputEn_load_reg_2194, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2194 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            frameStream_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_strb_V_1_vld_out <= frameStream_V_strb_V_1_state(0);
    frameStream_V_user_V_1_ack_in <= frameStream_V_user_V_1_state(1);
    frameStream_V_user_V_1_ack_out <= frameStream_TREADY;

    frameStream_V_user_V_1_data_out_assign_proc : process(frameStream_V_user_V_1_payload_A, frameStream_V_user_V_1_payload_B, frameStream_V_user_V_1_sel)
    begin
        if ((frameStream_V_user_V_1_sel = ap_const_logic_1)) then 
            frameStream_V_user_V_1_data_out <= frameStream_V_user_V_1_payload_B;
        else 
            frameStream_V_user_V_1_data_out <= frameStream_V_user_V_1_payload_A;
        end if; 
    end process;

    frameStream_V_user_V_1_load_A <= (frameStream_V_user_V_1_state_cmp_full and not(frameStream_V_user_V_1_sel_wr));
    frameStream_V_user_V_1_load_B <= (frameStream_V_user_V_1_state_cmp_full and frameStream_V_user_V_1_sel_wr);
    frameStream_V_user_V_1_sel <= frameStream_V_user_V_1_sel_rd;
    frameStream_V_user_V_1_state_cmp_full <= '0' when (frameStream_V_user_V_1_state = ap_const_lv2_1) else '1';

    frameStream_V_user_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, vgaOutputEn_load_reg_2194, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2194 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            frameStream_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_user_V_1_vld_out <= frameStream_V_user_V_1_state(0);

    glDVSSlice_V_0_address0_assign_proc : process(currentStoreSliceIdx_1_load_fu_508_p1, tmp_28_cast_fu_546_p1, tmp_90_cast_fu_606_p1, ap_condition_639)
    begin
        if ((ap_const_boolean_1 = ap_condition_639)) then
            if ((currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_1)) then 
                glDVSSlice_V_0_address0 <= tmp_90_cast_fu_606_p1(12 - 1 downto 0);
            elsif ((currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_0)) then 
                glDVSSlice_V_0_address0 <= tmp_28_cast_fu_546_p1(12 - 1 downto 0);
            else 
                glDVSSlice_V_0_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_0_address1_assign_proc : process(currentStoreSliceIdx_1_reg_2149, glDVSSlice_V_0_addr_1_reg_2153, glDVSSlice_V_0_addr_reg_2183, ap_condition_540)
    begin
        if ((ap_const_boolean_1 = ap_condition_540)) then
            if ((currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_1)) then 
                glDVSSlice_V_0_address1 <= glDVSSlice_V_0_addr_reg_2183;
            elsif ((currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_0)) then 
                glDVSSlice_V_0_address1 <= glDVSSlice_V_0_addr_1_reg_2153;
            else 
                glDVSSlice_V_0_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_load_fu_508_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_0)))) then 
            glDVSSlice_V_0_ce0 <= ap_const_logic_1;
        else 
            glDVSSlice_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2149)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_0)))) then 
            glDVSSlice_V_0_ce1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_0_d1_assign_proc : process(currentStoreSliceIdx_1_reg_2149, tmp_122_fu_1086_p4, tmp_97_fu_2013_p4, ap_condition_540)
    begin
        if ((ap_const_boolean_1 = ap_condition_540)) then
            if ((currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_1)) then 
                glDVSSlice_V_0_d1 <= tmp_97_fu_2013_p4;
            elsif ((currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_0)) then 
                glDVSSlice_V_0_d1 <= tmp_122_fu_1086_p4;
            else 
                glDVSSlice_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_0_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2149)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_0)))) then 
            glDVSSlice_V_0_we1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_1_address0_assign_proc : process(currentStoreSliceIdx_1_load_fu_508_p1, tmp_28_cast_fu_546_p1, tmp_93_cast_fu_583_p1, ap_condition_639)
    begin
        if ((ap_const_boolean_1 = ap_condition_639)) then
            if ((currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_1)) then 
                glDVSSlice_V_1_address0 <= tmp_28_cast_fu_546_p1(12 - 1 downto 0);
            elsif ((currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_0)) then 
                glDVSSlice_V_1_address0 <= tmp_93_cast_fu_583_p1(12 - 1 downto 0);
            else 
                glDVSSlice_V_1_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_1_address1_assign_proc : process(currentStoreSliceIdx_1_reg_2149, glDVSSlice_V_1_addr_reg_2159, glDVSSlice_V_1_addr_1_reg_2172, ap_condition_540)
    begin
        if ((ap_const_boolean_1 = ap_condition_540)) then
            if ((currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_1)) then 
                glDVSSlice_V_1_address1 <= glDVSSlice_V_1_addr_reg_2159;
            elsif ((currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_0)) then 
                glDVSSlice_V_1_address1 <= glDVSSlice_V_1_addr_1_reg_2172;
            else 
                glDVSSlice_V_1_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_load_fu_508_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (currentStoreSliceIdx_1_load_fu_508_p1 = ap_const_lv1_0)))) then 
            glDVSSlice_V_1_ce0 <= ap_const_logic_1;
        else 
            glDVSSlice_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2149)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_0)))) then 
            glDVSSlice_V_1_ce1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_1_d1_assign_proc : process(currentStoreSliceIdx_1_reg_2149, tmp_140_fu_1364_p4, tmp_43_fu_1735_p4, ap_condition_540)
    begin
        if ((ap_const_boolean_1 = ap_condition_540)) then
            if ((currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_1)) then 
                glDVSSlice_V_1_d1 <= tmp_43_fu_1735_p4;
            elsif ((currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_0)) then 
                glDVSSlice_V_1_d1 <= tmp_140_fu_1364_p4;
            else 
                glDVSSlice_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2149)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (currentStoreSliceIdx_1_reg_2149 = ap_const_lv1_0)))) then 
            glDVSSlice_V_1_we1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_471_p4 <= vCntReg_V(10 downto 6);
    grp_fu_480_p2 <= "1" when (unsigned(hCntReg_V) > unsigned(ap_const_lv12_159)) else "0";
    grp_fu_485_p2 <= "1" when (unsigned(vCntReg_V_load_reg_2165) > unsigned(ap_const_lv12_103)) else "0";
    hCnt_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hCntReg_V_load_3_reg_374_pp0_iter1_reg),16));

    hCnt_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_01001, ap_reg_ioackin_hCnt_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_hCnt_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            hCnt_V_ap_vld <= ap_const_logic_1;
        else 
            hCnt_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    index_assign_10_1_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_fu_750_p3),32));
    index_assign_10_2_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_fu_770_p3),32));
    index_assign_10_3_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_fu_790_p3),32));
    index_assign_10_4_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_fu_810_p3),32));
    index_assign_10_5_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_830_p3),32));
    index_assign_10_6_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_fu_850_p3),32));
    index_assign_10_7_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_80_fu_870_p3),32));
    index_assign_14_1_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_82_fu_1125_p3),32));
    index_assign_14_2_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_fu_1145_p3),32));
    index_assign_14_3_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_1165_p3),32));
    index_assign_14_4_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_85_fu_1185_p3),32));
    index_assign_14_5_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_86_fu_1205_p3),32));
    index_assign_14_6_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_87_fu_1225_p3),32));
    index_assign_14_7_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_88_fu_1245_p3),32));
    index_assign_18_1_fu_1407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_1399_p3),32));
    index_assign_18_2_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1419_p3),32));
    index_assign_18_3_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1439_p3),32));
    index_assign_18_4_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1459_p3),32));
    index_assign_18_5_fu_1487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_1479_p3),32));
    index_assign_18_6_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_1499_p3),32));
    index_assign_18_7_fu_1527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1519_p3),32));
    index_assign_1_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_fu_730_p3),32));
    index_assign_22_1_fu_1782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_1774_p3),32));
    index_assign_22_2_fu_1802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_1794_p3),32));
    index_assign_22_3_fu_1822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_1814_p3),32));
    index_assign_22_4_fu_1842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_1834_p3),32));
    index_assign_22_5_fu_1862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_1854_p3),32));
    index_assign_22_6_fu_1882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_1874_p3),32));
    index_assign_22_7_fu_1902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_1894_p3),32));
    index_assign_2_fu_1762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_1754_p3),32));
    index_assign_3_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_81_fu_1105_p3),32));
    index_assign_s_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1379_p3),32));
    not_tmp_s_fu_669_p2 <= (tmp_64_fu_653_p2 xor ap_const_lv1_1);
    or_cond1_fu_1746_p2 <= (tmp_20_reg_2189 or grp_fu_485_p2);
    or_cond_fu_1097_p2 <= (tmp_33_reg_2178 or grp_fu_485_p2);
    p_0568_1_fu_1934_p3 <= 
        ap_const_lv8_66 when (or_cond1_fu_1746_p2(0) = '1') else 
        p_Result_77_7_fu_1914_p9;
    p_2_fu_1285_p3 <= 
        ap_const_lv8_66 when (or_cond_fu_1097_p2(0) = '1') else 
        p_Result_61_7_fu_1265_p9;
    p_Repl2_11_1_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_109_fu_942_p3),64));
    p_Repl2_11_2_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_111_fu_964_p3),64));
    p_Repl2_11_3_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_113_fu_986_p3),64));
    p_Repl2_11_4_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_115_fu_1008_p3),64));
    p_Repl2_11_5_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_117_fu_1030_p3),64));
    p_Repl2_11_6_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_119_fu_1052_p3),64));
    p_Repl2_11_7_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_121_fu_1074_p3),64));
    p_Repl2_8_1_fu_1599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_1591_p3),64));
    p_Repl2_8_2_fu_1621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1613_p3),64));
    p_Repl2_8_3_fu_1643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_1635_p3),64));
    p_Repl2_8_4_fu_1665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_1657_p3),64));
    p_Repl2_8_5_fu_1687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_1679_p3),64));
    p_Repl2_8_6_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_1701_p3),64));
    p_Repl2_8_7_fu_1731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_1723_p3),64));
    p_Repl2_8_fu_1577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_1573_p1),64));
    p_Repl2_s_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_107_fu_924_p1),64));
    p_Result_53_7_fu_890_p9 <= (((((((tmp_106_fu_882_p3 & tmp_105_fu_862_p3) & tmp_104_fu_842_p3) & tmp_103_fu_822_p3) & tmp_102_fu_802_p3) & tmp_101_fu_782_p3) & tmp_100_fu_762_p3) & tmp_99_fu_742_p3);
    p_Result_61_7_fu_1265_p9 <= (((((((tmp_132_fu_1257_p3 & tmp_131_fu_1237_p3) & tmp_130_fu_1217_p3) & tmp_129_fu_1197_p3) & tmp_128_fu_1177_p3) & tmp_127_fu_1157_p3) & tmp_126_fu_1137_p3) & tmp_125_fu_1117_p3);
    p_Result_69_7_fu_1539_p9 <= (((((((tmp_22_fu_1531_p3 & tmp_18_fu_1511_p3) & tmp_16_fu_1491_p3) & tmp_13_fu_1471_p3) & tmp_12_fu_1451_p3) & tmp_11_fu_1431_p3) & tmp_9_fu_1411_p3) & tmp_8_fu_1391_p3);
    p_Result_77_7_fu_1914_p9 <= (((((((tmp_65_fu_1906_p3 & tmp_57_fu_1886_p3) & tmp_56_fu_1866_p3) & tmp_55_fu_1846_p3) & tmp_54_fu_1826_p3) & tmp_53_fu_1806_p3) & tmp_52_fu_1786_p3) & tmp_51_fu_1766_p3);
    p_s_fu_512_p2 <= (currentStoreSliceIdx xor ap_const_lv1_1);
    p_tmp_1_fu_660_p3 <= 
        ap_const_lv12_0 when (tmp_64_fu_653_p2(0) = '1') else 
        tmp_63_fu_647_p2;
    p_tmp_s_fu_2064_p3 <= 
        ap_const_lv16_0 when (tmp_67_fu_2052_p2(0) = '1') else 
        tmp_68_fu_2058_p2;
    pixVal_V_fu_2032_p3 <= 
        ap_const_lv24_0 when (tmp_last_V_reg_2198(0) = '1') else 
        r_V_fu_2024_p3;
    r_V_1_fu_680_p1 <= cntReg_V(20 - 1 downto 0);
    r_V_fu_2024_p3 <= (ap_phi_mux_p_0568_2_phi_fu_452_p4 & ap_const_lv16_0);
    regX_V <= tmp_V_reg_2141_pp0_iter1_reg;

    regX_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_01001, ap_reg_ioackin_regX_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_regX_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            regX_V_ap_vld <= ap_const_logic_1;
        else 
            regX_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    regY_V <= p_0583_1_reg_319_pp0_iter1_reg;

    regY_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_01001, ap_reg_ioackin_regY_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_regY_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            regY_V_ap_vld <= ap_const_logic_1;
        else 
            regY_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    storemerge1_fu_2094_p3 <= 
        ap_const_lv16_0 when (tmp_69_fu_2082_p2(0) = '1') else 
        tmp_70_fu_2088_p2;
    tmpPixVal_V_2_fu_1565_p3 <= 
        p_Result_69_7_fu_1539_p9 when (ap_phi_reg_pp0_iter1_skipFlag_reg_435(0) = '1') else 
        tmp_s_fu_1559_p2;
    tmpPixVal_V_fu_916_p3 <= 
        p_Result_53_7_fu_890_p9 when (ap_phi_reg_pp0_iter1_skipFlag_reg_435(0) = '1') else 
        tmp_14_fu_910_p2;
    tmp_100_fu_762_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_1_fu_758_p1)) downto to_integer(unsigned(index_assign_10_1_fu_758_p1))) when (to_integer(unsigned(index_assign_10_1_fu_758_p1))>= 0 and to_integer(unsigned(index_assign_10_1_fu_758_p1))<=511) else "-";
    tmp_101_fu_782_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_2_fu_778_p1)) downto to_integer(unsigned(index_assign_10_2_fu_778_p1))) when (to_integer(unsigned(index_assign_10_2_fu_778_p1))>= 0 and to_integer(unsigned(index_assign_10_2_fu_778_p1))<=511) else "-";
    tmp_102_fu_802_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_3_fu_798_p1)) downto to_integer(unsigned(index_assign_10_3_fu_798_p1))) when (to_integer(unsigned(index_assign_10_3_fu_798_p1))>= 0 and to_integer(unsigned(index_assign_10_3_fu_798_p1))<=511) else "-";
    tmp_103_fu_822_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_4_fu_818_p1)) downto to_integer(unsigned(index_assign_10_4_fu_818_p1))) when (to_integer(unsigned(index_assign_10_4_fu_818_p1))>= 0 and to_integer(unsigned(index_assign_10_4_fu_818_p1))<=511) else "-";
    tmp_104_fu_842_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_5_fu_838_p1)) downto to_integer(unsigned(index_assign_10_5_fu_838_p1))) when (to_integer(unsigned(index_assign_10_5_fu_838_p1))>= 0 and to_integer(unsigned(index_assign_10_5_fu_838_p1))<=511) else "-";
    tmp_105_fu_862_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_6_fu_858_p1)) downto to_integer(unsigned(index_assign_10_6_fu_858_p1))) when (to_integer(unsigned(index_assign_10_6_fu_858_p1))>= 0 and to_integer(unsigned(index_assign_10_6_fu_858_p1))<=511) else "-";
    tmp_106_fu_882_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_7_fu_878_p1)) downto to_integer(unsigned(index_assign_10_7_fu_878_p1))) when (to_integer(unsigned(index_assign_10_7_fu_878_p1))>= 0 and to_integer(unsigned(index_assign_10_7_fu_878_p1))<=511) else "-";
    tmp_107_fu_924_p1 <= tmpPixVal_V_fu_916_p3(1 - 1 downto 0);
    
    tmp_108_fu_932_p4_proc : process(glDVSSlice_V_0_q0, index_assign_1_fu_738_p1, p_Repl2_s_fu_928_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_108_fu_932_p4 <= glDVSSlice_V_0_q0;
        if to_integer(unsigned(index_assign_1_fu_738_p1)) >= glDVSSlice_V_0_q0'low and to_integer(unsigned(index_assign_1_fu_738_p1)) <= glDVSSlice_V_0_q0'high then
            result(0) := '0';
            for i in p_Repl2_s_fu_928_p1'range loop
                result(0) := result(0) or p_Repl2_s_fu_928_p1(i);
            end loop;
            tmp_108_fu_932_p4(to_integer(unsigned(index_assign_1_fu_738_p1))) <= result(0);
        end if;
    end process;

    tmp_109_fu_942_p3 <= tmpPixVal_V_fu_916_p3(1 downto 1);
    tmp_10_fu_1459_p3 <= (tmp_7_fu_1375_p1 & ap_const_lv3_4);
    
    tmp_110_fu_954_p4_proc : process(tmp_108_fu_932_p4, index_assign_10_1_fu_758_p1, p_Repl2_11_1_fu_950_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_110_fu_954_p4 <= tmp_108_fu_932_p4;
        if to_integer(unsigned(index_assign_10_1_fu_758_p1)) >= tmp_108_fu_932_p4'low and to_integer(unsigned(index_assign_10_1_fu_758_p1)) <= tmp_108_fu_932_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_1_fu_950_p1'range loop
                result(0) := result(0) or p_Repl2_11_1_fu_950_p1(i);
            end loop;
            tmp_110_fu_954_p4(to_integer(unsigned(index_assign_10_1_fu_758_p1))) <= result(0);
        end if;
    end process;

    tmp_111_fu_964_p3 <= tmpPixVal_V_fu_916_p3(2 downto 2);
    
    tmp_112_fu_976_p4_proc : process(tmp_110_fu_954_p4, index_assign_10_2_fu_778_p1, p_Repl2_11_2_fu_972_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_112_fu_976_p4 <= tmp_110_fu_954_p4;
        if to_integer(unsigned(index_assign_10_2_fu_778_p1)) >= tmp_110_fu_954_p4'low and to_integer(unsigned(index_assign_10_2_fu_778_p1)) <= tmp_110_fu_954_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_2_fu_972_p1'range loop
                result(0) := result(0) or p_Repl2_11_2_fu_972_p1(i);
            end loop;
            tmp_112_fu_976_p4(to_integer(unsigned(index_assign_10_2_fu_778_p1))) <= result(0);
        end if;
    end process;

    tmp_113_fu_986_p3 <= tmpPixVal_V_fu_916_p3(3 downto 3);
    
    tmp_114_fu_998_p4_proc : process(tmp_112_fu_976_p4, index_assign_10_3_fu_798_p1, p_Repl2_11_3_fu_994_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_114_fu_998_p4 <= tmp_112_fu_976_p4;
        if to_integer(unsigned(index_assign_10_3_fu_798_p1)) >= tmp_112_fu_976_p4'low and to_integer(unsigned(index_assign_10_3_fu_798_p1)) <= tmp_112_fu_976_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_3_fu_994_p1'range loop
                result(0) := result(0) or p_Repl2_11_3_fu_994_p1(i);
            end loop;
            tmp_114_fu_998_p4(to_integer(unsigned(index_assign_10_3_fu_798_p1))) <= result(0);
        end if;
    end process;

    tmp_115_fu_1008_p3 <= tmpPixVal_V_fu_916_p3(4 downto 4);
    
    tmp_116_fu_1020_p4_proc : process(tmp_114_fu_998_p4, index_assign_10_4_fu_818_p1, p_Repl2_11_4_fu_1016_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_116_fu_1020_p4 <= tmp_114_fu_998_p4;
        if to_integer(unsigned(index_assign_10_4_fu_818_p1)) >= tmp_114_fu_998_p4'low and to_integer(unsigned(index_assign_10_4_fu_818_p1)) <= tmp_114_fu_998_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_4_fu_1016_p1'range loop
                result(0) := result(0) or p_Repl2_11_4_fu_1016_p1(i);
            end loop;
            tmp_116_fu_1020_p4(to_integer(unsigned(index_assign_10_4_fu_818_p1))) <= result(0);
        end if;
    end process;

    tmp_117_fu_1030_p3 <= tmpPixVal_V_fu_916_p3(5 downto 5);
    
    tmp_118_fu_1042_p4_proc : process(tmp_116_fu_1020_p4, index_assign_10_5_fu_838_p1, p_Repl2_11_5_fu_1038_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_118_fu_1042_p4 <= tmp_116_fu_1020_p4;
        if to_integer(unsigned(index_assign_10_5_fu_838_p1)) >= tmp_116_fu_1020_p4'low and to_integer(unsigned(index_assign_10_5_fu_838_p1)) <= tmp_116_fu_1020_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_5_fu_1038_p1'range loop
                result(0) := result(0) or p_Repl2_11_5_fu_1038_p1(i);
            end loop;
            tmp_118_fu_1042_p4(to_integer(unsigned(index_assign_10_5_fu_838_p1))) <= result(0);
        end if;
    end process;

    tmp_119_fu_1052_p3 <= tmpPixVal_V_fu_916_p3(6 downto 6);
    tmp_11_cast_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hCntReg_V),14));
    tmp_11_fu_1431_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_2_fu_1427_p1)) downto to_integer(unsigned(index_assign_18_2_fu_1427_p1))) when (to_integer(unsigned(index_assign_18_2_fu_1427_p1))>= 0 and to_integer(unsigned(index_assign_18_2_fu_1427_p1))<=511) else "-";
    
    tmp_120_fu_1064_p4_proc : process(tmp_118_fu_1042_p4, index_assign_10_6_fu_858_p1, p_Repl2_11_6_fu_1060_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_120_fu_1064_p4 <= tmp_118_fu_1042_p4;
        if to_integer(unsigned(index_assign_10_6_fu_858_p1)) >= tmp_118_fu_1042_p4'low and to_integer(unsigned(index_assign_10_6_fu_858_p1)) <= tmp_118_fu_1042_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_6_fu_1060_p1'range loop
                result(0) := result(0) or p_Repl2_11_6_fu_1060_p1(i);
            end loop;
            tmp_120_fu_1064_p4(to_integer(unsigned(index_assign_10_6_fu_858_p1))) <= result(0);
        end if;
    end process;

    tmp_121_fu_1074_p3 <= tmpPixVal_V_fu_916_p3(7 downto 7);
    
    tmp_122_fu_1086_p4_proc : process(tmp_120_fu_1064_p4, index_assign_10_7_fu_878_p1, p_Repl2_11_7_fu_1082_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_122_fu_1086_p4 <= tmp_120_fu_1064_p4;
        if to_integer(unsigned(index_assign_10_7_fu_878_p1)) >= tmp_120_fu_1064_p4'low and to_integer(unsigned(index_assign_10_7_fu_878_p1)) <= tmp_120_fu_1064_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_7_fu_1082_p1'range loop
                result(0) := result(0) or p_Repl2_11_7_fu_1082_p1(i);
            end loop;
            tmp_122_fu_1086_p4(to_integer(unsigned(index_assign_10_7_fu_878_p1))) <= result(0);
        end if;
    end process;

    tmp_124_fu_1102_p1 <= vCntReg_V_load_reg_2165(6 - 1 downto 0);
    tmp_125_fu_1117_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_3_fu_1113_p1)) downto to_integer(unsigned(index_assign_3_fu_1113_p1))) when (to_integer(unsigned(index_assign_3_fu_1113_p1))>= 0 and to_integer(unsigned(index_assign_3_fu_1113_p1))<=511) else "-";
    tmp_126_fu_1137_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_1_fu_1133_p1)) downto to_integer(unsigned(index_assign_14_1_fu_1133_p1))) when (to_integer(unsigned(index_assign_14_1_fu_1133_p1))>= 0 and to_integer(unsigned(index_assign_14_1_fu_1133_p1))<=511) else "-";
    tmp_127_fu_1157_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_2_fu_1153_p1)) downto to_integer(unsigned(index_assign_14_2_fu_1153_p1))) when (to_integer(unsigned(index_assign_14_2_fu_1153_p1))>= 0 and to_integer(unsigned(index_assign_14_2_fu_1153_p1))<=511) else "-";
    tmp_128_fu_1177_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_3_fu_1173_p1)) downto to_integer(unsigned(index_assign_14_3_fu_1173_p1))) when (to_integer(unsigned(index_assign_14_3_fu_1173_p1))>= 0 and to_integer(unsigned(index_assign_14_3_fu_1173_p1))<=511) else "-";
    tmp_129_fu_1197_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_4_fu_1193_p1)) downto to_integer(unsigned(index_assign_14_4_fu_1193_p1))) when (to_integer(unsigned(index_assign_14_4_fu_1193_p1))>= 0 and to_integer(unsigned(index_assign_14_4_fu_1193_p1))<=511) else "-";
    tmp_12_fu_1451_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_3_fu_1447_p1)) downto to_integer(unsigned(index_assign_18_3_fu_1447_p1))) when (to_integer(unsigned(index_assign_18_3_fu_1447_p1))>= 0 and to_integer(unsigned(index_assign_18_3_fu_1447_p1))<=511) else "-";
    tmp_130_fu_1217_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_5_fu_1213_p1)) downto to_integer(unsigned(index_assign_14_5_fu_1213_p1))) when (to_integer(unsigned(index_assign_14_5_fu_1213_p1))>= 0 and to_integer(unsigned(index_assign_14_5_fu_1213_p1))<=511) else "-";
    tmp_131_fu_1237_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_6_fu_1233_p1)) downto to_integer(unsigned(index_assign_14_6_fu_1233_p1))) when (to_integer(unsigned(index_assign_14_6_fu_1233_p1))>= 0 and to_integer(unsigned(index_assign_14_6_fu_1233_p1))<=511) else "-";
    tmp_132_fu_1257_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_7_fu_1253_p1)) downto to_integer(unsigned(index_assign_14_7_fu_1253_p1))) when (to_integer(unsigned(index_assign_14_7_fu_1253_p1))>= 0 and to_integer(unsigned(index_assign_14_7_fu_1253_p1))<=511) else "-";
    
    tmp_133_fu_1294_p4_proc : process(glDVSSlice_V_1_q0, index_assign_3_fu_1113_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_133_fu_1294_p4 <= glDVSSlice_V_1_q0;
        if to_integer(unsigned(index_assign_3_fu_1113_p1)) >= glDVSSlice_V_1_q0'low and to_integer(unsigned(index_assign_3_fu_1113_p1)) <= glDVSSlice_V_1_q0'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_133_fu_1294_p4(to_integer(unsigned(index_assign_3_fu_1113_p1))) <= result(0);
        end if;
    end process;

    
    tmp_134_fu_1304_p4_proc : process(tmp_133_fu_1294_p4, index_assign_14_1_fu_1133_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_134_fu_1304_p4 <= tmp_133_fu_1294_p4;
        if to_integer(unsigned(index_assign_14_1_fu_1133_p1)) >= tmp_133_fu_1294_p4'low and to_integer(unsigned(index_assign_14_1_fu_1133_p1)) <= tmp_133_fu_1294_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_134_fu_1304_p4(to_integer(unsigned(index_assign_14_1_fu_1133_p1))) <= result(0);
        end if;
    end process;

    
    tmp_135_fu_1314_p4_proc : process(tmp_134_fu_1304_p4, index_assign_14_2_fu_1153_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_135_fu_1314_p4 <= tmp_134_fu_1304_p4;
        if to_integer(unsigned(index_assign_14_2_fu_1153_p1)) >= tmp_134_fu_1304_p4'low and to_integer(unsigned(index_assign_14_2_fu_1153_p1)) <= tmp_134_fu_1304_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_135_fu_1314_p4(to_integer(unsigned(index_assign_14_2_fu_1153_p1))) <= result(0);
        end if;
    end process;

    
    tmp_136_fu_1324_p4_proc : process(tmp_135_fu_1314_p4, index_assign_14_3_fu_1173_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_136_fu_1324_p4 <= tmp_135_fu_1314_p4;
        if to_integer(unsigned(index_assign_14_3_fu_1173_p1)) >= tmp_135_fu_1314_p4'low and to_integer(unsigned(index_assign_14_3_fu_1173_p1)) <= tmp_135_fu_1314_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_136_fu_1324_p4(to_integer(unsigned(index_assign_14_3_fu_1173_p1))) <= result(0);
        end if;
    end process;

    
    tmp_137_fu_1334_p4_proc : process(tmp_136_fu_1324_p4, index_assign_14_4_fu_1193_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_137_fu_1334_p4 <= tmp_136_fu_1324_p4;
        if to_integer(unsigned(index_assign_14_4_fu_1193_p1)) >= tmp_136_fu_1324_p4'low and to_integer(unsigned(index_assign_14_4_fu_1193_p1)) <= tmp_136_fu_1324_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_137_fu_1334_p4(to_integer(unsigned(index_assign_14_4_fu_1193_p1))) <= result(0);
        end if;
    end process;

    
    tmp_138_fu_1344_p4_proc : process(tmp_137_fu_1334_p4, index_assign_14_5_fu_1213_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_138_fu_1344_p4 <= tmp_137_fu_1334_p4;
        if to_integer(unsigned(index_assign_14_5_fu_1213_p1)) >= tmp_137_fu_1334_p4'low and to_integer(unsigned(index_assign_14_5_fu_1213_p1)) <= tmp_137_fu_1334_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_138_fu_1344_p4(to_integer(unsigned(index_assign_14_5_fu_1213_p1))) <= result(0);
        end if;
    end process;

    
    tmp_139_fu_1354_p4_proc : process(tmp_138_fu_1344_p4, index_assign_14_6_fu_1233_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_139_fu_1354_p4 <= tmp_138_fu_1344_p4;
        if to_integer(unsigned(index_assign_14_6_fu_1233_p1)) >= tmp_138_fu_1344_p4'low and to_integer(unsigned(index_assign_14_6_fu_1233_p1)) <= tmp_138_fu_1344_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_139_fu_1354_p4(to_integer(unsigned(index_assign_14_6_fu_1233_p1))) <= result(0);
        end if;
    end process;

    tmp_13_fu_1471_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_4_fu_1467_p1)) downto to_integer(unsigned(index_assign_18_4_fu_1467_p1))) when (to_integer(unsigned(index_assign_18_4_fu_1467_p1))>= 0 and to_integer(unsigned(index_assign_18_4_fu_1467_p1))<=511) else "-";
    
    tmp_140_fu_1364_p4_proc : process(tmp_139_fu_1354_p4, index_assign_14_7_fu_1253_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_140_fu_1364_p4 <= tmp_139_fu_1354_p4;
        if to_integer(unsigned(index_assign_14_7_fu_1253_p1)) >= tmp_139_fu_1354_p4'low and to_integer(unsigned(index_assign_14_7_fu_1253_p1)) <= tmp_139_fu_1354_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_140_fu_1364_p4(to_integer(unsigned(index_assign_14_7_fu_1253_p1))) <= result(0);
        end if;
    end process;

    tmp_14_fu_910_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(p_Result_53_7_fu_890_p9));
    tmp_15_fu_1479_p3 <= (tmp_7_fu_1375_p1 & ap_const_lv3_5);
    tmp_16_fu_1491_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_5_fu_1487_p1)) downto to_integer(unsigned(index_assign_18_5_fu_1487_p1))) when (to_integer(unsigned(index_assign_18_5_fu_1487_p1))>= 0 and to_integer(unsigned(index_assign_18_5_fu_1487_p1))<=511) else "-";
    tmp_17_fu_1499_p3 <= (tmp_7_fu_1375_p1 & ap_const_lv3_6);
    tmp_18_cast_fu_532_p3 <= (tmp_3_fu_522_p4 & ap_const_lv9_0);
    tmp_18_fu_1511_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_6_fu_1507_p1)) downto to_integer(unsigned(index_assign_18_6_fu_1507_p1))) when (to_integer(unsigned(index_assign_18_6_fu_1507_p1))>= 0 and to_integer(unsigned(index_assign_18_6_fu_1507_p1))<=511) else "-";
    tmp_1_fu_1379_p3 <= (tmp_7_fu_1375_p1 & ap_const_lv3_0);
    tmp_21_fu_1519_p3 <= (tmp_7_fu_1375_p1 & ap_const_lv3_7);
    tmp_22_fu_1531_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_7_fu_1527_p1)) downto to_integer(unsigned(index_assign_18_7_fu_1527_p1))) when (to_integer(unsigned(index_assign_18_7_fu_1527_p1))>= 0 and to_integer(unsigned(index_assign_18_7_fu_1527_p1))<=511) else "-";
    tmp_23_fu_1573_p1 <= tmpPixVal_V_2_fu_1565_p3(1 - 1 downto 0);
    
    tmp_24_fu_1581_p4_proc : process(glDVSSlice_V_1_q0, index_assign_s_fu_1387_p1, p_Repl2_8_fu_1577_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_24_fu_1581_p4 <= glDVSSlice_V_1_q0;
        if to_integer(unsigned(index_assign_s_fu_1387_p1)) >= glDVSSlice_V_1_q0'low and to_integer(unsigned(index_assign_s_fu_1387_p1)) <= glDVSSlice_V_1_q0'high then
            result(0) := '0';
            for i in p_Repl2_8_fu_1577_p1'range loop
                result(0) := result(0) or p_Repl2_8_fu_1577_p1(i);
            end loop;
            tmp_24_fu_1581_p4(to_integer(unsigned(index_assign_s_fu_1387_p1))) <= result(0);
        end if;
    end process;

    tmp_25_fu_1591_p3 <= tmpPixVal_V_2_fu_1565_p3(1 downto 1);
    tmp_26_cast_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hCntReg_V),14));
    
    tmp_26_fu_1603_p4_proc : process(tmp_24_fu_1581_p4, index_assign_18_1_fu_1407_p1, p_Repl2_8_1_fu_1599_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_26_fu_1603_p4 <= tmp_24_fu_1581_p4;
        if to_integer(unsigned(index_assign_18_1_fu_1407_p1)) >= tmp_24_fu_1581_p4'low and to_integer(unsigned(index_assign_18_1_fu_1407_p1)) <= tmp_24_fu_1581_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_1_fu_1599_p1'range loop
                result(0) := result(0) or p_Repl2_8_1_fu_1599_p1(i);
            end loop;
            tmp_26_fu_1603_p4(to_integer(unsigned(index_assign_18_1_fu_1407_p1))) <= result(0);
        end if;
    end process;

    tmp_27_fu_1613_p3 <= tmpPixVal_V_2_fu_1565_p3(2 downto 2);
    tmp_28_cast_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_540_p2),64));
    
    tmp_28_fu_1625_p4_proc : process(tmp_26_fu_1603_p4, index_assign_18_2_fu_1427_p1, p_Repl2_8_2_fu_1621_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_28_fu_1625_p4 <= tmp_26_fu_1603_p4;
        if to_integer(unsigned(index_assign_18_2_fu_1427_p1)) >= tmp_26_fu_1603_p4'low and to_integer(unsigned(index_assign_18_2_fu_1427_p1)) <= tmp_26_fu_1603_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_2_fu_1621_p1'range loop
                result(0) := result(0) or p_Repl2_8_2_fu_1621_p1(i);
            end loop;
            tmp_28_fu_1625_p4(to_integer(unsigned(index_assign_18_2_fu_1427_p1))) <= result(0);
        end if;
    end process;

    tmp_29_fu_1635_p3 <= tmpPixVal_V_2_fu_1565_p3(3 downto 3);
    tmp_2_fu_1399_p3 <= (tmp_7_fu_1375_p1 & ap_const_lv3_1);
    
    tmp_31_fu_1647_p4_proc : process(tmp_28_fu_1625_p4, index_assign_18_3_fu_1447_p1, p_Repl2_8_3_fu_1643_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_31_fu_1647_p4 <= tmp_28_fu_1625_p4;
        if to_integer(unsigned(index_assign_18_3_fu_1447_p1)) >= tmp_28_fu_1625_p4'low and to_integer(unsigned(index_assign_18_3_fu_1447_p1)) <= tmp_28_fu_1625_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_3_fu_1643_p1'range loop
                result(0) := result(0) or p_Repl2_8_3_fu_1643_p1(i);
            end loop;
            tmp_31_fu_1647_p4(to_integer(unsigned(index_assign_18_3_fu_1447_p1))) <= result(0);
        end if;
    end process;

    tmp_32_fu_1657_p3 <= tmpPixVal_V_2_fu_1565_p3(4 downto 4);
    
    tmp_34_fu_1669_p4_proc : process(tmp_31_fu_1647_p4, index_assign_18_4_fu_1467_p1, p_Repl2_8_4_fu_1665_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_34_fu_1669_p4 <= tmp_31_fu_1647_p4;
        if to_integer(unsigned(index_assign_18_4_fu_1467_p1)) >= tmp_31_fu_1647_p4'low and to_integer(unsigned(index_assign_18_4_fu_1467_p1)) <= tmp_31_fu_1647_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_4_fu_1665_p1'range loop
                result(0) := result(0) or p_Repl2_8_4_fu_1665_p1(i);
            end loop;
            tmp_34_fu_1669_p4(to_integer(unsigned(index_assign_18_4_fu_1467_p1))) <= result(0);
        end if;
    end process;

    tmp_35_fu_1754_p3 <= (tmp_50_fu_1751_p1 & ap_const_lv3_0);
    tmp_36_fu_1679_p3 <= tmpPixVal_V_2_fu_1565_p3(5 downto 5);
    
    tmp_37_fu_1691_p4_proc : process(tmp_34_fu_1669_p4, index_assign_18_5_fu_1487_p1, p_Repl2_8_5_fu_1687_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_37_fu_1691_p4 <= tmp_34_fu_1669_p4;
        if to_integer(unsigned(index_assign_18_5_fu_1487_p1)) >= tmp_34_fu_1669_p4'low and to_integer(unsigned(index_assign_18_5_fu_1487_p1)) <= tmp_34_fu_1669_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_5_fu_1687_p1'range loop
                result(0) := result(0) or p_Repl2_8_5_fu_1687_p1(i);
            end loop;
            tmp_37_fu_1691_p4(to_integer(unsigned(index_assign_18_5_fu_1487_p1))) <= result(0);
        end if;
    end process;

    tmp_38_fu_1774_p3 <= (tmp_50_fu_1751_p1 & ap_const_lv3_1);
    tmp_39_fu_1794_p3 <= (tmp_50_fu_1751_p1 & ap_const_lv3_2);
    tmp_3_fu_522_p4 <= ap_phi_mux_p_0583_1_phi_fu_323_p4(10 downto 6);
    tmp_40_fu_1701_p3 <= tmpPixVal_V_2_fu_1565_p3(6 downto 6);
    
    tmp_41_fu_1713_p4_proc : process(tmp_37_fu_1691_p4, index_assign_18_6_fu_1507_p1, p_Repl2_8_6_fu_1709_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_41_fu_1713_p4 <= tmp_37_fu_1691_p4;
        if to_integer(unsigned(index_assign_18_6_fu_1507_p1)) >= tmp_37_fu_1691_p4'low and to_integer(unsigned(index_assign_18_6_fu_1507_p1)) <= tmp_37_fu_1691_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_6_fu_1709_p1'range loop
                result(0) := result(0) or p_Repl2_8_6_fu_1709_p1(i);
            end loop;
            tmp_41_fu_1713_p4(to_integer(unsigned(index_assign_18_6_fu_1507_p1))) <= result(0);
        end if;
    end process;

    tmp_42_fu_1723_p3 <= tmpPixVal_V_2_fu_1565_p3(7 downto 7);
    
    tmp_43_fu_1735_p4_proc : process(tmp_41_fu_1713_p4, index_assign_18_7_fu_1527_p1, p_Repl2_8_7_fu_1731_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_43_fu_1735_p4 <= tmp_41_fu_1713_p4;
        if to_integer(unsigned(index_assign_18_7_fu_1527_p1)) >= tmp_41_fu_1713_p4'low and to_integer(unsigned(index_assign_18_7_fu_1527_p1)) <= tmp_41_fu_1713_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_7_fu_1731_p1'range loop
                result(0) := result(0) or p_Repl2_8_7_fu_1731_p1(i);
            end loop;
            tmp_43_fu_1735_p4(to_integer(unsigned(index_assign_18_7_fu_1527_p1))) <= result(0);
        end if;
    end process;

    tmp_45_fu_1814_p3 <= (tmp_50_fu_1751_p1 & ap_const_lv3_3);
    tmp_46_fu_1834_p3 <= (tmp_50_fu_1751_p1 & ap_const_lv3_4);
    tmp_47_fu_600_p2 <= std_logic_vector(unsigned(tmp_11_cast_fu_588_p1) + unsigned(tmp_89_cast_fu_592_p3));
    tmp_48_fu_1854_p3 <= (tmp_50_fu_1751_p1 & ap_const_lv3_5);
    tmp_49_fu_1874_p3 <= (tmp_50_fu_1751_p1 & ap_const_lv3_6);
    tmp_4_fu_1419_p3 <= (tmp_7_fu_1375_p1 & ap_const_lv3_2);
    tmp_50_fu_1751_p1 <= vCntReg_V_load_reg_2165(6 - 1 downto 0);
    tmp_51_fu_1766_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_2_fu_1762_p1)) downto to_integer(unsigned(index_assign_2_fu_1762_p1))) when (to_integer(unsigned(index_assign_2_fu_1762_p1))>= 0 and to_integer(unsigned(index_assign_2_fu_1762_p1))<=511) else "-";
    tmp_52_fu_1786_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_1_fu_1782_p1)) downto to_integer(unsigned(index_assign_22_1_fu_1782_p1))) when (to_integer(unsigned(index_assign_22_1_fu_1782_p1))>= 0 and to_integer(unsigned(index_assign_22_1_fu_1782_p1))<=511) else "-";
    tmp_53_fu_1806_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_2_fu_1802_p1)) downto to_integer(unsigned(index_assign_22_2_fu_1802_p1))) when (to_integer(unsigned(index_assign_22_2_fu_1802_p1))>= 0 and to_integer(unsigned(index_assign_22_2_fu_1802_p1))<=511) else "-";
    tmp_54_fu_1826_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_3_fu_1822_p1)) downto to_integer(unsigned(index_assign_22_3_fu_1822_p1))) when (to_integer(unsigned(index_assign_22_3_fu_1822_p1))>= 0 and to_integer(unsigned(index_assign_22_3_fu_1822_p1))<=511) else "-";
    tmp_55_fu_1846_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_4_fu_1842_p1)) downto to_integer(unsigned(index_assign_22_4_fu_1842_p1))) when (to_integer(unsigned(index_assign_22_4_fu_1842_p1))>= 0 and to_integer(unsigned(index_assign_22_4_fu_1842_p1))<=511) else "-";
    tmp_56_fu_1866_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_5_fu_1862_p1)) downto to_integer(unsigned(index_assign_22_5_fu_1862_p1))) when (to_integer(unsigned(index_assign_22_5_fu_1862_p1))>= 0 and to_integer(unsigned(index_assign_22_5_fu_1862_p1))<=511) else "-";
    tmp_57_fu_1886_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_6_fu_1882_p1)) downto to_integer(unsigned(index_assign_22_6_fu_1882_p1))) when (to_integer(unsigned(index_assign_22_6_fu_1882_p1))>= 0 and to_integer(unsigned(index_assign_22_6_fu_1882_p1))<=511) else "-";
    tmp_58_fu_1894_p3 <= (tmp_50_fu_1751_p1 & ap_const_lv3_7);
    tmp_59_fu_622_p2 <= (vCntReg_V or hCntReg_V);
    tmp_5_fu_1439_p3 <= (tmp_7_fu_1375_p1 & ap_const_lv3_3);
    tmp_60_fu_628_p2 <= "1" when (tmp_59_fu_622_p2 = ap_const_lv12_0) else "0";
    tmp_61_fu_634_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(hCntReg_V));
    tmp_62_fu_641_p2 <= "1" when (tmp_61_fu_634_p2 = ap_const_lv12_320) else "0";
    tmp_63_fu_647_p2 <= std_logic_vector(unsigned(vCntReg_V) + unsigned(ap_const_lv12_1));
    tmp_64_fu_653_p2 <= "1" when (tmp_63_fu_647_p2 = ap_const_lv12_258) else "0";
    tmp_65_fu_1906_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_7_fu_1902_p1)) downto to_integer(unsigned(index_assign_22_7_fu_1902_p1))) when (to_integer(unsigned(index_assign_22_7_fu_1902_p1))>= 0 and to_integer(unsigned(index_assign_22_7_fu_1902_p1))<=511) else "-";
    tmp_66_fu_684_p2 <= "1" when (r_V_1_fu_680_p1 = ap_const_lv20_0) else "0";
    tmp_67_fu_2052_p2 <= "1" when (unsigned(startX_V) > unsigned(ap_const_lv16_12B)) else "0";
    tmp_68_fu_2058_p2 <= std_logic_vector(unsigned(startX_V) + unsigned(ap_const_lv16_1));
    tmp_69_fu_2082_p2 <= "1" when (unsigned(startY_V) > unsigned(ap_const_lv16_C7)) else "0";
    tmp_6_fu_540_p2 <= std_logic_vector(unsigned(tmp_fu_518_p1) + unsigned(tmp_18_cast_fu_532_p3));
    tmp_70_fu_2088_p2 <= std_logic_vector(unsigned(startY_V) + unsigned(ap_const_lv16_1));
    tmp_71_fu_708_p2 <= std_logic_vector(unsigned(cntReg_V) + unsigned(ap_const_lv64_1));
    tmp_72_fu_2112_p2 <= std_logic_vector(unsigned(evCntReg_V) + unsigned(ap_const_lv64_1));
    tmp_73_fu_730_p3 <= (tmp_98_fu_726_p1 & ap_const_lv3_0);
    tmp_74_fu_750_p3 <= (tmp_98_fu_726_p1 & ap_const_lv3_1);
    tmp_75_fu_770_p3 <= (tmp_98_fu_726_p1 & ap_const_lv3_2);
    tmp_76_fu_790_p3 <= (tmp_98_fu_726_p1 & ap_const_lv3_3);
    tmp_77_fu_810_p3 <= (tmp_98_fu_726_p1 & ap_const_lv3_4);
    tmp_78_fu_830_p3 <= (tmp_98_fu_726_p1 & ap_const_lv3_5);
    tmp_79_fu_850_p3 <= (tmp_98_fu_726_p1 & ap_const_lv3_6);
    tmp_7_fu_1375_p1 <= p_0583_1_reg_319(6 - 1 downto 0);
    tmp_80_fu_870_p3 <= (tmp_98_fu_726_p1 & ap_const_lv3_7);
    tmp_81_fu_1105_p3 <= (tmp_124_fu_1102_p1 & ap_const_lv3_0);
    tmp_82_fu_1125_p3 <= (tmp_124_fu_1102_p1 & ap_const_lv3_1);
    tmp_83_fu_1145_p3 <= (tmp_124_fu_1102_p1 & ap_const_lv3_2);
    tmp_84_fu_1165_p3 <= (tmp_124_fu_1102_p1 & ap_const_lv3_3);
    tmp_85_fu_1185_p3 <= (tmp_124_fu_1102_p1 & ap_const_lv3_4);
    tmp_86_fu_1205_p3 <= (tmp_124_fu_1102_p1 & ap_const_lv3_5);
    tmp_87_fu_1225_p3 <= (tmp_124_fu_1102_p1 & ap_const_lv3_6);
    tmp_88_fu_1245_p3 <= (tmp_124_fu_1102_p1 & ap_const_lv3_7);
    tmp_89_cast_fu_592_p3 <= (grp_fu_471_p4 & ap_const_lv9_0);
    
    tmp_89_fu_1943_p4_proc : process(glDVSSlice_V_0_q0, index_assign_2_fu_1762_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_89_fu_1943_p4 <= glDVSSlice_V_0_q0;
        if to_integer(unsigned(index_assign_2_fu_1762_p1)) >= glDVSSlice_V_0_q0'low and to_integer(unsigned(index_assign_2_fu_1762_p1)) <= glDVSSlice_V_0_q0'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_89_fu_1943_p4(to_integer(unsigned(index_assign_2_fu_1762_p1))) <= result(0);
        end if;
    end process;

    tmp_8_fu_1391_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_s_fu_1387_p1)) downto to_integer(unsigned(index_assign_s_fu_1387_p1))) when (to_integer(unsigned(index_assign_s_fu_1387_p1))>= 0 and to_integer(unsigned(index_assign_s_fu_1387_p1))<=511) else "-";
    tmp_90_cast_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_600_p2),64));
    
    tmp_90_fu_1953_p4_proc : process(tmp_89_fu_1943_p4, index_assign_22_1_fu_1782_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_90_fu_1953_p4 <= tmp_89_fu_1943_p4;
        if to_integer(unsigned(index_assign_22_1_fu_1782_p1)) >= tmp_89_fu_1943_p4'low and to_integer(unsigned(index_assign_22_1_fu_1782_p1)) <= tmp_89_fu_1943_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_90_fu_1953_p4(to_integer(unsigned(index_assign_22_1_fu_1782_p1))) <= result(0);
        end if;
    end process;

    
    tmp_91_fu_1963_p4_proc : process(tmp_90_fu_1953_p4, index_assign_22_2_fu_1802_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_91_fu_1963_p4 <= tmp_90_fu_1953_p4;
        if to_integer(unsigned(index_assign_22_2_fu_1802_p1)) >= tmp_90_fu_1953_p4'low and to_integer(unsigned(index_assign_22_2_fu_1802_p1)) <= tmp_90_fu_1953_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_91_fu_1963_p4(to_integer(unsigned(index_assign_22_2_fu_1802_p1))) <= result(0);
        end if;
    end process;

    tmp_92_cast_fu_569_p3 <= (grp_fu_471_p4 & ap_const_lv9_0);
    
    tmp_92_fu_1973_p4_proc : process(tmp_91_fu_1963_p4, index_assign_22_3_fu_1822_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_92_fu_1973_p4 <= tmp_91_fu_1963_p4;
        if to_integer(unsigned(index_assign_22_3_fu_1822_p1)) >= tmp_91_fu_1963_p4'low and to_integer(unsigned(index_assign_22_3_fu_1822_p1)) <= tmp_91_fu_1963_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_92_fu_1973_p4(to_integer(unsigned(index_assign_22_3_fu_1822_p1))) <= result(0);
        end if;
    end process;

    tmp_93_cast_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_93_fu_577_p2),64));
    tmp_93_fu_577_p2 <= std_logic_vector(unsigned(tmp_26_cast_fu_565_p1) + unsigned(tmp_92_cast_fu_569_p3));
    
    tmp_94_fu_1983_p4_proc : process(tmp_92_fu_1973_p4, index_assign_22_4_fu_1842_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_94_fu_1983_p4 <= tmp_92_fu_1973_p4;
        if to_integer(unsigned(index_assign_22_4_fu_1842_p1)) >= tmp_92_fu_1973_p4'low and to_integer(unsigned(index_assign_22_4_fu_1842_p1)) <= tmp_92_fu_1973_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_94_fu_1983_p4(to_integer(unsigned(index_assign_22_4_fu_1842_p1))) <= result(0);
        end if;
    end process;

    
    tmp_95_fu_1993_p4_proc : process(tmp_94_fu_1983_p4, index_assign_22_5_fu_1862_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_95_fu_1993_p4 <= tmp_94_fu_1983_p4;
        if to_integer(unsigned(index_assign_22_5_fu_1862_p1)) >= tmp_94_fu_1983_p4'low and to_integer(unsigned(index_assign_22_5_fu_1862_p1)) <= tmp_94_fu_1983_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_95_fu_1993_p4(to_integer(unsigned(index_assign_22_5_fu_1862_p1))) <= result(0);
        end if;
    end process;

    
    tmp_96_fu_2003_p4_proc : process(tmp_95_fu_1993_p4, index_assign_22_6_fu_1882_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_96_fu_2003_p4 <= tmp_95_fu_1993_p4;
        if to_integer(unsigned(index_assign_22_6_fu_1882_p1)) >= tmp_95_fu_1993_p4'low and to_integer(unsigned(index_assign_22_6_fu_1882_p1)) <= tmp_95_fu_1993_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_96_fu_2003_p4(to_integer(unsigned(index_assign_22_6_fu_1882_p1))) <= result(0);
        end if;
    end process;

    
    tmp_97_fu_2013_p4_proc : process(tmp_96_fu_2003_p4, index_assign_22_7_fu_1902_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_97_fu_2013_p4 <= tmp_96_fu_2003_p4;
        if to_integer(unsigned(index_assign_22_7_fu_1902_p1)) >= tmp_96_fu_2003_p4'low and to_integer(unsigned(index_assign_22_7_fu_1902_p1)) <= tmp_96_fu_2003_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_97_fu_2013_p4(to_integer(unsigned(index_assign_22_7_fu_1902_p1))) <= result(0);
        end if;
    end process;

    tmp_98_fu_726_p1 <= p_0583_1_reg_319(6 - 1 downto 0);
    tmp_99_fu_742_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_1_fu_738_p1)) downto to_integer(unsigned(index_assign_1_fu_738_p1))) when (to_integer(unsigned(index_assign_1_fu_738_p1))>= 0 and to_integer(unsigned(index_assign_1_fu_738_p1))<=511) else "-";
    tmp_9_fu_1411_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_1_fu_1407_p1)) downto to_integer(unsigned(index_assign_18_1_fu_1407_p1))) when (to_integer(unsigned(index_assign_18_1_fu_1407_p1))>= 0 and to_integer(unsigned(index_assign_18_1_fu_1407_p1))<=511) else "-";
    tmp_fu_518_p1 <= xStream_V_V_TDATA(14 - 1 downto 0);
    tmp_last_V_fu_616_p2 <= "1" when (hCntReg_V = ap_const_lv12_31F) else "0";
    tmp_s_fu_1559_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(p_Result_69_7_fu_1539_p9));
    tmp_user_V_fu_2040_p3 <= 
        ap_const_lv2_3 when (tmp_60_reg_2204(0) = '1') else 
        ap_const_lv2_0;
    vCnt_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vCntReg_V_load_3_reg_387_pp0_iter1_reg),16));

    vCnt_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_01001, ap_reg_ioackin_vCnt_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_vCnt_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            vCnt_V_ap_vld <= ap_const_logic_1;
        else 
            vCnt_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    vgaEn_V <= ap_phi_reg_pp0_iter2_val_assign_reg_458;

    vgaEn_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_01001, ap_reg_ioackin_vgaEn_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_vgaEn_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            vgaEn_V_ap_vld <= ap_const_logic_1;
        else 
            vgaEn_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    vgaOutputEn_load_load_fu_611_p1 <= vgaOutputEn;

    xStream_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xStream_V_V_TREADY <= ap_const_logic_1;
        else 
            xStream_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    yStream_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, empty_n_fu_490_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_n_fu_490_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            yStream_V_V_TREADY <= ap_const_logic_1;
        else 
            yStream_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

end behav;
