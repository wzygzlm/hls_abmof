-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity EventStreamToFrameStreamMinized is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    reg_dvsWidth : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_dvsHeight : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_sliceDuration : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_displayMode : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_status_V_i : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_status_V_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    reg_status_V_o_ap_vld : OUT STD_LOGIC;
    reg_frameCnt : OUT STD_LOGIC_VECTOR (31 downto 0);
    reg_frameCnt_ap_vld : OUT STD_LOGIC;
    xStream_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    xStream_V_V_empty_n : IN STD_LOGIC;
    xStream_V_V_read : OUT STD_LOGIC;
    yStream_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    yStream_V_V_empty_n : IN STD_LOGIC;
    yStream_V_V_read : OUT STD_LOGIC;
    polStream_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    polStream_V_V_empty_n : IN STD_LOGIC;
    polStream_V_V_read : OUT STD_LOGIC;
    tsStream_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    tsStream_V_V_empty_n : IN STD_LOGIC;
    tsStream_V_V_read : OUT STD_LOGIC;
    frameStream_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    frameStream_V_V_full_n : IN STD_LOGIC;
    frameStream_V_V_write : OUT STD_LOGIC );
end;


architecture behav of EventStreamToFrameStreamMinized is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "EventStreamToFrameStreamMinized,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z007sclg225-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.707000,HLS_SYN_LAT=80002,HLS_SYN_TPT=none,HLS_SYN_MEM=33,HLS_SYN_DSP=0,HLS_SYN_FF=284,HLS_SYN_LUT=626}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv19_75300 : STD_LOGIC_VECTOR (18 downto 0) := "1110101001100000000";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_258 : STD_LOGIC_VECTOR (9 downto 0) := "1001011000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal lastTs : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal frameCnt_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal glDVSSlice_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal glDVSSlice_V_ce0 : STD_LOGIC;
    signal glDVSSlice_V_we0 : STD_LOGIC;
    signal glDVSSlice_V_q0 : STD_LOGIC_VECTOR (255 downto 0);
    signal rotationBit_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal rotationBit_V_ce0 : STD_LOGIC;
    signal rotationBit_V_we0 : STD_LOGIC;
    signal rotationBit_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal rotationBit_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal xStream_V_V_blk_n : STD_LOGIC;
    signal tmp_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal yStream_V_V_blk_n : STD_LOGIC;
    signal polStream_V_V_blk_n : STD_LOGIC;
    signal tsStream_V_V_blk_n : STD_LOGIC;
    signal frameStream_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_634 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_634_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_233 : STD_LOGIC_VECTOR (18 downto 0);
    signal i_reg_244 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_reg_255 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_reg_599 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op32_read_state1 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal tmp_s_reg_603 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_reg_607 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_1_reg_613 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_620 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_629 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_403_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_8_mid2_v_fu_429_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_mid2_v_reg_643 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_648 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_504_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_38_reg_657 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_fu_523_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_readOneDataFromCol_fu_306_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal glDVSSlice_V_addr_reg_672 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_36_fu_568_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_36_reg_677 : STD_LOGIC_VECTOR (4 downto 0);
    signal rotationBit_V_addr_reg_683 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmpPixVal_V_1_fu_593_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal tmpData_V_writeOneDataToCol_fu_298_ap_ready : STD_LOGIC;
    signal tmpData_V_writeOneDataToCol_fu_298_ap_return : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_readOneDataFromCol_fu_306_ap_ready : STD_LOGIC;
    signal grp_readOneDataFromCol_fu_306_idx_V : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_i_phi_fu_248_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_p_s_reg_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_p_s_reg_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_p_s_reg_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal frameCnt_V_loc_reg_277 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpPixVal_V_2_reg_287 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_19_cast_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_cast_fu_518_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_cast4_fu_563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_cast_fu_588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Result_1_fu_375_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_386_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal lastTs_load_cast_fu_329_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_3_cast_fu_333_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_4_cast_fu_343_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal op2_assign_fu_337_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal exitcond3_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_409_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_mid2_fu_421_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_449_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_33_fu_455_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_471_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_481_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_mid2_cast_fu_437_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_cast_fu_489_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_493_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_cast_fu_508_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1_fu_441_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_13_fu_512_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_35_fu_540_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_34_fu_537_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_cast_fu_549_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_557_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_37_fu_571_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_cast5_fu_534_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_12_cast_fu_574_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_fu_582_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_165 : BOOLEAN;
    signal ap_condition_190 : BOOLEAN;
    signal ap_condition_126 : BOOLEAN;

    component writeOneDataToCol IS
    port (
        ap_ready : OUT STD_LOGIC;
        idx_V : IN STD_LOGIC_VECTOR (4 downto 0);
        toWriteData_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (255 downto 0) );
    end component;


    component readOneDataFromCol IS
    port (
        ap_ready : OUT STD_LOGIC;
        colData_V : IN STD_LOGIC_VECTOR (255 downto 0);
        idx_V : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component EventStreamToFrambkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (255 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (255 downto 0) );
    end component;


    component EventStreamToFramcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    glDVSSlice_V_U : component EventStreamToFrambkb
    generic map (
        DataWidth => 256,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glDVSSlice_V_address0,
        ce0 => glDVSSlice_V_ce0,
        we0 => glDVSSlice_V_we0,
        d0 => tmpData_V_writeOneDataToCol_fu_298_ap_return,
        q0 => glDVSSlice_V_q0);

    rotationBit_V_U : component EventStreamToFramcud
    generic map (
        DataWidth => 1,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rotationBit_V_address0,
        ce0 => rotationBit_V_ce0,
        we0 => rotationBit_V_we0,
        d0 => rotationBit_V_d0,
        q0 => rotationBit_V_q0);

    tmpData_V_writeOneDataToCol_fu_298 : component writeOneDataToCol
    port map (
        ap_ready => tmpData_V_writeOneDataToCol_fu_298_ap_ready,
        idx_V => tmp_36_reg_677,
        toWriteData_V => tmpPixVal_V_2_reg_287,
        ap_return => tmpData_V_writeOneDataToCol_fu_298_ap_return);

    grp_readOneDataFromCol_fu_306 : component readOneDataFromCol
    port map (
        ap_ready => grp_readOneDataFromCol_fu_306_ap_ready,
        colData_V => glDVSSlice_V_q0,
        idx_V => grp_readOneDataFromCol_fu_306_idx_V,
        ap_return => grp_readOneDataFromCol_fu_306_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_5_fu_347_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_5_fu_347_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_s_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_165)) then
                if (((icmp_fu_465_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_397_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_s_reg_266 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_s_reg_266 <= ap_phi_reg_pp0_iter0_p_s_reg_266;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_s_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_190)) then
                if (((exitcond_flatten_reg_634 = ap_const_lv1_0) and (icmp_reg_648 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_p_s_reg_266 <= grp_readOneDataFromCol_fu_306_ap_return;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_s_reg_266 <= ap_phi_reg_pp0_iter1_p_s_reg_266;
                end if;
            end if; 
        end if;
    end process;

    frameCnt_V_loc_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_reg_620 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                frameCnt_V_loc_reg_277 <= tmp_6_reg_629;
            elsif ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_5_fu_347_p2 = ap_const_lv1_1))) then 
                frameCnt_V_loc_reg_277 <= frameCnt_V;
            end if; 
        end if;
    end process;

    i_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_634 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_244 <= tmp_8_mid2_v_reg_643;
            elsif ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_5_fu_347_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_244 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_397_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_233 <= indvar_flatten_next_fu_403_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_5_fu_347_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_233 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    j_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_397_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_reg_255 <= j_1_fu_523_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_5_fu_347_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_255 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    tmpPixVal_V_2_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                if ((rotationBit_V_q0 = ap_const_lv1_1)) then 
                    tmpPixVal_V_2_reg_287 <= ap_const_lv8_1;
                elsif ((rotationBit_V_q0 = ap_const_lv1_0)) then 
                    tmpPixVal_V_2_reg_287 <= tmpPixVal_V_1_fu_593_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_634 <= exitcond_flatten_fu_397_p2;
                exitcond_flatten_reg_634_pp0_iter1_reg <= exitcond_flatten_reg_634;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_5_fu_347_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                frameCnt_V <= tmp_6_fu_357_p2;
                lastTs <= tsStream_V_V_dout;
                tmp_6_reg_629 <= tmp_6_fu_357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                glDVSSlice_V_addr_reg_672 <= tmp_10_cast4_fu_563_p1(11 - 1 downto 0);
                rotationBit_V_addr_reg_683 <= tmp_13_cast_fu_588_p1(16 - 1 downto 0);
                tmp_36_reg_677 <= tmp_36_fu_568_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_397_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_reg_648 <= icmp_fu_465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_397_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_fu_465_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_38_reg_657 <= tmp_38_fu_504_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (ap_predicate_op32_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_5_reg_620 <= tmp_5_fu_347_p2;
                tmp_V_1_reg_613 <= yStream_V_V_dout;
                tmp_V_reg_607 <= xStream_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_397_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_8_mid2_v_reg_643 <= tmp_8_mid2_v_fu_429_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_reg_599 <= tmp_fu_313_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_s_reg_603 <= tmp_s_fu_319_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, xStream_V_V_empty_n, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, tmp_fu_313_p2, tmp_s_fu_319_p2, ap_enable_reg_pp0_iter2, ap_predicate_op32_read_state1, tmp_5_fu_347_p2, exitcond_flatten_fu_397_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((tmp_s_fu_319_p2 = ap_const_lv1_1) or (tmp_fu_313_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_5_fu_347_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_5_fu_347_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_397_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_397_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(frameStream_V_V_full_n, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_634_pp0_iter1_reg)
    begin
                ap_block_pp0_stage0_01001 <= ((exitcond_flatten_reg_634_pp0_iter1_reg = ap_const_lv1_0) and (frameStream_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(frameStream_V_V_full_n, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_634_pp0_iter1_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((exitcond_flatten_reg_634_pp0_iter1_reg = ap_const_lv1_0) and (frameStream_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(frameStream_V_V_full_n, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_634_pp0_iter1_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((exitcond_flatten_reg_634_pp0_iter1_reg = ap_const_lv1_0) and (frameStream_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, xStream_V_V_empty_n, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, ap_predicate_op32_read_state1)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(frameStream_V_V_full_n, exitcond_flatten_reg_634_pp0_iter1_reg)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((exitcond_flatten_reg_634_pp0_iter1_reg = ap_const_lv1_0) and (frameStream_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_126_assign_proc : process(ap_start, ap_CS_fsm_state1, xStream_V_V_empty_n, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, ap_predicate_op32_read_state1)
    begin
                ap_condition_126 <= (not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1));
    end process;


    ap_condition_165_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_165 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_190_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_190 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_397_p2)
    begin
        if ((exitcond_flatten_fu_397_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_248_p4_assign_proc : process(ap_block_pp0_stage0, exitcond_flatten_reg_634, i_reg_244, ap_CS_fsm_pp0_stage0, tmp_8_mid2_v_reg_643, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_634 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_248_p4 <= tmp_8_mid2_v_reg_643;
        else 
            ap_phi_mux_i_phi_fu_248_p4 <= i_reg_244;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_s_reg_266 <= "XXXXXXXX";

    ap_predicate_op32_read_state1_assign_proc : process(tmp_fu_313_p2, tmp_s_fu_319_p2)
    begin
                ap_predicate_op32_read_state1 <= ((tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond3_fu_415_p2 <= "1" when (j_reg_255 = ap_const_lv10_258) else "0";
    exitcond_flatten_fu_397_p2 <= "1" when (indvar_flatten_reg_233 = ap_const_lv19_75300) else "0";

    frameStream_V_V_blk_n_assign_proc : process(frameStream_V_V_full_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond_flatten_reg_634_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_634_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            frameStream_V_V_blk_n <= frameStream_V_V_full_n;
        else 
            frameStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    frameStream_V_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter2_p_s_reg_266),32));

    frameStream_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_634_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_634_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            frameStream_V_V_write <= ap_const_logic_1;
        else 
            frameStream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, glDVSSlice_V_addr_reg_672, ap_CS_fsm_state5, ap_CS_fsm_state7, tmp_19_cast_fu_499_p1, tmp_10_cast4_fu_563_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            glDVSSlice_V_address0 <= glDVSSlice_V_addr_reg_672;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            glDVSSlice_V_address0 <= tmp_10_cast4_fu_563_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            glDVSSlice_V_address0 <= tmp_19_cast_fu_499_p1(11 - 1 downto 0);
        else 
            glDVSSlice_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glDVSSlice_V_ce0 <= ap_const_logic_1;
        else 
            glDVSSlice_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_we0_assign_proc : process(tmp_reg_599, tmp_s_reg_603, ap_CS_fsm_state7)
    begin
        if (((tmp_s_reg_603 = ap_const_lv1_0) and (tmp_reg_599 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            glDVSSlice_V_we0 <= ap_const_logic_1;
        else 
            glDVSSlice_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_readOneDataFromCol_fu_306_idx_V_assign_proc : process(ap_block_pp0_stage0, exitcond_flatten_reg_634, ap_CS_fsm_pp0_stage0, icmp_reg_648, tmp_38_reg_657, ap_enable_reg_pp0_iter1, tmp_36_reg_677, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_readOneDataFromCol_fu_306_idx_V <= tmp_36_reg_677;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_634 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_reg_648 = ap_const_lv1_1))) then 
            grp_readOneDataFromCol_fu_306_idx_V <= tmp_38_reg_657;
        else 
            grp_readOneDataFromCol_fu_306_idx_V <= "XXXXX";
        end if; 
    end process;

    i_1_fu_409_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_248_p4) + unsigned(ap_const_lv10_1));
    icmp_fu_465_p2 <= "1" when (tmp_33_fu_455_p4 = ap_const_lv2_0) else "0";
    indvar_flatten_next_fu_403_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_233) + unsigned(ap_const_lv19_1));
    j_1_fu_523_p2 <= std_logic_vector(unsigned(j_mid2_fu_421_p3) + unsigned(ap_const_lv10_1));
    j_mid2_fu_421_p3 <= 
        ap_const_lv10_0 when (exitcond3_fu_415_p2(0) = '1') else 
        j_reg_255;
    lastTs_load_cast_fu_329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lastTs),33));
    op2_assign_fu_337_p2 <= std_logic_vector(unsigned(lastTs_load_cast_fu_329_p1) + unsigned(tmp_3_cast_fu_333_p1));
    
    p_Result_1_fu_375_p4_proc : process(reg_status_V_i)
    begin
        p_Result_1_fu_375_p4 <= reg_status_V_i;
        p_Result_1_fu_375_p4(1) <= ap_const_lv1_1(0);
    end process;

    
    p_Result_s_fu_386_p4_proc : process(reg_status_V_i)
    begin
        p_Result_s_fu_386_p4 <= reg_status_V_i;
        p_Result_s_fu_386_p4(0) <= ap_const_lv1_1(0);
    end process;


    polStream_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, polStream_V_V_empty_n, tmp_fu_313_p2, tmp_s_fu_319_p2)
    begin
        if (((tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            polStream_V_V_blk_n <= polStream_V_V_empty_n;
        else 
            polStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    polStream_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, xStream_V_V_empty_n, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, ap_predicate_op32_read_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (ap_predicate_op32_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            polStream_V_V_read <= ap_const_logic_1;
        else 
            polStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    reg_frameCnt <= frameCnt_V_loc_reg_277;

    reg_frameCnt_ap_vld_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            reg_frameCnt_ap_vld <= ap_const_logic_1;
        else 
            reg_frameCnt_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    reg_status_V_o_assign_proc : process(reg_status_V_i, tmp_fu_313_p2, tmp_s_fu_319_p2, p_Result_1_fu_375_p4, p_Result_s_fu_386_p4, ap_condition_126)
    begin
        if ((ap_const_boolean_1 = ap_condition_126)) then
            if ((tmp_fu_313_p2 = ap_const_lv1_1)) then 
                reg_status_V_o <= p_Result_s_fu_386_p4;
            elsif (((tmp_s_fu_319_p2 = ap_const_lv1_1) and (tmp_fu_313_p2 = ap_const_lv1_0))) then 
                reg_status_V_o <= p_Result_1_fu_375_p4;
            else 
                reg_status_V_o <= reg_status_V_i;
            end if;
        else 
            reg_status_V_o <= reg_status_V_i;
        end if; 
    end process;


    reg_status_V_o_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, xStream_V_V_empty_n, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, tmp_fu_313_p2, tmp_s_fu_319_p2, ap_predicate_op32_read_state1)
    begin
        if (((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_s_fu_319_p2 = ap_const_lv1_1) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (tmp_fu_313_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            reg_status_V_o_ap_vld <= ap_const_logic_1;
        else 
            reg_status_V_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rotationBit_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state5, rotationBit_V_addr_reg_683, ap_CS_fsm_state6, tmp_20_cast_fu_518_p1, tmp_13_cast_fu_588_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rotationBit_V_address0 <= rotationBit_V_addr_reg_683;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rotationBit_V_address0 <= tmp_13_cast_fu_588_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rotationBit_V_address0 <= tmp_20_cast_fu_518_p1(16 - 1 downto 0);
        else 
            rotationBit_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rotationBit_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            rotationBit_V_ce0 <= ap_const_logic_1;
        else 
            rotationBit_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rotationBit_V_d0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rotationBit_V_d0 <= ap_const_lv1_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rotationBit_V_d0 <= ap_const_lv1_1;
        else 
            rotationBit_V_d0 <= "X";
        end if; 
    end process;


    rotationBit_V_we0_assign_proc : process(rotationBit_V_q0, exitcond_flatten_fu_397_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, icmp_fu_465_p2, ap_CS_fsm_state6)
    begin
        if ((((rotationBit_V_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((exitcond_flatten_fu_397_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_fu_465_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            rotationBit_V_we0 <= ap_const_logic_1;
        else 
            rotationBit_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmpPixVal_V_1_fu_593_p2 <= std_logic_vector(unsigned(grp_readOneDataFromCol_fu_306_ap_return) + unsigned(ap_const_lv8_1));
    tmp_10_cast4_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_557_p2),64));
    tmp_10_fu_471_p4 <= j_mid2_fu_421_p3(7 downto 5);
    tmp_11_fu_481_p3 <= (tmp_10_fu_471_p4 & ap_const_lv8_0);
    tmp_12_cast_fu_574_p3 <= (tmp_37_fu_571_p1 & ap_const_lv8_0);
    tmp_12_fu_493_p2 <= std_logic_vector(unsigned(tmp_8_mid2_cast_fu_437_p1) + unsigned(tmp_18_cast_fu_489_p1));
    tmp_13_cast_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_582_p2),64));
    tmp_13_fu_512_p2 <= std_logic_vector(unsigned(tmp_7_cast_fu_508_p1) + unsigned(tmp_1_fu_441_p3));
    tmp_18_cast_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_481_p3),12));
    tmp_19_cast_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_493_p2),64));
    tmp_1_fu_441_p3 <= (tmp_8_mid2_v_fu_429_p3 & ap_const_lv8_0);
    tmp_20_cast_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_512_p2),64));
    tmp_33_fu_455_p4 <= tmp_7_fu_449_p2(9 downto 8);
    tmp_34_fu_537_p1 <= tmp_V_reg_607(13 - 1 downto 0);
    tmp_35_fu_540_p4 <= tmp_V_1_reg_613(9 downto 5);
    tmp_36_fu_568_p1 <= tmp_V_1_reg_613(5 - 1 downto 0);
    tmp_37_fu_571_p1 <= tmp_V_1_reg_613(10 - 1 downto 0);
    tmp_38_fu_504_p1 <= j_mid2_fu_421_p3(5 - 1 downto 0);
    tmp_3_cast_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_sliceDuration),33));
    tmp_4_cast_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tsStream_V_V_dout),33));
    tmp_5_fu_347_p2 <= "1" when (unsigned(tmp_4_cast_fu_343_p1) < unsigned(op2_assign_fu_337_p2)) else "0";
    tmp_6_fu_357_p2 <= std_logic_vector(unsigned(frameCnt_V) + unsigned(ap_const_lv32_1));
    tmp_7_cast_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_fu_421_p3),18));
    tmp_7_fu_449_p2 <= (tmp_8_mid2_v_fu_429_p3 or j_mid2_fu_421_p3);
    tmp_8_cast_fu_549_p3 <= (tmp_35_fu_540_p4 & ap_const_lv8_0);
    tmp_8_fu_557_p2 <= std_logic_vector(unsigned(tmp_34_fu_537_p1) + unsigned(tmp_8_cast_fu_549_p3));
    tmp_8_mid2_cast_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_mid2_v_fu_429_p3),12));
    tmp_8_mid2_v_fu_429_p3 <= 
        i_1_fu_409_p2 when (exitcond3_fu_415_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_248_p4;
    tmp_9_cast5_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_reg_607),18));
    tmp_9_fu_582_p2 <= std_logic_vector(unsigned(tmp_9_cast5_fu_534_p1) + unsigned(tmp_12_cast_fu_574_p3));
    tmp_fu_313_p2 <= "1" when (unsigned(reg_dvsWidth) > unsigned(ap_const_lv32_100)) else "0";
    tmp_s_fu_319_p2 <= "1" when (unsigned(reg_dvsHeight) > unsigned(ap_const_lv32_100)) else "0";

    tsStream_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, tsStream_V_V_empty_n, tmp_fu_313_p2, tmp_s_fu_319_p2)
    begin
        if (((tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            tsStream_V_V_blk_n <= tsStream_V_V_empty_n;
        else 
            tsStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tsStream_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, xStream_V_V_empty_n, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, ap_predicate_op32_read_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (ap_predicate_op32_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            tsStream_V_V_read <= ap_const_logic_1;
        else 
            tsStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    xStream_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, xStream_V_V_empty_n, tmp_fu_313_p2, tmp_s_fu_319_p2)
    begin
        if (((tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            xStream_V_V_blk_n <= xStream_V_V_empty_n;
        else 
            xStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    xStream_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, xStream_V_V_empty_n, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, ap_predicate_op32_read_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (ap_predicate_op32_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xStream_V_V_read <= ap_const_logic_1;
        else 
            xStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    yStream_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, yStream_V_V_empty_n, tmp_fu_313_p2, tmp_s_fu_319_p2)
    begin
        if (((tmp_s_fu_319_p2 = ap_const_lv1_0) and (tmp_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            yStream_V_V_blk_n <= yStream_V_V_empty_n;
        else 
            yStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    yStream_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, xStream_V_V_empty_n, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, ap_predicate_op32_read_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or ((tsStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((polStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((yStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)) or ((xStream_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1)))) and (ap_predicate_op32_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            yStream_V_V_read <= ap_const_logic_1;
        else 
            yStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
