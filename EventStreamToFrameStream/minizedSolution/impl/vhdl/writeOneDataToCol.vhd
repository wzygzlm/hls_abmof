-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity writeOneDataToCol is
port (
    ap_ready : OUT STD_LOGIC;
    idx_V : IN STD_LOGIC_VECTOR (4 downto 0);
    toWriteData_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (255 downto 0) );
end;


architecture behav of writeOneDataToCol is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_fu_58_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_70_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_assign_fu_66_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_2_fu_74_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_88_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_100_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_78_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal index_assign_s_fu_96_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_2_1_fu_108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_122_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_134_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_112_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal index_assign_2_fu_130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_2_2_fu_142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_156_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_168_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_146_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal index_assign_3_fu_164_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_2_3_fu_176_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_190_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_202_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_180_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal index_assign_4_fu_198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_2_4_fu_210_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_224_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_236_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_214_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal index_assign_5_fu_232_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_2_5_fu_244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_258_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_270_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_248_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal index_assign_6_fu_266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_2_6_fu_278_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_292_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_304_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_282_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal index_assign_7_fu_300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_2_7_fu_312_p1 : STD_LOGIC_VECTOR (63 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    
    ap_return_proc : process(tmp_21_fu_282_p4, index_assign_7_fu_300_p1, p_Repl2_2_7_fu_312_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        ap_return <= tmp_21_fu_282_p4;
        if to_integer(unsigned(index_assign_7_fu_300_p1)) >= tmp_21_fu_282_p4'low and to_integer(unsigned(index_assign_7_fu_300_p1)) <= tmp_21_fu_282_p4'high then
            result(0) := '0';
            for i in p_Repl2_2_7_fu_312_p1'range loop
                result(0) := result(0) or p_Repl2_2_7_fu_312_p1(i);
            end loop;
            ap_return(to_integer(unsigned(index_assign_7_fu_300_p1))) <= result(0);
        end if;
    end process;

    index_assign_2_fu_130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_122_p3),32));
    index_assign_3_fu_164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_156_p3),32));
    index_assign_4_fu_198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_190_p3),32));
    index_assign_5_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_224_p3),32));
    index_assign_6_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_258_p3),32));
    index_assign_7_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_292_p3),32));
    index_assign_fu_66_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_58_p3),32));
    index_assign_s_fu_96_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_88_p3),32));
    p_Repl2_2_1_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_100_p3),64));
    p_Repl2_2_2_fu_142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_134_p3),64));
    p_Repl2_2_3_fu_176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_168_p3),64));
    p_Repl2_2_4_fu_210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_202_p3),64));
    p_Repl2_2_5_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_236_p3),64));
    p_Repl2_2_6_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_270_p3),64));
    p_Repl2_2_7_fu_312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_304_p3),64));
    p_Repl2_2_fu_74_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_70_p1),64));
    tmp_10_fu_100_p3 <= toWriteData_V(1 downto 1);
    
    tmp_11_fu_112_p4_proc : process(tmp_9_fu_78_p4, index_assign_s_fu_96_p1, p_Repl2_2_1_fu_108_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_11_fu_112_p4 <= tmp_9_fu_78_p4;
        if to_integer(unsigned(index_assign_s_fu_96_p1)) >= tmp_9_fu_78_p4'low and to_integer(unsigned(index_assign_s_fu_96_p1)) <= tmp_9_fu_78_p4'high then
            result(0) := '0';
            for i in p_Repl2_2_1_fu_108_p1'range loop
                result(0) := result(0) or p_Repl2_2_1_fu_108_p1(i);
            end loop;
            tmp_11_fu_112_p4(to_integer(unsigned(index_assign_s_fu_96_p1))) <= result(0);
        end if;
    end process;

    tmp_12_fu_134_p3 <= toWriteData_V(2 downto 2);
    
    tmp_13_fu_146_p4_proc : process(tmp_11_fu_112_p4, index_assign_2_fu_130_p1, p_Repl2_2_2_fu_142_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_13_fu_146_p4 <= tmp_11_fu_112_p4;
        if to_integer(unsigned(index_assign_2_fu_130_p1)) >= tmp_11_fu_112_p4'low and to_integer(unsigned(index_assign_2_fu_130_p1)) <= tmp_11_fu_112_p4'high then
            result(0) := '0';
            for i in p_Repl2_2_2_fu_142_p1'range loop
                result(0) := result(0) or p_Repl2_2_2_fu_142_p1(i);
            end loop;
            tmp_13_fu_146_p4(to_integer(unsigned(index_assign_2_fu_130_p1))) <= result(0);
        end if;
    end process;

    tmp_14_fu_168_p3 <= toWriteData_V(3 downto 3);
    
    tmp_15_fu_180_p4_proc : process(tmp_13_fu_146_p4, index_assign_3_fu_164_p1, p_Repl2_2_3_fu_176_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_15_fu_180_p4 <= tmp_13_fu_146_p4;
        if to_integer(unsigned(index_assign_3_fu_164_p1)) >= tmp_13_fu_146_p4'low and to_integer(unsigned(index_assign_3_fu_164_p1)) <= tmp_13_fu_146_p4'high then
            result(0) := '0';
            for i in p_Repl2_2_3_fu_176_p1'range loop
                result(0) := result(0) or p_Repl2_2_3_fu_176_p1(i);
            end loop;
            tmp_15_fu_180_p4(to_integer(unsigned(index_assign_3_fu_164_p1))) <= result(0);
        end if;
    end process;

    tmp_16_fu_202_p3 <= toWriteData_V(4 downto 4);
    
    tmp_17_fu_214_p4_proc : process(tmp_15_fu_180_p4, index_assign_4_fu_198_p1, p_Repl2_2_4_fu_210_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_17_fu_214_p4 <= tmp_15_fu_180_p4;
        if to_integer(unsigned(index_assign_4_fu_198_p1)) >= tmp_15_fu_180_p4'low and to_integer(unsigned(index_assign_4_fu_198_p1)) <= tmp_15_fu_180_p4'high then
            result(0) := '0';
            for i in p_Repl2_2_4_fu_210_p1'range loop
                result(0) := result(0) or p_Repl2_2_4_fu_210_p1(i);
            end loop;
            tmp_17_fu_214_p4(to_integer(unsigned(index_assign_4_fu_198_p1))) <= result(0);
        end if;
    end process;

    tmp_18_fu_236_p3 <= toWriteData_V(5 downto 5);
    
    tmp_19_fu_248_p4_proc : process(tmp_17_fu_214_p4, index_assign_5_fu_232_p1, p_Repl2_2_5_fu_244_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_19_fu_248_p4 <= tmp_17_fu_214_p4;
        if to_integer(unsigned(index_assign_5_fu_232_p1)) >= tmp_17_fu_214_p4'low and to_integer(unsigned(index_assign_5_fu_232_p1)) <= tmp_17_fu_214_p4'high then
            result(0) := '0';
            for i in p_Repl2_2_5_fu_244_p1'range loop
                result(0) := result(0) or p_Repl2_2_5_fu_244_p1(i);
            end loop;
            tmp_19_fu_248_p4(to_integer(unsigned(index_assign_5_fu_232_p1))) <= result(0);
        end if;
    end process;

    tmp_1_fu_88_p3 <= (idx_V & ap_const_lv3_1);
    tmp_20_fu_270_p3 <= toWriteData_V(6 downto 6);
    
    tmp_21_fu_282_p4_proc : process(tmp_19_fu_248_p4, index_assign_6_fu_266_p1, p_Repl2_2_6_fu_278_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_21_fu_282_p4 <= tmp_19_fu_248_p4;
        if to_integer(unsigned(index_assign_6_fu_266_p1)) >= tmp_19_fu_248_p4'low and to_integer(unsigned(index_assign_6_fu_266_p1)) <= tmp_19_fu_248_p4'high then
            result(0) := '0';
            for i in p_Repl2_2_6_fu_278_p1'range loop
                result(0) := result(0) or p_Repl2_2_6_fu_278_p1(i);
            end loop;
            tmp_21_fu_282_p4(to_integer(unsigned(index_assign_6_fu_266_p1))) <= result(0);
        end if;
    end process;

    tmp_22_fu_304_p3 <= toWriteData_V(7 downto 7);
    tmp_2_fu_122_p3 <= (idx_V & ap_const_lv3_2);
    tmp_3_fu_156_p3 <= (idx_V & ap_const_lv3_3);
    tmp_4_fu_190_p3 <= (idx_V & ap_const_lv3_4);
    tmp_5_fu_224_p3 <= (idx_V & ap_const_lv3_5);
    tmp_6_fu_258_p3 <= (idx_V & ap_const_lv3_6);
    tmp_7_fu_292_p3 <= (idx_V & ap_const_lv3_7);
    tmp_8_fu_70_p1 <= toWriteData_V(1 - 1 downto 0);
    
    tmp_9_fu_78_p4_proc : process(index_assign_fu_66_p1, p_Repl2_2_fu_74_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_9_fu_78_p4 <= ap_const_lv256_lc_1;
        if to_integer(unsigned(index_assign_fu_66_p1)) >= ap_const_lv256_lc_1'low and to_integer(unsigned(index_assign_fu_66_p1)) <= ap_const_lv256_lc_1'high then
            result(0) := '0';
            for i in p_Repl2_2_fu_74_p1'range loop
                result(0) := result(0) or p_Repl2_2_fu_74_p1(i);
            end loop;
            tmp_9_fu_78_p4(to_integer(unsigned(index_assign_fu_66_p1))) <= result(0);
        end if;
    end process;

    tmp_fu_58_p3 <= (idx_V & ap_const_lv3_0);
end behav;
