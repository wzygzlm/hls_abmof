-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity parseEvents is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    data_empty_n : IN STD_LOGIC;
    data_read : OUT STD_LOGIC;
    eventsArraySize : IN STD_LOGIC_VECTOR (31 downto 0);
    eventSlice_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    eventSlice_full_n : IN STD_LOGIC;
    eventSlice_write : OUT STD_LOGIC );
end;


architecture behav of parseEvents is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "parseEvents,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z007sclg225-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.307000,HLS_SYN_LAT=20003,HLS_SYN_TPT=none,HLS_SYN_MEM=240,HLS_SYN_DSP=0,HLS_SYN_FF=503,HLS_SYN_LUT=3634}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal glPLActiveSliceIdx_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal glPLSlice0_V_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_0_ce0 : STD_LOGIC;
    signal glPLSlice0_V_0_we0 : STD_LOGIC;
    signal glPLSlice0_V_0_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_1_ce0 : STD_LOGIC;
    signal glPLSlice0_V_1_we0 : STD_LOGIC;
    signal glPLSlice0_V_1_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_2_ce0 : STD_LOGIC;
    signal glPLSlice0_V_2_we0 : STD_LOGIC;
    signal glPLSlice0_V_2_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_3_ce0 : STD_LOGIC;
    signal glPLSlice0_V_3_we0 : STD_LOGIC;
    signal glPLSlice0_V_3_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_4_ce0 : STD_LOGIC;
    signal glPLSlice0_V_4_we0 : STD_LOGIC;
    signal glPLSlice0_V_4_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_5_ce0 : STD_LOGIC;
    signal glPLSlice0_V_5_we0 : STD_LOGIC;
    signal glPLSlice0_V_5_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_6_ce0 : STD_LOGIC;
    signal glPLSlice0_V_6_we0 : STD_LOGIC;
    signal glPLSlice0_V_6_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_7_ce0 : STD_LOGIC;
    signal glPLSlice0_V_7_we0 : STD_LOGIC;
    signal glPLSlice0_V_7_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_8_ce0 : STD_LOGIC;
    signal glPLSlice0_V_8_we0 : STD_LOGIC;
    signal glPLSlice0_V_8_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_9_ce0 : STD_LOGIC;
    signal glPLSlice0_V_9_we0 : STD_LOGIC;
    signal glPLSlice0_V_9_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_10_ce0 : STD_LOGIC;
    signal glPLSlice0_V_10_we0 : STD_LOGIC;
    signal glPLSlice0_V_10_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_11_ce0 : STD_LOGIC;
    signal glPLSlice0_V_11_we0 : STD_LOGIC;
    signal glPLSlice0_V_11_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_12_ce0 : STD_LOGIC;
    signal glPLSlice0_V_12_we0 : STD_LOGIC;
    signal glPLSlice0_V_12_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_13_ce0 : STD_LOGIC;
    signal glPLSlice0_V_13_we0 : STD_LOGIC;
    signal glPLSlice0_V_13_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_14_ce0 : STD_LOGIC;
    signal glPLSlice0_V_14_we0 : STD_LOGIC;
    signal glPLSlice0_V_14_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice0_V_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice0_V_15_ce0 : STD_LOGIC;
    signal glPLSlice0_V_15_we0 : STD_LOGIC;
    signal glPLSlice0_V_15_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_0_ce0 : STD_LOGIC;
    signal glPLSlice1_V_0_we0 : STD_LOGIC;
    signal glPLSlice1_V_0_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_1_ce0 : STD_LOGIC;
    signal glPLSlice1_V_1_we0 : STD_LOGIC;
    signal glPLSlice1_V_1_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_2_ce0 : STD_LOGIC;
    signal glPLSlice1_V_2_we0 : STD_LOGIC;
    signal glPLSlice1_V_2_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_3_ce0 : STD_LOGIC;
    signal glPLSlice1_V_3_we0 : STD_LOGIC;
    signal glPLSlice1_V_3_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_4_ce0 : STD_LOGIC;
    signal glPLSlice1_V_4_we0 : STD_LOGIC;
    signal glPLSlice1_V_4_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_5_ce0 : STD_LOGIC;
    signal glPLSlice1_V_5_we0 : STD_LOGIC;
    signal glPLSlice1_V_5_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_6_ce0 : STD_LOGIC;
    signal glPLSlice1_V_6_we0 : STD_LOGIC;
    signal glPLSlice1_V_6_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_7_ce0 : STD_LOGIC;
    signal glPLSlice1_V_7_we0 : STD_LOGIC;
    signal glPLSlice1_V_7_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_8_ce0 : STD_LOGIC;
    signal glPLSlice1_V_8_we0 : STD_LOGIC;
    signal glPLSlice1_V_8_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_9_ce0 : STD_LOGIC;
    signal glPLSlice1_V_9_we0 : STD_LOGIC;
    signal glPLSlice1_V_9_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_10_ce0 : STD_LOGIC;
    signal glPLSlice1_V_10_we0 : STD_LOGIC;
    signal glPLSlice1_V_10_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_11_ce0 : STD_LOGIC;
    signal glPLSlice1_V_11_we0 : STD_LOGIC;
    signal glPLSlice1_V_11_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_12_ce0 : STD_LOGIC;
    signal glPLSlice1_V_12_we0 : STD_LOGIC;
    signal glPLSlice1_V_12_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_13_ce0 : STD_LOGIC;
    signal glPLSlice1_V_13_we0 : STD_LOGIC;
    signal glPLSlice1_V_13_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_14_ce0 : STD_LOGIC;
    signal glPLSlice1_V_14_we0 : STD_LOGIC;
    signal glPLSlice1_V_14_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice1_V_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice1_V_15_ce0 : STD_LOGIC;
    signal glPLSlice1_V_15_we0 : STD_LOGIC;
    signal glPLSlice1_V_15_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_0_ce0 : STD_LOGIC;
    signal glPLSlice2_V_0_we0 : STD_LOGIC;
    signal glPLSlice2_V_0_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_1_ce0 : STD_LOGIC;
    signal glPLSlice2_V_1_we0 : STD_LOGIC;
    signal glPLSlice2_V_1_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_2_ce0 : STD_LOGIC;
    signal glPLSlice2_V_2_we0 : STD_LOGIC;
    signal glPLSlice2_V_2_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_3_ce0 : STD_LOGIC;
    signal glPLSlice2_V_3_we0 : STD_LOGIC;
    signal glPLSlice2_V_3_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_4_ce0 : STD_LOGIC;
    signal glPLSlice2_V_4_we0 : STD_LOGIC;
    signal glPLSlice2_V_4_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_5_ce0 : STD_LOGIC;
    signal glPLSlice2_V_5_we0 : STD_LOGIC;
    signal glPLSlice2_V_5_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_6_ce0 : STD_LOGIC;
    signal glPLSlice2_V_6_we0 : STD_LOGIC;
    signal glPLSlice2_V_6_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_7_ce0 : STD_LOGIC;
    signal glPLSlice2_V_7_we0 : STD_LOGIC;
    signal glPLSlice2_V_7_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_8_ce0 : STD_LOGIC;
    signal glPLSlice2_V_8_we0 : STD_LOGIC;
    signal glPLSlice2_V_8_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_9_ce0 : STD_LOGIC;
    signal glPLSlice2_V_9_we0 : STD_LOGIC;
    signal glPLSlice2_V_9_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_10_ce0 : STD_LOGIC;
    signal glPLSlice2_V_10_we0 : STD_LOGIC;
    signal glPLSlice2_V_10_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_11_ce0 : STD_LOGIC;
    signal glPLSlice2_V_11_we0 : STD_LOGIC;
    signal glPLSlice2_V_11_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_12_ce0 : STD_LOGIC;
    signal glPLSlice2_V_12_we0 : STD_LOGIC;
    signal glPLSlice2_V_12_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_13_ce0 : STD_LOGIC;
    signal glPLSlice2_V_13_we0 : STD_LOGIC;
    signal glPLSlice2_V_13_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_14_ce0 : STD_LOGIC;
    signal glPLSlice2_V_14_we0 : STD_LOGIC;
    signal glPLSlice2_V_14_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glPLSlice2_V_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal glPLSlice2_V_15_ce0 : STD_LOGIC;
    signal glPLSlice2_V_15_we0 : STD_LOGIC;
    signal glPLSlice2_V_15_q0 : STD_LOGIC_VECTOR (179 downto 0);
    signal glCnt : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal data_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_3_reg_1296 : STD_LOGIC_VECTOR (0 downto 0);
    signal eventSlice_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_3_reg_1296_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_019_rec_reg_795 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_3_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_960_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_reg_1300 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1305 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1305_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_reg_1310 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal arrayNo_reg_1316 : STD_LOGIC_VECTOR (3 downto 0);
    signal newIndex_reg_1323 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_10_fu_1121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_1568 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1207_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_1573 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal grp_accumulateHW_fu_806_ap_start : STD_LOGIC;
    signal grp_accumulateHW_fu_806_ap_done : STD_LOGIC;
    signal grp_accumulateHW_fu_806_ap_idle : STD_LOGIC;
    signal grp_accumulateHW_fu_806_ap_ready : STD_LOGIC;
    signal grp_accumulateHW_fu_806_y : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_accumulateHW_fu_806_pol : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_0_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_0_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_0_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_1_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_1_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_1_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_2_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_2_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_2_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_3_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_3_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_3_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_4_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_4_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_4_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_5_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_5_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_5_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_6_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_6_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_6_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_7_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_7_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_7_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_8_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_8_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_8_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_9_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_9_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_9_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_10_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_10_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_10_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_11_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_11_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_11_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_12_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_12_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_12_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_13_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_13_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_13_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_14_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_14_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_14_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice0_V_15_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_15_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice0_V_15_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_0_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_0_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_0_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_1_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_1_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_1_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_2_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_2_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_2_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_3_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_3_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_3_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_4_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_4_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_4_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_5_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_5_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_5_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_6_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_6_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_6_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_7_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_7_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_7_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_8_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_8_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_8_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_9_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_9_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_9_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_10_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_10_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_10_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_11_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_11_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_11_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_12_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_12_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_12_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_13_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_13_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_13_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_14_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_14_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_14_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice1_V_15_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_15_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice1_V_15_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_0_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_0_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_0_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_1_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_1_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_1_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_2_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_2_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_2_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_3_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_3_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_3_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_4_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_4_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_4_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_5_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_5_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_5_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_6_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_6_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_6_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_7_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_7_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_7_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_8_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_8_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_8_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_9_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_9_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_9_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_10_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_10_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_10_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_11_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_11_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_11_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_12_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_12_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_12_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_13_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_13_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_13_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_14_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_14_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_14_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accumulateHW_fu_806_glPLSlice2_V_15_ce0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_15_we0 : STD_LOGIC;
    signal grp_accumulateHW_fu_806_glPLSlice2_V_15_d0 : STD_LOGIC_VECTOR (179 downto 0);
    signal grp_accumulateHW_fu_806_ap_ce : STD_LOGIC;
    signal ap_block_state4_pp0_stage2_iter0_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_phi_mux_p_019_rec_phi_fu_799_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_accumulateHW_fu_806_ap_start_reg : STD_LOGIC := '0';
    signal x_cast_cast_fu_1002_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal newIndex1_fu_1033_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal tmp_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1259_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_fu_196 : STD_LOGIC_VECTOR (15 downto 0);
    signal localCnt_fu_1249_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_cast_fu_951_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fu_972_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_1007_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_1084_p18 : STD_LOGIC_VECTOR (179 downto 0);
    signal tmp_8_fu_1125_p18 : STD_LOGIC_VECTOR (179 downto 0);
    signal tmp_7_fu_1166_p18 : STD_LOGIC_VECTOR (179 downto 0);
    signal tmp_12_fu_1162_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_cast_fu_1216_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_op_assign_1_fu_1220_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_op_assign_1_pn_fu_1227_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_op_assign_1_pn_cas_fu_1234_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_1238_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_989 : BOOLEAN;

    component accumulateHW IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (9 downto 0);
        y : IN STD_LOGIC_VECTOR (8 downto 0);
        pol : IN STD_LOGIC;
        glPLActiveSliceIdx_V : IN STD_LOGIC_VECTOR (1 downto 0);
        glPLSlice0_V_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_0_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_0_we0 : OUT STD_LOGIC;
        glPLSlice0_V_0_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_0_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_1_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_1_we0 : OUT STD_LOGIC;
        glPLSlice0_V_1_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_1_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_2_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_2_we0 : OUT STD_LOGIC;
        glPLSlice0_V_2_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_2_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_3_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_3_we0 : OUT STD_LOGIC;
        glPLSlice0_V_3_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_3_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_4_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_4_we0 : OUT STD_LOGIC;
        glPLSlice0_V_4_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_4_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_5_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_5_we0 : OUT STD_LOGIC;
        glPLSlice0_V_5_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_5_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_6_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_6_we0 : OUT STD_LOGIC;
        glPLSlice0_V_6_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_6_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_7_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_7_we0 : OUT STD_LOGIC;
        glPLSlice0_V_7_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_7_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_8_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_8_we0 : OUT STD_LOGIC;
        glPLSlice0_V_8_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_8_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_9_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_9_we0 : OUT STD_LOGIC;
        glPLSlice0_V_9_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_9_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_10_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_10_we0 : OUT STD_LOGIC;
        glPLSlice0_V_10_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_10_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_11_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_11_we0 : OUT STD_LOGIC;
        glPLSlice0_V_11_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_11_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_12_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_12_we0 : OUT STD_LOGIC;
        glPLSlice0_V_12_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_12_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_13_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_13_we0 : OUT STD_LOGIC;
        glPLSlice0_V_13_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_13_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_14_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_14_we0 : OUT STD_LOGIC;
        glPLSlice0_V_14_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_14_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice0_V_15_ce0 : OUT STD_LOGIC;
        glPLSlice0_V_15_we0 : OUT STD_LOGIC;
        glPLSlice0_V_15_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice0_V_15_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_0_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_0_we0 : OUT STD_LOGIC;
        glPLSlice1_V_0_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_0_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_1_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_1_we0 : OUT STD_LOGIC;
        glPLSlice1_V_1_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_1_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_2_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_2_we0 : OUT STD_LOGIC;
        glPLSlice1_V_2_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_2_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_3_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_3_we0 : OUT STD_LOGIC;
        glPLSlice1_V_3_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_3_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_4_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_4_we0 : OUT STD_LOGIC;
        glPLSlice1_V_4_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_4_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_5_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_5_we0 : OUT STD_LOGIC;
        glPLSlice1_V_5_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_5_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_6_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_6_we0 : OUT STD_LOGIC;
        glPLSlice1_V_6_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_6_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_7_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_7_we0 : OUT STD_LOGIC;
        glPLSlice1_V_7_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_7_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_8_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_8_we0 : OUT STD_LOGIC;
        glPLSlice1_V_8_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_8_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_9_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_9_we0 : OUT STD_LOGIC;
        glPLSlice1_V_9_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_9_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_10_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_10_we0 : OUT STD_LOGIC;
        glPLSlice1_V_10_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_10_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_11_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_11_we0 : OUT STD_LOGIC;
        glPLSlice1_V_11_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_11_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_12_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_12_we0 : OUT STD_LOGIC;
        glPLSlice1_V_12_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_12_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_13_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_13_we0 : OUT STD_LOGIC;
        glPLSlice1_V_13_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_13_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_14_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_14_we0 : OUT STD_LOGIC;
        glPLSlice1_V_14_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_14_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice1_V_15_ce0 : OUT STD_LOGIC;
        glPLSlice1_V_15_we0 : OUT STD_LOGIC;
        glPLSlice1_V_15_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice1_V_15_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_0_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_0_we0 : OUT STD_LOGIC;
        glPLSlice2_V_0_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_0_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_1_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_1_we0 : OUT STD_LOGIC;
        glPLSlice2_V_1_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_1_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_2_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_2_we0 : OUT STD_LOGIC;
        glPLSlice2_V_2_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_2_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_3_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_3_we0 : OUT STD_LOGIC;
        glPLSlice2_V_3_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_3_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_4_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_4_we0 : OUT STD_LOGIC;
        glPLSlice2_V_4_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_4_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_5_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_5_we0 : OUT STD_LOGIC;
        glPLSlice2_V_5_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_5_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_6_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_6_we0 : OUT STD_LOGIC;
        glPLSlice2_V_6_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_6_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_7_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_7_we0 : OUT STD_LOGIC;
        glPLSlice2_V_7_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_7_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_8_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_8_we0 : OUT STD_LOGIC;
        glPLSlice2_V_8_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_8_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_9_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_9_we0 : OUT STD_LOGIC;
        glPLSlice2_V_9_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_9_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_10_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_10_we0 : OUT STD_LOGIC;
        glPLSlice2_V_10_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_10_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_11_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_11_we0 : OUT STD_LOGIC;
        glPLSlice2_V_11_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_11_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_12_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_12_we0 : OUT STD_LOGIC;
        glPLSlice2_V_12_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_12_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_13_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_13_we0 : OUT STD_LOGIC;
        glPLSlice2_V_13_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_13_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_14_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_14_we0 : OUT STD_LOGIC;
        glPLSlice2_V_14_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_14_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        glPLSlice2_V_15_ce0 : OUT STD_LOGIC;
        glPLSlice2_V_15_we0 : OUT STD_LOGIC;
        glPLSlice2_V_15_d0 : OUT STD_LOGIC_VECTOR (179 downto 0);
        glPLSlice2_V_15_q0 : IN STD_LOGIC_VECTOR (179 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component parseEvents_mux_1bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (179 downto 0);
        din1 : IN STD_LOGIC_VECTOR (179 downto 0);
        din2 : IN STD_LOGIC_VECTOR (179 downto 0);
        din3 : IN STD_LOGIC_VECTOR (179 downto 0);
        din4 : IN STD_LOGIC_VECTOR (179 downto 0);
        din5 : IN STD_LOGIC_VECTOR (179 downto 0);
        din6 : IN STD_LOGIC_VECTOR (179 downto 0);
        din7 : IN STD_LOGIC_VECTOR (179 downto 0);
        din8 : IN STD_LOGIC_VECTOR (179 downto 0);
        din9 : IN STD_LOGIC_VECTOR (179 downto 0);
        din10 : IN STD_LOGIC_VECTOR (179 downto 0);
        din11 : IN STD_LOGIC_VECTOR (179 downto 0);
        din12 : IN STD_LOGIC_VECTOR (179 downto 0);
        din13 : IN STD_LOGIC_VECTOR (179 downto 0);
        din14 : IN STD_LOGIC_VECTOR (179 downto 0);
        din15 : IN STD_LOGIC_VECTOR (179 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (179 downto 0) );
    end component;


    component parseEvents_glPLScud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (179 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (179 downto 0) );
    end component;



begin
    glPLSlice0_V_0_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_0_address0,
        ce0 => glPLSlice0_V_0_ce0,
        we0 => glPLSlice0_V_0_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_0_d0,
        q0 => glPLSlice0_V_0_q0);

    glPLSlice0_V_1_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_1_address0,
        ce0 => glPLSlice0_V_1_ce0,
        we0 => glPLSlice0_V_1_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_1_d0,
        q0 => glPLSlice0_V_1_q0);

    glPLSlice0_V_2_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_2_address0,
        ce0 => glPLSlice0_V_2_ce0,
        we0 => glPLSlice0_V_2_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_2_d0,
        q0 => glPLSlice0_V_2_q0);

    glPLSlice0_V_3_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_3_address0,
        ce0 => glPLSlice0_V_3_ce0,
        we0 => glPLSlice0_V_3_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_3_d0,
        q0 => glPLSlice0_V_3_q0);

    glPLSlice0_V_4_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_4_address0,
        ce0 => glPLSlice0_V_4_ce0,
        we0 => glPLSlice0_V_4_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_4_d0,
        q0 => glPLSlice0_V_4_q0);

    glPLSlice0_V_5_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_5_address0,
        ce0 => glPLSlice0_V_5_ce0,
        we0 => glPLSlice0_V_5_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_5_d0,
        q0 => glPLSlice0_V_5_q0);

    glPLSlice0_V_6_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_6_address0,
        ce0 => glPLSlice0_V_6_ce0,
        we0 => glPLSlice0_V_6_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_6_d0,
        q0 => glPLSlice0_V_6_q0);

    glPLSlice0_V_7_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_7_address0,
        ce0 => glPLSlice0_V_7_ce0,
        we0 => glPLSlice0_V_7_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_7_d0,
        q0 => glPLSlice0_V_7_q0);

    glPLSlice0_V_8_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_8_address0,
        ce0 => glPLSlice0_V_8_ce0,
        we0 => glPLSlice0_V_8_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_8_d0,
        q0 => glPLSlice0_V_8_q0);

    glPLSlice0_V_9_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_9_address0,
        ce0 => glPLSlice0_V_9_ce0,
        we0 => glPLSlice0_V_9_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_9_d0,
        q0 => glPLSlice0_V_9_q0);

    glPLSlice0_V_10_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_10_address0,
        ce0 => glPLSlice0_V_10_ce0,
        we0 => glPLSlice0_V_10_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_10_d0,
        q0 => glPLSlice0_V_10_q0);

    glPLSlice0_V_11_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_11_address0,
        ce0 => glPLSlice0_V_11_ce0,
        we0 => glPLSlice0_V_11_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_11_d0,
        q0 => glPLSlice0_V_11_q0);

    glPLSlice0_V_12_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_12_address0,
        ce0 => glPLSlice0_V_12_ce0,
        we0 => glPLSlice0_V_12_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_12_d0,
        q0 => glPLSlice0_V_12_q0);

    glPLSlice0_V_13_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_13_address0,
        ce0 => glPLSlice0_V_13_ce0,
        we0 => glPLSlice0_V_13_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_13_d0,
        q0 => glPLSlice0_V_13_q0);

    glPLSlice0_V_14_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_14_address0,
        ce0 => glPLSlice0_V_14_ce0,
        we0 => glPLSlice0_V_14_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_14_d0,
        q0 => glPLSlice0_V_14_q0);

    glPLSlice0_V_15_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice0_V_15_address0,
        ce0 => glPLSlice0_V_15_ce0,
        we0 => glPLSlice0_V_15_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice0_V_15_d0,
        q0 => glPLSlice0_V_15_q0);

    glPLSlice1_V_0_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_0_address0,
        ce0 => glPLSlice1_V_0_ce0,
        we0 => glPLSlice1_V_0_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_0_d0,
        q0 => glPLSlice1_V_0_q0);

    glPLSlice1_V_1_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_1_address0,
        ce0 => glPLSlice1_V_1_ce0,
        we0 => glPLSlice1_V_1_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_1_d0,
        q0 => glPLSlice1_V_1_q0);

    glPLSlice1_V_2_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_2_address0,
        ce0 => glPLSlice1_V_2_ce0,
        we0 => glPLSlice1_V_2_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_2_d0,
        q0 => glPLSlice1_V_2_q0);

    glPLSlice1_V_3_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_3_address0,
        ce0 => glPLSlice1_V_3_ce0,
        we0 => glPLSlice1_V_3_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_3_d0,
        q0 => glPLSlice1_V_3_q0);

    glPLSlice1_V_4_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_4_address0,
        ce0 => glPLSlice1_V_4_ce0,
        we0 => glPLSlice1_V_4_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_4_d0,
        q0 => glPLSlice1_V_4_q0);

    glPLSlice1_V_5_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_5_address0,
        ce0 => glPLSlice1_V_5_ce0,
        we0 => glPLSlice1_V_5_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_5_d0,
        q0 => glPLSlice1_V_5_q0);

    glPLSlice1_V_6_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_6_address0,
        ce0 => glPLSlice1_V_6_ce0,
        we0 => glPLSlice1_V_6_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_6_d0,
        q0 => glPLSlice1_V_6_q0);

    glPLSlice1_V_7_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_7_address0,
        ce0 => glPLSlice1_V_7_ce0,
        we0 => glPLSlice1_V_7_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_7_d0,
        q0 => glPLSlice1_V_7_q0);

    glPLSlice1_V_8_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_8_address0,
        ce0 => glPLSlice1_V_8_ce0,
        we0 => glPLSlice1_V_8_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_8_d0,
        q0 => glPLSlice1_V_8_q0);

    glPLSlice1_V_9_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_9_address0,
        ce0 => glPLSlice1_V_9_ce0,
        we0 => glPLSlice1_V_9_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_9_d0,
        q0 => glPLSlice1_V_9_q0);

    glPLSlice1_V_10_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_10_address0,
        ce0 => glPLSlice1_V_10_ce0,
        we0 => glPLSlice1_V_10_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_10_d0,
        q0 => glPLSlice1_V_10_q0);

    glPLSlice1_V_11_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_11_address0,
        ce0 => glPLSlice1_V_11_ce0,
        we0 => glPLSlice1_V_11_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_11_d0,
        q0 => glPLSlice1_V_11_q0);

    glPLSlice1_V_12_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_12_address0,
        ce0 => glPLSlice1_V_12_ce0,
        we0 => glPLSlice1_V_12_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_12_d0,
        q0 => glPLSlice1_V_12_q0);

    glPLSlice1_V_13_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_13_address0,
        ce0 => glPLSlice1_V_13_ce0,
        we0 => glPLSlice1_V_13_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_13_d0,
        q0 => glPLSlice1_V_13_q0);

    glPLSlice1_V_14_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_14_address0,
        ce0 => glPLSlice1_V_14_ce0,
        we0 => glPLSlice1_V_14_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_14_d0,
        q0 => glPLSlice1_V_14_q0);

    glPLSlice1_V_15_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice1_V_15_address0,
        ce0 => glPLSlice1_V_15_ce0,
        we0 => glPLSlice1_V_15_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice1_V_15_d0,
        q0 => glPLSlice1_V_15_q0);

    glPLSlice2_V_0_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_0_address0,
        ce0 => glPLSlice2_V_0_ce0,
        we0 => glPLSlice2_V_0_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_0_d0,
        q0 => glPLSlice2_V_0_q0);

    glPLSlice2_V_1_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_1_address0,
        ce0 => glPLSlice2_V_1_ce0,
        we0 => glPLSlice2_V_1_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_1_d0,
        q0 => glPLSlice2_V_1_q0);

    glPLSlice2_V_2_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_2_address0,
        ce0 => glPLSlice2_V_2_ce0,
        we0 => glPLSlice2_V_2_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_2_d0,
        q0 => glPLSlice2_V_2_q0);

    glPLSlice2_V_3_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_3_address0,
        ce0 => glPLSlice2_V_3_ce0,
        we0 => glPLSlice2_V_3_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_3_d0,
        q0 => glPLSlice2_V_3_q0);

    glPLSlice2_V_4_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_4_address0,
        ce0 => glPLSlice2_V_4_ce0,
        we0 => glPLSlice2_V_4_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_4_d0,
        q0 => glPLSlice2_V_4_q0);

    glPLSlice2_V_5_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_5_address0,
        ce0 => glPLSlice2_V_5_ce0,
        we0 => glPLSlice2_V_5_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_5_d0,
        q0 => glPLSlice2_V_5_q0);

    glPLSlice2_V_6_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_6_address0,
        ce0 => glPLSlice2_V_6_ce0,
        we0 => glPLSlice2_V_6_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_6_d0,
        q0 => glPLSlice2_V_6_q0);

    glPLSlice2_V_7_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_7_address0,
        ce0 => glPLSlice2_V_7_ce0,
        we0 => glPLSlice2_V_7_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_7_d0,
        q0 => glPLSlice2_V_7_q0);

    glPLSlice2_V_8_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_8_address0,
        ce0 => glPLSlice2_V_8_ce0,
        we0 => glPLSlice2_V_8_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_8_d0,
        q0 => glPLSlice2_V_8_q0);

    glPLSlice2_V_9_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_9_address0,
        ce0 => glPLSlice2_V_9_ce0,
        we0 => glPLSlice2_V_9_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_9_d0,
        q0 => glPLSlice2_V_9_q0);

    glPLSlice2_V_10_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_10_address0,
        ce0 => glPLSlice2_V_10_ce0,
        we0 => glPLSlice2_V_10_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_10_d0,
        q0 => glPLSlice2_V_10_q0);

    glPLSlice2_V_11_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_11_address0,
        ce0 => glPLSlice2_V_11_ce0,
        we0 => glPLSlice2_V_11_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_11_d0,
        q0 => glPLSlice2_V_11_q0);

    glPLSlice2_V_12_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_12_address0,
        ce0 => glPLSlice2_V_12_ce0,
        we0 => glPLSlice2_V_12_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_12_d0,
        q0 => glPLSlice2_V_12_q0);

    glPLSlice2_V_13_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_13_address0,
        ce0 => glPLSlice2_V_13_ce0,
        we0 => glPLSlice2_V_13_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_13_d0,
        q0 => glPLSlice2_V_13_q0);

    glPLSlice2_V_14_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_14_address0,
        ce0 => glPLSlice2_V_14_ce0,
        we0 => glPLSlice2_V_14_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_14_d0,
        q0 => glPLSlice2_V_14_q0);

    glPLSlice2_V_15_U : component parseEvents_glPLScud
    generic map (
        DataWidth => 180,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSlice2_V_15_address0,
        ce0 => glPLSlice2_V_15_ce0,
        we0 => glPLSlice2_V_15_we0,
        d0 => grp_accumulateHW_fu_806_glPLSlice2_V_15_d0,
        q0 => glPLSlice2_V_15_q0);

    grp_accumulateHW_fu_806 : component accumulateHW
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_accumulateHW_fu_806_ap_start,
        ap_done => grp_accumulateHW_fu_806_ap_done,
        ap_idle => grp_accumulateHW_fu_806_ap_idle,
        ap_ready => grp_accumulateHW_fu_806_ap_ready,
        x => x_cast_cast_fu_1002_p1,
        y => grp_accumulateHW_fu_806_y,
        pol => grp_accumulateHW_fu_806_pol,
        glPLActiveSliceIdx_V => glPLActiveSliceIdx_V,
        glPLSlice0_V_0_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_0_address0,
        glPLSlice0_V_0_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_0_ce0,
        glPLSlice0_V_0_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_0_we0,
        glPLSlice0_V_0_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_0_d0,
        glPLSlice0_V_0_q0 => glPLSlice0_V_0_q0,
        glPLSlice0_V_1_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_1_address0,
        glPLSlice0_V_1_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_1_ce0,
        glPLSlice0_V_1_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_1_we0,
        glPLSlice0_V_1_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_1_d0,
        glPLSlice0_V_1_q0 => glPLSlice0_V_1_q0,
        glPLSlice0_V_2_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_2_address0,
        glPLSlice0_V_2_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_2_ce0,
        glPLSlice0_V_2_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_2_we0,
        glPLSlice0_V_2_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_2_d0,
        glPLSlice0_V_2_q0 => glPLSlice0_V_2_q0,
        glPLSlice0_V_3_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_3_address0,
        glPLSlice0_V_3_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_3_ce0,
        glPLSlice0_V_3_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_3_we0,
        glPLSlice0_V_3_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_3_d0,
        glPLSlice0_V_3_q0 => glPLSlice0_V_3_q0,
        glPLSlice0_V_4_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_4_address0,
        glPLSlice0_V_4_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_4_ce0,
        glPLSlice0_V_4_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_4_we0,
        glPLSlice0_V_4_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_4_d0,
        glPLSlice0_V_4_q0 => glPLSlice0_V_4_q0,
        glPLSlice0_V_5_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_5_address0,
        glPLSlice0_V_5_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_5_ce0,
        glPLSlice0_V_5_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_5_we0,
        glPLSlice0_V_5_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_5_d0,
        glPLSlice0_V_5_q0 => glPLSlice0_V_5_q0,
        glPLSlice0_V_6_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_6_address0,
        glPLSlice0_V_6_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_6_ce0,
        glPLSlice0_V_6_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_6_we0,
        glPLSlice0_V_6_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_6_d0,
        glPLSlice0_V_6_q0 => glPLSlice0_V_6_q0,
        glPLSlice0_V_7_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_7_address0,
        glPLSlice0_V_7_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_7_ce0,
        glPLSlice0_V_7_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_7_we0,
        glPLSlice0_V_7_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_7_d0,
        glPLSlice0_V_7_q0 => glPLSlice0_V_7_q0,
        glPLSlice0_V_8_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_8_address0,
        glPLSlice0_V_8_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_8_ce0,
        glPLSlice0_V_8_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_8_we0,
        glPLSlice0_V_8_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_8_d0,
        glPLSlice0_V_8_q0 => glPLSlice0_V_8_q0,
        glPLSlice0_V_9_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_9_address0,
        glPLSlice0_V_9_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_9_ce0,
        glPLSlice0_V_9_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_9_we0,
        glPLSlice0_V_9_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_9_d0,
        glPLSlice0_V_9_q0 => glPLSlice0_V_9_q0,
        glPLSlice0_V_10_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_10_address0,
        glPLSlice0_V_10_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_10_ce0,
        glPLSlice0_V_10_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_10_we0,
        glPLSlice0_V_10_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_10_d0,
        glPLSlice0_V_10_q0 => glPLSlice0_V_10_q0,
        glPLSlice0_V_11_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_11_address0,
        glPLSlice0_V_11_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_11_ce0,
        glPLSlice0_V_11_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_11_we0,
        glPLSlice0_V_11_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_11_d0,
        glPLSlice0_V_11_q0 => glPLSlice0_V_11_q0,
        glPLSlice0_V_12_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_12_address0,
        glPLSlice0_V_12_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_12_ce0,
        glPLSlice0_V_12_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_12_we0,
        glPLSlice0_V_12_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_12_d0,
        glPLSlice0_V_12_q0 => glPLSlice0_V_12_q0,
        glPLSlice0_V_13_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_13_address0,
        glPLSlice0_V_13_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_13_ce0,
        glPLSlice0_V_13_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_13_we0,
        glPLSlice0_V_13_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_13_d0,
        glPLSlice0_V_13_q0 => glPLSlice0_V_13_q0,
        glPLSlice0_V_14_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_14_address0,
        glPLSlice0_V_14_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_14_ce0,
        glPLSlice0_V_14_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_14_we0,
        glPLSlice0_V_14_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_14_d0,
        glPLSlice0_V_14_q0 => glPLSlice0_V_14_q0,
        glPLSlice0_V_15_address0 => grp_accumulateHW_fu_806_glPLSlice0_V_15_address0,
        glPLSlice0_V_15_ce0 => grp_accumulateHW_fu_806_glPLSlice0_V_15_ce0,
        glPLSlice0_V_15_we0 => grp_accumulateHW_fu_806_glPLSlice0_V_15_we0,
        glPLSlice0_V_15_d0 => grp_accumulateHW_fu_806_glPLSlice0_V_15_d0,
        glPLSlice0_V_15_q0 => glPLSlice0_V_15_q0,
        glPLSlice1_V_0_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_0_address0,
        glPLSlice1_V_0_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_0_ce0,
        glPLSlice1_V_0_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_0_we0,
        glPLSlice1_V_0_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_0_d0,
        glPLSlice1_V_0_q0 => glPLSlice1_V_0_q0,
        glPLSlice1_V_1_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_1_address0,
        glPLSlice1_V_1_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_1_ce0,
        glPLSlice1_V_1_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_1_we0,
        glPLSlice1_V_1_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_1_d0,
        glPLSlice1_V_1_q0 => glPLSlice1_V_1_q0,
        glPLSlice1_V_2_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_2_address0,
        glPLSlice1_V_2_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_2_ce0,
        glPLSlice1_V_2_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_2_we0,
        glPLSlice1_V_2_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_2_d0,
        glPLSlice1_V_2_q0 => glPLSlice1_V_2_q0,
        glPLSlice1_V_3_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_3_address0,
        glPLSlice1_V_3_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_3_ce0,
        glPLSlice1_V_3_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_3_we0,
        glPLSlice1_V_3_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_3_d0,
        glPLSlice1_V_3_q0 => glPLSlice1_V_3_q0,
        glPLSlice1_V_4_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_4_address0,
        glPLSlice1_V_4_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_4_ce0,
        glPLSlice1_V_4_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_4_we0,
        glPLSlice1_V_4_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_4_d0,
        glPLSlice1_V_4_q0 => glPLSlice1_V_4_q0,
        glPLSlice1_V_5_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_5_address0,
        glPLSlice1_V_5_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_5_ce0,
        glPLSlice1_V_5_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_5_we0,
        glPLSlice1_V_5_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_5_d0,
        glPLSlice1_V_5_q0 => glPLSlice1_V_5_q0,
        glPLSlice1_V_6_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_6_address0,
        glPLSlice1_V_6_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_6_ce0,
        glPLSlice1_V_6_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_6_we0,
        glPLSlice1_V_6_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_6_d0,
        glPLSlice1_V_6_q0 => glPLSlice1_V_6_q0,
        glPLSlice1_V_7_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_7_address0,
        glPLSlice1_V_7_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_7_ce0,
        glPLSlice1_V_7_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_7_we0,
        glPLSlice1_V_7_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_7_d0,
        glPLSlice1_V_7_q0 => glPLSlice1_V_7_q0,
        glPLSlice1_V_8_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_8_address0,
        glPLSlice1_V_8_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_8_ce0,
        glPLSlice1_V_8_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_8_we0,
        glPLSlice1_V_8_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_8_d0,
        glPLSlice1_V_8_q0 => glPLSlice1_V_8_q0,
        glPLSlice1_V_9_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_9_address0,
        glPLSlice1_V_9_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_9_ce0,
        glPLSlice1_V_9_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_9_we0,
        glPLSlice1_V_9_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_9_d0,
        glPLSlice1_V_9_q0 => glPLSlice1_V_9_q0,
        glPLSlice1_V_10_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_10_address0,
        glPLSlice1_V_10_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_10_ce0,
        glPLSlice1_V_10_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_10_we0,
        glPLSlice1_V_10_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_10_d0,
        glPLSlice1_V_10_q0 => glPLSlice1_V_10_q0,
        glPLSlice1_V_11_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_11_address0,
        glPLSlice1_V_11_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_11_ce0,
        glPLSlice1_V_11_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_11_we0,
        glPLSlice1_V_11_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_11_d0,
        glPLSlice1_V_11_q0 => glPLSlice1_V_11_q0,
        glPLSlice1_V_12_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_12_address0,
        glPLSlice1_V_12_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_12_ce0,
        glPLSlice1_V_12_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_12_we0,
        glPLSlice1_V_12_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_12_d0,
        glPLSlice1_V_12_q0 => glPLSlice1_V_12_q0,
        glPLSlice1_V_13_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_13_address0,
        glPLSlice1_V_13_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_13_ce0,
        glPLSlice1_V_13_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_13_we0,
        glPLSlice1_V_13_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_13_d0,
        glPLSlice1_V_13_q0 => glPLSlice1_V_13_q0,
        glPLSlice1_V_14_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_14_address0,
        glPLSlice1_V_14_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_14_ce0,
        glPLSlice1_V_14_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_14_we0,
        glPLSlice1_V_14_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_14_d0,
        glPLSlice1_V_14_q0 => glPLSlice1_V_14_q0,
        glPLSlice1_V_15_address0 => grp_accumulateHW_fu_806_glPLSlice1_V_15_address0,
        glPLSlice1_V_15_ce0 => grp_accumulateHW_fu_806_glPLSlice1_V_15_ce0,
        glPLSlice1_V_15_we0 => grp_accumulateHW_fu_806_glPLSlice1_V_15_we0,
        glPLSlice1_V_15_d0 => grp_accumulateHW_fu_806_glPLSlice1_V_15_d0,
        glPLSlice1_V_15_q0 => glPLSlice1_V_15_q0,
        glPLSlice2_V_0_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_0_address0,
        glPLSlice2_V_0_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_0_ce0,
        glPLSlice2_V_0_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_0_we0,
        glPLSlice2_V_0_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_0_d0,
        glPLSlice2_V_0_q0 => glPLSlice2_V_0_q0,
        glPLSlice2_V_1_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_1_address0,
        glPLSlice2_V_1_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_1_ce0,
        glPLSlice2_V_1_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_1_we0,
        glPLSlice2_V_1_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_1_d0,
        glPLSlice2_V_1_q0 => glPLSlice2_V_1_q0,
        glPLSlice2_V_2_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_2_address0,
        glPLSlice2_V_2_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_2_ce0,
        glPLSlice2_V_2_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_2_we0,
        glPLSlice2_V_2_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_2_d0,
        glPLSlice2_V_2_q0 => glPLSlice2_V_2_q0,
        glPLSlice2_V_3_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_3_address0,
        glPLSlice2_V_3_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_3_ce0,
        glPLSlice2_V_3_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_3_we0,
        glPLSlice2_V_3_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_3_d0,
        glPLSlice2_V_3_q0 => glPLSlice2_V_3_q0,
        glPLSlice2_V_4_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_4_address0,
        glPLSlice2_V_4_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_4_ce0,
        glPLSlice2_V_4_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_4_we0,
        glPLSlice2_V_4_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_4_d0,
        glPLSlice2_V_4_q0 => glPLSlice2_V_4_q0,
        glPLSlice2_V_5_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_5_address0,
        glPLSlice2_V_5_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_5_ce0,
        glPLSlice2_V_5_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_5_we0,
        glPLSlice2_V_5_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_5_d0,
        glPLSlice2_V_5_q0 => glPLSlice2_V_5_q0,
        glPLSlice2_V_6_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_6_address0,
        glPLSlice2_V_6_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_6_ce0,
        glPLSlice2_V_6_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_6_we0,
        glPLSlice2_V_6_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_6_d0,
        glPLSlice2_V_6_q0 => glPLSlice2_V_6_q0,
        glPLSlice2_V_7_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_7_address0,
        glPLSlice2_V_7_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_7_ce0,
        glPLSlice2_V_7_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_7_we0,
        glPLSlice2_V_7_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_7_d0,
        glPLSlice2_V_7_q0 => glPLSlice2_V_7_q0,
        glPLSlice2_V_8_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_8_address0,
        glPLSlice2_V_8_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_8_ce0,
        glPLSlice2_V_8_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_8_we0,
        glPLSlice2_V_8_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_8_d0,
        glPLSlice2_V_8_q0 => glPLSlice2_V_8_q0,
        glPLSlice2_V_9_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_9_address0,
        glPLSlice2_V_9_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_9_ce0,
        glPLSlice2_V_9_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_9_we0,
        glPLSlice2_V_9_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_9_d0,
        glPLSlice2_V_9_q0 => glPLSlice2_V_9_q0,
        glPLSlice2_V_10_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_10_address0,
        glPLSlice2_V_10_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_10_ce0,
        glPLSlice2_V_10_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_10_we0,
        glPLSlice2_V_10_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_10_d0,
        glPLSlice2_V_10_q0 => glPLSlice2_V_10_q0,
        glPLSlice2_V_11_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_11_address0,
        glPLSlice2_V_11_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_11_ce0,
        glPLSlice2_V_11_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_11_we0,
        glPLSlice2_V_11_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_11_d0,
        glPLSlice2_V_11_q0 => glPLSlice2_V_11_q0,
        glPLSlice2_V_12_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_12_address0,
        glPLSlice2_V_12_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_12_ce0,
        glPLSlice2_V_12_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_12_we0,
        glPLSlice2_V_12_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_12_d0,
        glPLSlice2_V_12_q0 => glPLSlice2_V_12_q0,
        glPLSlice2_V_13_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_13_address0,
        glPLSlice2_V_13_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_13_ce0,
        glPLSlice2_V_13_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_13_we0,
        glPLSlice2_V_13_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_13_d0,
        glPLSlice2_V_13_q0 => glPLSlice2_V_13_q0,
        glPLSlice2_V_14_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_14_address0,
        glPLSlice2_V_14_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_14_ce0,
        glPLSlice2_V_14_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_14_we0,
        glPLSlice2_V_14_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_14_d0,
        glPLSlice2_V_14_q0 => glPLSlice2_V_14_q0,
        glPLSlice2_V_15_address0 => grp_accumulateHW_fu_806_glPLSlice2_V_15_address0,
        glPLSlice2_V_15_ce0 => grp_accumulateHW_fu_806_glPLSlice2_V_15_ce0,
        glPLSlice2_V_15_we0 => grp_accumulateHW_fu_806_glPLSlice2_V_15_we0,
        glPLSlice2_V_15_d0 => grp_accumulateHW_fu_806_glPLSlice2_V_15_d0,
        glPLSlice2_V_15_q0 => glPLSlice2_V_15_q0,
        ap_ce => grp_accumulateHW_fu_806_ap_ce);

    parseEvents_mux_1bkb_U57 : component parseEvents_mux_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 180,
        din1_WIDTH => 180,
        din2_WIDTH => 180,
        din3_WIDTH => 180,
        din4_WIDTH => 180,
        din5_WIDTH => 180,
        din6_WIDTH => 180,
        din7_WIDTH => 180,
        din8_WIDTH => 180,
        din9_WIDTH => 180,
        din10_WIDTH => 180,
        din11_WIDTH => 180,
        din12_WIDTH => 180,
        din13_WIDTH => 180,
        din14_WIDTH => 180,
        din15_WIDTH => 180,
        din16_WIDTH => 4,
        dout_WIDTH => 180)
    port map (
        din0 => glPLSlice0_V_1_q0,
        din1 => glPLSlice0_V_2_q0,
        din2 => glPLSlice0_V_3_q0,
        din3 => glPLSlice0_V_4_q0,
        din4 => glPLSlice0_V_5_q0,
        din5 => glPLSlice0_V_6_q0,
        din6 => glPLSlice0_V_7_q0,
        din7 => glPLSlice0_V_8_q0,
        din8 => glPLSlice0_V_9_q0,
        din9 => glPLSlice0_V_10_q0,
        din10 => glPLSlice0_V_11_q0,
        din11 => glPLSlice0_V_12_q0,
        din12 => glPLSlice0_V_13_q0,
        din13 => glPLSlice0_V_14_q0,
        din14 => glPLSlice0_V_15_q0,
        din15 => glPLSlice0_V_0_q0,
        din16 => arrayNo_reg_1316,
        dout => tmp_6_fu_1084_p18);

    parseEvents_mux_1bkb_U58 : component parseEvents_mux_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 180,
        din1_WIDTH => 180,
        din2_WIDTH => 180,
        din3_WIDTH => 180,
        din4_WIDTH => 180,
        din5_WIDTH => 180,
        din6_WIDTH => 180,
        din7_WIDTH => 180,
        din8_WIDTH => 180,
        din9_WIDTH => 180,
        din10_WIDTH => 180,
        din11_WIDTH => 180,
        din12_WIDTH => 180,
        din13_WIDTH => 180,
        din14_WIDTH => 180,
        din15_WIDTH => 180,
        din16_WIDTH => 4,
        dout_WIDTH => 180)
    port map (
        din0 => glPLSlice1_V_1_q0,
        din1 => glPLSlice1_V_2_q0,
        din2 => glPLSlice1_V_3_q0,
        din3 => glPLSlice1_V_4_q0,
        din4 => glPLSlice1_V_5_q0,
        din5 => glPLSlice1_V_6_q0,
        din6 => glPLSlice1_V_7_q0,
        din7 => glPLSlice1_V_8_q0,
        din8 => glPLSlice1_V_9_q0,
        din9 => glPLSlice1_V_10_q0,
        din10 => glPLSlice1_V_11_q0,
        din11 => glPLSlice1_V_12_q0,
        din12 => glPLSlice1_V_13_q0,
        din13 => glPLSlice1_V_14_q0,
        din14 => glPLSlice1_V_15_q0,
        din15 => glPLSlice1_V_0_q0,
        din16 => arrayNo_reg_1316,
        dout => tmp_8_fu_1125_p18);

    parseEvents_mux_1bkb_U59 : component parseEvents_mux_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 180,
        din1_WIDTH => 180,
        din2_WIDTH => 180,
        din3_WIDTH => 180,
        din4_WIDTH => 180,
        din5_WIDTH => 180,
        din6_WIDTH => 180,
        din7_WIDTH => 180,
        din8_WIDTH => 180,
        din9_WIDTH => 180,
        din10_WIDTH => 180,
        din11_WIDTH => 180,
        din12_WIDTH => 180,
        din13_WIDTH => 180,
        din14_WIDTH => 180,
        din15_WIDTH => 180,
        din16_WIDTH => 4,
        dout_WIDTH => 180)
    port map (
        din0 => glPLSlice2_V_1_q0,
        din1 => glPLSlice2_V_2_q0,
        din2 => glPLSlice2_V_3_q0,
        din3 => glPLSlice2_V_4_q0,
        din4 => glPLSlice2_V_5_q0,
        din5 => glPLSlice2_V_6_q0,
        din6 => glPLSlice2_V_7_q0,
        din7 => glPLSlice2_V_8_q0,
        din8 => glPLSlice2_V_9_q0,
        din9 => glPLSlice2_V_10_q0,
        din10 => glPLSlice2_V_11_q0,
        din11 => glPLSlice2_V_12_q0,
        din12 => glPLSlice2_V_13_q0,
        din13 => glPLSlice2_V_14_q0,
        din14 => glPLSlice2_V_15_q0,
        din15 => glPLSlice2_V_0_q0,
        din16 => arrayNo_reg_1316,
        dout => tmp_7_fu_1166_p18);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_accumulateHW_fu_806_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_accumulateHW_fu_806_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_fu_955_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    grp_accumulateHW_fu_806_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_accumulateHW_fu_806_ap_ready = ap_const_logic_1)) then 
                    grp_accumulateHW_fu_806_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    glPLActiveSliceIdx_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                if ((tmp_fu_915_p2 = ap_const_lv1_1)) then 
                    glPLActiveSliceIdx_V <= ap_const_lv2_1;
                elsif (((tmp_fu_915_p2 = ap_const_lv1_0) and (tmp_1_fu_921_p2 = ap_const_lv1_1))) then 
                    glPLActiveSliceIdx_V <= ap_const_lv2_2;
                elsif ((ap_const_boolean_1 = ap_condition_989)) then 
                    glPLActiveSliceIdx_V <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    p_019_rec_reg_795_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                p_019_rec_reg_795 <= i_reg_1300;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_019_rec_reg_795 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                arrayNo_reg_1316 <= data_dout(20 downto 17);
                newIndex_reg_1323 <= tmp_9_fu_1007_p2(9 downto 4);
                y_reg_1310 <= data_dout(10 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_3_reg_1296_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                glCnt <= tmp_11_fu_1259_p2;
                i_op_assign_fu_196 <= localCnt_fu_1249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                i_reg_1300 <= i_fu_960_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp2_reg_1573 <= tmp2_fu_1207_p2;
                tmp_10_reg_1568 <= tmp_10_fu_1121_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_3_reg_1296 <= tmp_3_fu_955_p2;
                tmp_3_reg_1296_pp0_iter1_reg <= tmp_3_reg_1296;
                tmp_5_reg_1305_pp0_iter1_reg <= tmp_5_reg_1305;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_fu_955_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_5_reg_1305 <= tmp_5_fu_966_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, tmp_3_fu_955_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_3_fu_955_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_3_fu_955_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(data_empty_n, eventSlice_full_n, ap_enable_reg_pp0_iter0, tmp_3_reg_1296, ap_enable_reg_pp0_iter1, tmp_3_reg_1296_pp0_iter1_reg)
    begin
                ap_block_pp0_stage1_01001 <= (((tmp_3_reg_1296_pp0_iter1_reg = ap_const_lv1_1) and (eventSlice_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (data_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(data_empty_n, eventSlice_full_n, ap_enable_reg_pp0_iter0, tmp_3_reg_1296, ap_enable_reg_pp0_iter1, tmp_3_reg_1296_pp0_iter1_reg)
    begin
                ap_block_pp0_stage1_11001 <= (((tmp_3_reg_1296_pp0_iter1_reg = ap_const_lv1_1) and (eventSlice_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (data_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(data_empty_n, eventSlice_full_n, ap_enable_reg_pp0_iter0, tmp_3_reg_1296, ap_enable_reg_pp0_iter1, tmp_3_reg_1296_pp0_iter1_reg)
    begin
                ap_block_pp0_stage1_subdone <= (((tmp_3_reg_1296_pp0_iter1_reg = ap_const_lv1_1) and (eventSlice_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (data_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(data_empty_n, tmp_3_reg_1296)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((tmp_3_reg_1296 = ap_const_lv1_1) and (data_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage1_iter1_assign_proc : process(eventSlice_full_n, tmp_3_reg_1296_pp0_iter1_reg)
    begin
                ap_block_state7_pp0_stage1_iter1 <= ((tmp_3_reg_1296_pp0_iter1_reg = ap_const_lv1_1) and (eventSlice_full_n = ap_const_logic_0));
    end process;


    ap_condition_989_assign_proc : process(tmp_fu_915_p2, tmp_1_fu_921_p2, tmp_2_fu_927_p2)
    begin
                ap_condition_989 <= ((tmp_1_fu_921_p2 = ap_const_lv1_0) and (tmp_fu_915_p2 = ap_const_lv1_0) and (tmp_2_fu_927_p2 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_3_fu_955_p2)
    begin
        if ((tmp_3_fu_955_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_019_rec_phi_fu_799_p4_assign_proc : process(tmp_3_reg_1296, ap_enable_reg_pp0_iter1, p_019_rec_reg_795, ap_CS_fsm_pp0_stage0, i_reg_1300, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_p_019_rec_phi_fu_799_p4 <= i_reg_1300;
        else 
            ap_phi_mux_p_019_rec_phi_fu_799_p4 <= p_019_rec_reg_795;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_blk_n_assign_proc : process(data_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296)
    begin
        if (((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            data_blk_n <= data_empty_n;
        else 
            data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_3_reg_1296, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            data_read <= ap_const_logic_1;
        else 
            data_read <= ap_const_logic_0;
        end if; 
    end process;


    eventSlice_blk_n_assign_proc : process(eventSlice_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter1, tmp_3_reg_1296_pp0_iter1_reg)
    begin
        if (((tmp_3_reg_1296_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            eventSlice_blk_n <= eventSlice_full_n;
        else 
            eventSlice_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    eventSlice_din <= std_logic_vector(unsigned(tmp2_reg_1573) + unsigned(tmp1_fu_1238_p2));

    eventSlice_write_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, tmp_3_reg_1296_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_3_reg_1296_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            eventSlice_write <= ap_const_logic_1;
        else 
            eventSlice_write <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_0_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_0_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_0_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_0_address0;
        else 
            glPLSlice0_V_0_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_0_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_0_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_0_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_0_ce0;
        else 
            glPLSlice0_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_0_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_0_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_0_we0;
        else 
            glPLSlice0_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_10_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_10_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_10_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_10_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_10_address0;
        else 
            glPLSlice0_V_10_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_10_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_10_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_10_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_10_ce0;
        else 
            glPLSlice0_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_10_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_10_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_10_we0;
        else 
            glPLSlice0_V_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_11_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_11_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_11_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_11_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_11_address0;
        else 
            glPLSlice0_V_11_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_11_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_11_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_11_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_11_ce0;
        else 
            glPLSlice0_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_11_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_11_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_11_we0;
        else 
            glPLSlice0_V_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_12_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_12_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_12_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_12_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_12_address0;
        else 
            glPLSlice0_V_12_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_12_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_12_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_12_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_12_ce0;
        else 
            glPLSlice0_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_12_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_12_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_12_we0;
        else 
            glPLSlice0_V_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_13_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_13_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_13_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_13_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_13_address0;
        else 
            glPLSlice0_V_13_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_13_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_13_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_13_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_13_ce0;
        else 
            glPLSlice0_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_13_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_13_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_13_we0;
        else 
            glPLSlice0_V_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_14_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_14_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_14_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_14_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_14_address0;
        else 
            glPLSlice0_V_14_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_14_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_14_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_14_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_14_ce0;
        else 
            glPLSlice0_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_14_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_14_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_14_we0;
        else 
            glPLSlice0_V_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_15_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_15_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_15_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_15_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_15_address0;
        else 
            glPLSlice0_V_15_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_15_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_15_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_15_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_15_ce0;
        else 
            glPLSlice0_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_15_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_15_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_15_we0;
        else 
            glPLSlice0_V_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_1_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_1_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_1_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_1_address0;
        else 
            glPLSlice0_V_1_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_1_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_1_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_1_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_1_ce0;
        else 
            glPLSlice0_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_1_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_1_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_1_we0;
        else 
            glPLSlice0_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_2_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_2_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_2_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_2_address0;
        else 
            glPLSlice0_V_2_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_2_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_2_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_2_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_2_ce0;
        else 
            glPLSlice0_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_2_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_2_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_2_we0;
        else 
            glPLSlice0_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_3_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_3_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_3_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_3_address0;
        else 
            glPLSlice0_V_3_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_3_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_3_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_3_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_3_ce0;
        else 
            glPLSlice0_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_3_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_3_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_3_we0;
        else 
            glPLSlice0_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_4_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_4_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_4_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_4_address0;
        else 
            glPLSlice0_V_4_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_4_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_4_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_4_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_4_ce0;
        else 
            glPLSlice0_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_4_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_4_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_4_we0;
        else 
            glPLSlice0_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_5_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_5_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_5_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_5_address0;
        else 
            glPLSlice0_V_5_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_5_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_5_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_5_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_5_ce0;
        else 
            glPLSlice0_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_5_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_5_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_5_we0;
        else 
            glPLSlice0_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_6_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_6_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_6_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_6_address0;
        else 
            glPLSlice0_V_6_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_6_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_6_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_6_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_6_ce0;
        else 
            glPLSlice0_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_6_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_6_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_6_we0;
        else 
            glPLSlice0_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_7_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_7_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_7_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_7_address0;
        else 
            glPLSlice0_V_7_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_7_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_7_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_7_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_7_ce0;
        else 
            glPLSlice0_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_7_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_7_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_7_we0;
        else 
            glPLSlice0_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_8_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_8_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_8_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_8_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_8_address0;
        else 
            glPLSlice0_V_8_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_8_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_8_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_8_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_8_ce0;
        else 
            glPLSlice0_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_8_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_8_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_8_we0;
        else 
            glPLSlice0_V_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_9_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice0_V_9_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_9_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_9_address0 <= grp_accumulateHW_fu_806_glPLSlice0_V_9_address0;
        else 
            glPLSlice0_V_9_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice0_V_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice0_V_9_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice0_V_9_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_9_ce0 <= grp_accumulateHW_fu_806_glPLSlice0_V_9_ce0;
        else 
            glPLSlice0_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice0_V_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice0_V_9_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice0_V_9_we0 <= grp_accumulateHW_fu_806_glPLSlice0_V_9_we0;
        else 
            glPLSlice0_V_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_0_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_0_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_0_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_0_address0;
        else 
            glPLSlice1_V_0_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_0_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_0_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_0_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_0_ce0;
        else 
            glPLSlice1_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_0_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_0_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_0_we0;
        else 
            glPLSlice1_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_10_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_10_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_10_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_10_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_10_address0;
        else 
            glPLSlice1_V_10_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_10_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_10_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_10_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_10_ce0;
        else 
            glPLSlice1_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_10_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_10_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_10_we0;
        else 
            glPLSlice1_V_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_11_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_11_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_11_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_11_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_11_address0;
        else 
            glPLSlice1_V_11_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_11_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_11_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_11_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_11_ce0;
        else 
            glPLSlice1_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_11_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_11_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_11_we0;
        else 
            glPLSlice1_V_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_12_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_12_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_12_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_12_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_12_address0;
        else 
            glPLSlice1_V_12_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_12_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_12_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_12_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_12_ce0;
        else 
            glPLSlice1_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_12_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_12_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_12_we0;
        else 
            glPLSlice1_V_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_13_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_13_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_13_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_13_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_13_address0;
        else 
            glPLSlice1_V_13_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_13_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_13_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_13_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_13_ce0;
        else 
            glPLSlice1_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_13_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_13_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_13_we0;
        else 
            glPLSlice1_V_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_14_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_14_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_14_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_14_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_14_address0;
        else 
            glPLSlice1_V_14_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_14_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_14_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_14_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_14_ce0;
        else 
            glPLSlice1_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_14_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_14_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_14_we0;
        else 
            glPLSlice1_V_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_15_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_15_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_15_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_15_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_15_address0;
        else 
            glPLSlice1_V_15_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_15_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_15_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_15_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_15_ce0;
        else 
            glPLSlice1_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_15_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_15_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_15_we0;
        else 
            glPLSlice1_V_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_1_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_1_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_1_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_1_address0;
        else 
            glPLSlice1_V_1_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_1_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_1_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_1_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_1_ce0;
        else 
            glPLSlice1_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_1_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_1_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_1_we0;
        else 
            glPLSlice1_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_2_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_2_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_2_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_2_address0;
        else 
            glPLSlice1_V_2_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_2_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_2_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_2_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_2_ce0;
        else 
            glPLSlice1_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_2_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_2_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_2_we0;
        else 
            glPLSlice1_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_3_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_3_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_3_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_3_address0;
        else 
            glPLSlice1_V_3_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_3_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_3_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_3_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_3_ce0;
        else 
            glPLSlice1_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_3_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_3_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_3_we0;
        else 
            glPLSlice1_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_4_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_4_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_4_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_4_address0;
        else 
            glPLSlice1_V_4_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_4_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_4_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_4_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_4_ce0;
        else 
            glPLSlice1_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_4_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_4_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_4_we0;
        else 
            glPLSlice1_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_5_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_5_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_5_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_5_address0;
        else 
            glPLSlice1_V_5_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_5_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_5_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_5_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_5_ce0;
        else 
            glPLSlice1_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_5_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_5_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_5_we0;
        else 
            glPLSlice1_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_6_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_6_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_6_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_6_address0;
        else 
            glPLSlice1_V_6_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_6_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_6_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_6_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_6_ce0;
        else 
            glPLSlice1_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_6_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_6_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_6_we0;
        else 
            glPLSlice1_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_7_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_7_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_7_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_7_address0;
        else 
            glPLSlice1_V_7_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_7_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_7_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_7_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_7_ce0;
        else 
            glPLSlice1_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_7_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_7_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_7_we0;
        else 
            glPLSlice1_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_8_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_8_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_8_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_8_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_8_address0;
        else 
            glPLSlice1_V_8_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_8_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_8_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_8_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_8_ce0;
        else 
            glPLSlice1_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_8_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_8_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_8_we0;
        else 
            glPLSlice1_V_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_9_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice1_V_9_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_9_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_9_address0 <= grp_accumulateHW_fu_806_glPLSlice1_V_9_address0;
        else 
            glPLSlice1_V_9_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice1_V_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice1_V_9_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice1_V_9_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_9_ce0 <= grp_accumulateHW_fu_806_glPLSlice1_V_9_ce0;
        else 
            glPLSlice1_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice1_V_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice1_V_9_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice1_V_9_we0 <= grp_accumulateHW_fu_806_glPLSlice1_V_9_we0;
        else 
            glPLSlice1_V_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_0_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_0_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_0_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_0_address0;
        else 
            glPLSlice2_V_0_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_0_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_0_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_0_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_0_ce0;
        else 
            glPLSlice2_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_0_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_0_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_0_we0;
        else 
            glPLSlice2_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_10_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_10_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_10_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_10_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_10_address0;
        else 
            glPLSlice2_V_10_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_10_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_10_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_10_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_10_ce0;
        else 
            glPLSlice2_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_10_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_10_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_10_we0;
        else 
            glPLSlice2_V_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_11_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_11_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_11_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_11_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_11_address0;
        else 
            glPLSlice2_V_11_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_11_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_11_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_11_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_11_ce0;
        else 
            glPLSlice2_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_11_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_11_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_11_we0;
        else 
            glPLSlice2_V_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_12_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_12_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_12_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_12_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_12_address0;
        else 
            glPLSlice2_V_12_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_12_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_12_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_12_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_12_ce0;
        else 
            glPLSlice2_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_12_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_12_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_12_we0;
        else 
            glPLSlice2_V_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_13_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_13_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_13_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_13_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_13_address0;
        else 
            glPLSlice2_V_13_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_13_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_13_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_13_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_13_ce0;
        else 
            glPLSlice2_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_13_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_13_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_13_we0;
        else 
            glPLSlice2_V_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_14_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_14_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_14_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_14_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_14_address0;
        else 
            glPLSlice2_V_14_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_14_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_14_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_14_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_14_ce0;
        else 
            glPLSlice2_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_14_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_14_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_14_we0;
        else 
            glPLSlice2_V_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_15_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_15_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_15_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_15_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_15_address0;
        else 
            glPLSlice2_V_15_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_15_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_15_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_15_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_15_ce0;
        else 
            glPLSlice2_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_15_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_15_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_15_we0;
        else 
            glPLSlice2_V_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_1_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_1_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_1_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_1_address0;
        else 
            glPLSlice2_V_1_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_1_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_1_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_1_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_1_ce0;
        else 
            glPLSlice2_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_1_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_1_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_1_we0;
        else 
            glPLSlice2_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_2_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_2_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_2_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_2_address0;
        else 
            glPLSlice2_V_2_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_2_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_2_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_2_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_2_ce0;
        else 
            glPLSlice2_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_2_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_2_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_2_we0;
        else 
            glPLSlice2_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_3_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_3_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_3_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_3_address0;
        else 
            glPLSlice2_V_3_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_3_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_3_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_3_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_3_ce0;
        else 
            glPLSlice2_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_3_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_3_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_3_we0;
        else 
            glPLSlice2_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_4_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_4_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_4_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_4_address0;
        else 
            glPLSlice2_V_4_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_4_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_4_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_4_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_4_ce0;
        else 
            glPLSlice2_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_4_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_4_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_4_we0;
        else 
            glPLSlice2_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_5_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_5_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_5_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_5_address0;
        else 
            glPLSlice2_V_5_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_5_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_5_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_5_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_5_ce0;
        else 
            glPLSlice2_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_5_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_5_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_5_we0;
        else 
            glPLSlice2_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_6_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_6_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_6_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_6_address0;
        else 
            glPLSlice2_V_6_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_6_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_6_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_6_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_6_ce0;
        else 
            glPLSlice2_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_6_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_6_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_6_we0;
        else 
            glPLSlice2_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_7_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_7_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_7_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_7_address0;
        else 
            glPLSlice2_V_7_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_7_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_7_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_7_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_7_ce0;
        else 
            glPLSlice2_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_7_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_7_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_7_we0;
        else 
            glPLSlice2_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_8_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_8_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_8_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_8_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_8_address0;
        else 
            glPLSlice2_V_8_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_8_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_8_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_8_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_8_ce0;
        else 
            glPLSlice2_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_8_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_8_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_8_we0;
        else 
            glPLSlice2_V_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_9_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, grp_accumulateHW_fu_806_glPLSlice2_V_9_address0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, newIndex1_fu_1033_p1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_9_address0 <= newIndex1_fu_1033_p1(6 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_9_address0 <= grp_accumulateHW_fu_806_glPLSlice2_V_9_address0;
        else 
            glPLSlice2_V_9_address0 <= "XXXXXX";
        end if; 
    end process;


    glPLSlice2_V_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, grp_accumulateHW_fu_806_glPLSlice2_V_9_ce0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glPLSlice2_V_9_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_9_ce0 <= grp_accumulateHW_fu_806_glPLSlice2_V_9_ce0;
        else 
            glPLSlice2_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSlice2_V_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_3_reg_1296, grp_accumulateHW_fu_806_glPLSlice2_V_9_we0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            glPLSlice2_V_9_we0 <= grp_accumulateHW_fu_806_glPLSlice2_V_9_we0;
        else 
            glPLSlice2_V_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_accumulateHW_fu_806_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, tmp_3_reg_1296, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_3_reg_1296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_accumulateHW_fu_806_ap_ce <= ap_const_logic_1;
        else 
            grp_accumulateHW_fu_806_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_accumulateHW_fu_806_ap_start <= grp_accumulateHW_fu_806_ap_start_reg;
    grp_accumulateHW_fu_806_pol <= data_dout(1);
    grp_accumulateHW_fu_806_y <= data_dout(10 downto 2);
    i_cast_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_019_rec_phi_fu_799_p4),32));
    i_fu_960_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_019_rec_phi_fu_799_p4) + unsigned(ap_const_lv31_1));
    i_op_assign_1_fu_1220_p3 <= (y_reg_1310 & ap_const_lv8_0);
    i_op_assign_1_pn_cas_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_1_pn_fu_1227_p3),32));
    i_op_assign_1_pn_fu_1227_p3 <= 
        tmp_16_cast_fu_1216_p1 when (tmp_5_reg_1305_pp0_iter1_reg(0) = '1') else 
        i_op_assign_1_fu_1220_p3;
    localCnt_fu_1249_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(i_op_assign_fu_196));
    newIndex1_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex_reg_1323),64));
    tmp1_fu_1238_p2 <= std_logic_vector(unsigned(tmp_10_reg_1568) + unsigned(i_op_assign_1_pn_cas_fu_1234_p1));
    tmp2_fu_1207_p2 <= std_logic_vector(unsigned(tmp_12_fu_1162_p1) + unsigned(tmp_13_fu_1203_p1));
    tmp_10_fu_1121_p1 <= tmp_6_fu_1084_p18(32 - 1 downto 0);
    tmp_11_fu_1259_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(glCnt));
    tmp_12_fu_1162_p1 <= tmp_8_fu_1125_p18(32 - 1 downto 0);
    tmp_13_fu_1203_p1 <= tmp_7_fu_1166_p18(32 - 1 downto 0);
    tmp_16_cast_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_fu_196),17));
    tmp_1_fu_921_p2 <= "1" when (glPLActiveSliceIdx_V = ap_const_lv2_1) else "0";
    tmp_2_fu_927_p2 <= "1" when (glPLActiveSliceIdx_V = ap_const_lv2_2) else "0";
    tmp_3_fu_955_p2 <= "1" when (signed(i_cast_fu_951_p1) < signed(eventsArraySize)) else "0";
    tmp_5_fu_966_p2 <= "1" when (ap_phi_mux_p_019_rec_phi_fu_799_p4 = ap_const_lv31_0) else "0";
    tmp_9_fu_1007_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(x_cast_cast_fu_1002_p1));
    tmp_fu_915_p2 <= "1" when (glPLActiveSliceIdx_V = ap_const_lv2_0) else "0";
    x_cast_cast_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_972_p4),10));
    x_fu_972_p4 <= data_dout(25 downto 17);
end behav;
