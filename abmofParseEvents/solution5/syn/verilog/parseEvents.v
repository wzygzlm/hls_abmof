// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="parseEvents,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z007sclg225-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.201000,HLS_SYN_LAT=10006,HLS_SYN_TPT=none,HLS_SYN_MEM=120,HLS_SYN_DSP=0,HLS_SYN_FF=515,HLS_SYN_LUT=1062}" *)

module parseEvents (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_dout,
        data_empty_n,
        data_read,
        eventsArraySize,
        eventSlice_din,
        eventSlice_full_n,
        eventSlice_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] data_dout;
input   data_empty_n;
output   data_read;
input  [31:0] eventsArraySize;
output  [31:0] eventSlice_din;
input   eventSlice_full_n;
output   eventSlice_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_read;
reg eventSlice_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] glPLActiveSliceIdx_V;
reg   [7:0] glPLSlice0_V_0_address0;
reg    glPLSlice0_V_0_ce0;
reg    glPLSlice0_V_0_we0;
wire   [179:0] glPLSlice0_V_0_q0;
wire   [7:0] glPLSlice0_V_0_address1;
reg    glPLSlice0_V_0_ce1;
wire   [179:0] glPLSlice0_V_0_q1;
reg   [7:0] glPLSlice0_V_1_address0;
reg    glPLSlice0_V_1_ce0;
reg    glPLSlice0_V_1_we0;
wire   [179:0] glPLSlice0_V_1_q0;
wire   [7:0] glPLSlice0_V_1_address1;
reg    glPLSlice0_V_1_ce1;
wire   [179:0] glPLSlice0_V_1_q1;
reg   [7:0] glPLSlice0_V_2_address0;
reg    glPLSlice0_V_2_ce0;
reg    glPLSlice0_V_2_we0;
wire   [179:0] glPLSlice0_V_2_q0;
wire   [7:0] glPLSlice0_V_2_address1;
reg    glPLSlice0_V_2_ce1;
wire   [179:0] glPLSlice0_V_2_q1;
reg   [7:0] glPLSlice0_V_3_address0;
reg    glPLSlice0_V_3_ce0;
reg    glPLSlice0_V_3_we0;
wire   [179:0] glPLSlice0_V_3_q0;
wire   [7:0] glPLSlice0_V_3_address1;
reg    glPLSlice0_V_3_ce1;
wire   [179:0] glPLSlice0_V_3_q1;
reg   [7:0] glPLSlice1_V_0_address0;
reg    glPLSlice1_V_0_ce0;
reg    glPLSlice1_V_0_we0;
wire   [179:0] glPLSlice1_V_0_q0;
wire   [7:0] glPLSlice1_V_0_address1;
reg    glPLSlice1_V_0_ce1;
wire   [179:0] glPLSlice1_V_0_q1;
reg   [7:0] glPLSlice1_V_1_address0;
reg    glPLSlice1_V_1_ce0;
reg    glPLSlice1_V_1_we0;
wire   [179:0] glPLSlice1_V_1_q0;
wire   [7:0] glPLSlice1_V_1_address1;
reg    glPLSlice1_V_1_ce1;
wire   [179:0] glPLSlice1_V_1_q1;
reg   [7:0] glPLSlice1_V_2_address0;
reg    glPLSlice1_V_2_ce0;
reg    glPLSlice1_V_2_we0;
wire   [179:0] glPLSlice1_V_2_q0;
wire   [7:0] glPLSlice1_V_2_address1;
reg    glPLSlice1_V_2_ce1;
wire   [179:0] glPLSlice1_V_2_q1;
reg   [7:0] glPLSlice1_V_3_address0;
reg    glPLSlice1_V_3_ce0;
reg    glPLSlice1_V_3_we0;
wire   [179:0] glPLSlice1_V_3_q0;
wire   [7:0] glPLSlice1_V_3_address1;
reg    glPLSlice1_V_3_ce1;
wire   [179:0] glPLSlice1_V_3_q1;
reg   [7:0] glPLSlice2_V_0_address0;
reg    glPLSlice2_V_0_ce0;
reg    glPLSlice2_V_0_we0;
wire   [179:0] glPLSlice2_V_0_q0;
wire   [7:0] glPLSlice2_V_0_address1;
reg    glPLSlice2_V_0_ce1;
wire   [179:0] glPLSlice2_V_0_q1;
reg   [7:0] glPLSlice2_V_1_address0;
reg    glPLSlice2_V_1_ce0;
reg    glPLSlice2_V_1_we0;
wire   [179:0] glPLSlice2_V_1_q0;
wire   [7:0] glPLSlice2_V_1_address1;
reg    glPLSlice2_V_1_ce1;
wire   [179:0] glPLSlice2_V_1_q1;
reg   [7:0] glPLSlice2_V_2_address0;
reg    glPLSlice2_V_2_ce0;
reg    glPLSlice2_V_2_we0;
wire   [179:0] glPLSlice2_V_2_q0;
wire   [7:0] glPLSlice2_V_2_address1;
reg    glPLSlice2_V_2_ce1;
wire   [179:0] glPLSlice2_V_2_q1;
reg   [7:0] glPLSlice2_V_3_address0;
reg    glPLSlice2_V_3_ce0;
reg    glPLSlice2_V_3_we0;
wire   [179:0] glPLSlice2_V_3_q0;
wire   [7:0] glPLSlice2_V_3_address1;
reg    glPLSlice2_V_3_ce1;
wire   [179:0] glPLSlice2_V_3_q1;
reg   [15:0] glCnt;
reg    data_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_3_reg_1394;
reg    eventSlice_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_3_reg_1394_pp0_iter2_reg;
reg   [30:0] p_019_rec_reg_467;
wire   [0:0] tmp_s_fu_538_p2;
reg   [0:0] tmp_s_reg_1382;
wire   [0:0] tmp_7_fu_544_p2;
reg   [0:0] tmp_7_reg_1386;
wire   [0:0] tmp_9_fu_550_p2;
reg   [0:0] tmp_9_reg_1390;
wire   [0:0] tmp_3_fu_560_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
reg    ap_block_state8_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_3_reg_1394_pp0_iter1_reg;
wire   [30:0] i_fu_565_p2;
reg   [30:0] i_reg_1398;
wire   [0:0] tmp_26_fu_571_p2;
reg   [0:0] tmp_26_reg_1403;
reg   [0:0] tmp_26_reg_1403_pp0_iter1_reg;
reg   [0:0] tmp_26_reg_1403_pp0_iter2_reg;
reg   [8:0] y_reg_1408;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
reg   [8:0] y_reg_1408_pp0_iter1_reg;
reg   [8:0] y_reg_1408_pp0_iter2_reg;
reg   [0:0] tmp_14_reg_1414;
reg   [7:0] tmp_8_reg_1418;
reg   [6:0] tmp_11_reg_1423;
reg   [1:0] tmp_13_reg_1428;
reg   [1:0] arrayNo3_reg_1435;
reg   [1:0] arrayNo3_reg_1435_pp0_iter1_reg;
reg   [7:0] newIndex6_reg_1442;
reg   [7:0] newIndex6_reg_1442_pp0_iter1_reg;
wire  signed [8:0] tmp_12_fu_675_p3;
reg  signed [8:0] tmp_12_reg_1447;
reg   [7:0] glPLSlice2_V_0_addr_reg_1456;
reg   [7:0] glPLSlice2_V_1_addr_reg_1461;
reg   [7:0] glPLSlice2_V_2_addr_reg_1466;
reg   [7:0] glPLSlice2_V_3_addr_reg_1471;
reg   [7:0] glPLSlice1_V_0_addr_reg_1476;
reg   [7:0] glPLSlice1_V_1_addr_reg_1481;
reg   [7:0] glPLSlice1_V_2_addr_reg_1486;
reg   [7:0] glPLSlice1_V_3_addr_reg_1491;
reg   [7:0] glPLSlice0_V_0_addr_reg_1496;
reg   [7:0] glPLSlice0_V_1_addr_reg_1501;
reg   [7:0] glPLSlice0_V_2_addr_reg_1506;
reg   [7:0] glPLSlice0_V_3_addr_reg_1511;
wire   [31:0] tmp_57_fu_1255_p1;
reg   [31:0] tmp_57_reg_1576;
wire   [31:0] tmp2_fu_1293_p2;
reg   [31:0] tmp2_reg_1581;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [1:0] ap_phi_mux_glPLActiveSliceIdx_V_2_phi_fu_454_p8;
wire   [0:0] tmp_fu_502_p2;
wire   [0:0] tmp_1_fu_508_p2;
wire   [0:0] tmp_2_fu_514_p2;
reg   [30:0] ap_phi_mux_p_019_rec_phi_fu_471_p4;
wire   [63:0] newIndex5_fu_699_p1;
wire   [63:0] newIndex4_fu_707_p1;
wire   [63:0] newIndex2_fu_715_p1;
wire   [63:0] newIndex7_fu_1227_p1;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] tmp_35_fu_1345_p2;
reg   [15:0] i_op_assign_fu_152;
wire   [15:0] localCnt_fu_1335_p2;
reg   [179:0] tmp_56_fu_877_p4;
reg   [179:0] tmp_44_fu_1045_p4;
reg   [179:0] tmp_29_fu_1213_p4;
wire   [9:0] xNewIdx_V_fu_692_p2;
wire   [31:0] i_cast_fu_556_p1;
wire   [8:0] x_fu_577_p4;
wire   [9:0] tmp_34_cast_fu_635_p1;
wire   [9:0] tmp_27_fu_639_p2;
wire   [9:0] tmp_10_fu_665_p3;
wire  signed [9:0] tmp_14_cast_fu_682_p1;
wire   [9:0] tmp_12_cast_fu_672_p1;
wire   [9:0] p_0505_0_i_fu_686_p2;
wire   [7:0] grp_fu_478_p4;
wire   [179:0] tmpData_V_2_fu_723_p6;
wire  signed [31:0] tmp_27_cast_fu_736_p1;
wire   [31:0] index_assign_9_s_fu_747_p2;
wire   [8:0] grp_fu_487_p2;
wire  signed [31:0] index_assign_9_1_cas_fu_761_p1;
wire   [8:0] grp_fu_492_p2;
wire  signed [31:0] index_assign_9_2_cas_fu_773_p1;
wire   [0:0] tmp_48_fu_777_p3;
wire   [0:0] tmp_47_fu_765_p3;
wire   [0:0] tmp_46_fu_753_p3;
wire   [0:0] tmp_45_fu_739_p3;
wire   [3:0] p_Result_16_3_fu_785_p5;
wire   [3:0] tmpTmpData_V_2_fu_797_p2;
wire   [0:0] tmp_49_fu_803_p1;
wire   [63:0] p_Repl2_5_fu_807_p1;
wire   [0:0] tmp_51_fu_821_p3;
reg   [179:0] tmp_50_fu_811_p4;
wire   [63:0] p_Repl2_5_1_fu_829_p1;
wire   [0:0] tmp_53_fu_843_p3;
reg   [179:0] tmp_52_fu_833_p4;
wire   [63:0] p_Repl2_5_2_fu_851_p1;
wire   [0:0] tmp_55_fu_865_p3;
reg   [179:0] tmp_54_fu_855_p4;
wire   [63:0] p_Repl2_5_3_fu_873_p1;
wire   [179:0] tmpData_V_1_fu_891_p6;
wire  signed [31:0] tmp_22_cast_fu_904_p1;
wire   [31:0] index_assign_5_s_fu_915_p2;
wire  signed [31:0] index_assign_5_1_cas_fu_929_p1;
wire  signed [31:0] index_assign_5_2_cas_fu_941_p1;
wire   [0:0] tmp_36_fu_945_p3;
wire   [0:0] tmp_34_fu_933_p3;
wire   [0:0] tmp_33_fu_921_p3;
wire   [0:0] tmp_31_fu_907_p3;
wire   [3:0] p_Result_14_3_fu_953_p5;
wire   [3:0] tmpTmpData_V_1_fu_965_p2;
wire   [0:0] tmp_37_fu_971_p1;
wire   [63:0] p_Repl2_4_fu_975_p1;
wire   [0:0] tmp_39_fu_989_p3;
reg   [179:0] tmp_38_fu_979_p4;
wire   [63:0] p_Repl2_4_1_fu_997_p1;
wire   [0:0] tmp_41_fu_1011_p3;
reg   [179:0] tmp_40_fu_1001_p4;
wire   [63:0] p_Repl2_4_2_fu_1019_p1;
wire   [0:0] tmp_43_fu_1033_p3;
reg   [179:0] tmp_42_fu_1023_p4;
wire   [63:0] p_Repl2_4_3_fu_1041_p1;
wire   [179:0] tmpData_V_fu_1059_p6;
wire  signed [31:0] tmp_18_cast_fu_1072_p1;
wire   [31:0] index_assign_1_s_fu_1083_p2;
wire  signed [31:0] index_assign_1_1_cas_fu_1097_p1;
wire  signed [31:0] index_assign_1_2_cas_fu_1109_p1;
wire   [0:0] tmp_18_fu_1113_p3;
wire   [0:0] tmp_17_fu_1101_p3;
wire   [0:0] tmp_16_fu_1089_p3;
wire   [0:0] tmp_15_fu_1075_p3;
wire   [3:0] p_Result_12_3_fu_1121_p5;
wire   [3:0] tmpTmpData_V_fu_1133_p2;
wire   [0:0] tmp_19_fu_1139_p1;
wire   [63:0] p_Repl2_2_fu_1143_p1;
wire   [0:0] tmp_21_fu_1157_p3;
reg   [179:0] tmp_20_fu_1147_p4;
wire   [63:0] p_Repl2_2_1_fu_1165_p1;
wire   [0:0] tmp_23_fu_1179_p3;
reg   [179:0] tmp_22_fu_1169_p4;
wire   [63:0] p_Repl2_2_2_fu_1187_p1;
wire   [0:0] tmp_25_fu_1201_p3;
reg   [179:0] tmp_24_fu_1191_p4;
wire   [63:0] p_Repl2_2_3_fu_1209_p1;
wire   [179:0] tmp_28_fu_1242_p6;
wire   [179:0] tmp_30_fu_1259_p6;
wire   [179:0] tmp_32_fu_1276_p6;
wire   [31:0] tmp_58_fu_1272_p1;
wire   [31:0] tmp_59_fu_1289_p1;
wire   [16:0] tmp_40_cast_fu_1302_p1;
wire   [16:0] i_op_assign_1_fu_1306_p3;
wire   [16:0] i_op_assign_7_pn_fu_1313_p3;
wire   [31:0] i_op_assign_7_pn_cas_fu_1320_p1;
wire   [31:0] tmp1_fu_1324_p2;
wire    ap_CS_fsm_state9;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_392;
reg    ap_condition_398;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 glPLActiveSliceIdx_V = 2'd0;
#0 glCnt = 16'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice0_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice0_V_0_address0),
    .ce0(glPLSlice0_V_0_ce0),
    .we0(glPLSlice0_V_0_we0),
    .d0(tmp_29_fu_1213_p4),
    .q0(glPLSlice0_V_0_q0),
    .address1(glPLSlice0_V_0_address1),
    .ce1(glPLSlice0_V_0_ce1),
    .q1(glPLSlice0_V_0_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice0_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice0_V_1_address0),
    .ce0(glPLSlice0_V_1_ce0),
    .we0(glPLSlice0_V_1_we0),
    .d0(tmp_29_fu_1213_p4),
    .q0(glPLSlice0_V_1_q0),
    .address1(glPLSlice0_V_1_address1),
    .ce1(glPLSlice0_V_1_ce1),
    .q1(glPLSlice0_V_1_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice0_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice0_V_2_address0),
    .ce0(glPLSlice0_V_2_ce0),
    .we0(glPLSlice0_V_2_we0),
    .d0(tmp_29_fu_1213_p4),
    .q0(glPLSlice0_V_2_q0),
    .address1(glPLSlice0_V_2_address1),
    .ce1(glPLSlice0_V_2_ce1),
    .q1(glPLSlice0_V_2_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice0_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice0_V_3_address0),
    .ce0(glPLSlice0_V_3_ce0),
    .we0(glPLSlice0_V_3_we0),
    .d0(tmp_29_fu_1213_p4),
    .q0(glPLSlice0_V_3_q0),
    .address1(glPLSlice0_V_3_address1),
    .ce1(glPLSlice0_V_3_ce1),
    .q1(glPLSlice0_V_3_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice1_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice1_V_0_address0),
    .ce0(glPLSlice1_V_0_ce0),
    .we0(glPLSlice1_V_0_we0),
    .d0(tmp_44_fu_1045_p4),
    .q0(glPLSlice1_V_0_q0),
    .address1(glPLSlice1_V_0_address1),
    .ce1(glPLSlice1_V_0_ce1),
    .q1(glPLSlice1_V_0_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice1_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice1_V_1_address0),
    .ce0(glPLSlice1_V_1_ce0),
    .we0(glPLSlice1_V_1_we0),
    .d0(tmp_44_fu_1045_p4),
    .q0(glPLSlice1_V_1_q0),
    .address1(glPLSlice1_V_1_address1),
    .ce1(glPLSlice1_V_1_ce1),
    .q1(glPLSlice1_V_1_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice1_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice1_V_2_address0),
    .ce0(glPLSlice1_V_2_ce0),
    .we0(glPLSlice1_V_2_we0),
    .d0(tmp_44_fu_1045_p4),
    .q0(glPLSlice1_V_2_q0),
    .address1(glPLSlice1_V_2_address1),
    .ce1(glPLSlice1_V_2_ce1),
    .q1(glPLSlice1_V_2_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice1_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice1_V_3_address0),
    .ce0(glPLSlice1_V_3_ce0),
    .we0(glPLSlice1_V_3_we0),
    .d0(tmp_44_fu_1045_p4),
    .q0(glPLSlice1_V_3_q0),
    .address1(glPLSlice1_V_3_address1),
    .ce1(glPLSlice1_V_3_ce1),
    .q1(glPLSlice1_V_3_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice2_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice2_V_0_address0),
    .ce0(glPLSlice2_V_0_ce0),
    .we0(glPLSlice2_V_0_we0),
    .d0(tmp_56_fu_877_p4),
    .q0(glPLSlice2_V_0_q0),
    .address1(glPLSlice2_V_0_address1),
    .ce1(glPLSlice2_V_0_ce1),
    .q1(glPLSlice2_V_0_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice2_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice2_V_1_address0),
    .ce0(glPLSlice2_V_1_ce0),
    .we0(glPLSlice2_V_1_we0),
    .d0(tmp_56_fu_877_p4),
    .q0(glPLSlice2_V_1_q0),
    .address1(glPLSlice2_V_1_address1),
    .ce1(glPLSlice2_V_1_ce1),
    .q1(glPLSlice2_V_1_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice2_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice2_V_2_address0),
    .ce0(glPLSlice2_V_2_ce0),
    .we0(glPLSlice2_V_2_we0),
    .d0(tmp_56_fu_877_p4),
    .q0(glPLSlice2_V_2_q0),
    .address1(glPLSlice2_V_2_address1),
    .ce1(glPLSlice2_V_2_ce1),
    .q1(glPLSlice2_V_2_q1)
);

parseEvents_glPLSbkb #(
    .DataWidth( 180 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
glPLSlice2_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(glPLSlice2_V_3_address0),
    .ce0(glPLSlice2_V_3_ce0),
    .we0(glPLSlice2_V_3_we0),
    .d0(tmp_56_fu_877_p4),
    .q0(glPLSlice2_V_3_q0),
    .address1(glPLSlice2_V_3_address1),
    .ce1(glPLSlice2_V_3_ce1),
    .q1(glPLSlice2_V_3_q1)
);

parseEvents_mux_4ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 180 ),
    .din1_WIDTH( 180 ),
    .din2_WIDTH( 180 ),
    .din3_WIDTH( 180 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 180 ))
parseEvents_mux_4ncg_U1(
    .din0(glPLSlice2_V_0_q0),
    .din1(glPLSlice2_V_1_q0),
    .din2(glPLSlice2_V_2_q0),
    .din3(glPLSlice2_V_3_q0),
    .din4(tmp_13_reg_1428),
    .dout(tmpData_V_2_fu_723_p6)
);

parseEvents_mux_4ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 180 ),
    .din1_WIDTH( 180 ),
    .din2_WIDTH( 180 ),
    .din3_WIDTH( 180 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 180 ))
parseEvents_mux_4ncg_U2(
    .din0(glPLSlice1_V_0_q0),
    .din1(glPLSlice1_V_1_q0),
    .din2(glPLSlice1_V_2_q0),
    .din3(glPLSlice1_V_3_q0),
    .din4(tmp_13_reg_1428),
    .dout(tmpData_V_1_fu_891_p6)
);

parseEvents_mux_4ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 180 ),
    .din1_WIDTH( 180 ),
    .din2_WIDTH( 180 ),
    .din3_WIDTH( 180 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 180 ))
parseEvents_mux_4ncg_U3(
    .din0(glPLSlice0_V_0_q0),
    .din1(glPLSlice0_V_1_q0),
    .din2(glPLSlice0_V_2_q0),
    .din3(glPLSlice0_V_3_q0),
    .din4(tmp_13_reg_1428),
    .dout(tmpData_V_fu_1059_p6)
);

parseEvents_mux_4ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 180 ),
    .din1_WIDTH( 180 ),
    .din2_WIDTH( 180 ),
    .din3_WIDTH( 180 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 180 ))
parseEvents_mux_4ncg_U4(
    .din0(glPLSlice0_V_1_q1),
    .din1(glPLSlice0_V_2_q1),
    .din2(glPLSlice0_V_3_q1),
    .din3(glPLSlice0_V_0_q1),
    .din4(arrayNo3_reg_1435_pp0_iter1_reg),
    .dout(tmp_28_fu_1242_p6)
);

parseEvents_mux_4ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 180 ),
    .din1_WIDTH( 180 ),
    .din2_WIDTH( 180 ),
    .din3_WIDTH( 180 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 180 ))
parseEvents_mux_4ncg_U5(
    .din0(glPLSlice1_V_1_q1),
    .din1(glPLSlice1_V_2_q1),
    .din2(glPLSlice1_V_3_q1),
    .din3(glPLSlice1_V_0_q1),
    .din4(arrayNo3_reg_1435_pp0_iter1_reg),
    .dout(tmp_30_fu_1259_p6)
);

parseEvents_mux_4ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 180 ),
    .din1_WIDTH( 180 ),
    .din2_WIDTH( 180 ),
    .din3_WIDTH( 180 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 180 ))
parseEvents_mux_4ncg_U6(
    .din0(glPLSlice2_V_1_q1),
    .din1(glPLSlice2_V_2_q1),
    .din2(glPLSlice2_V_3_q1),
    .din3(glPLSlice2_V_0_q1),
    .din4(arrayNo3_reg_1435_pp0_iter1_reg),
    .dout(tmp_32_fu_1276_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((tmp_fu_502_p2 == 1'd1)) begin
            glPLActiveSliceIdx_V <= 2'd1;
        end else if (((tmp_fu_502_p2 == 1'd0) & (tmp_1_fu_508_p2 == 1'd1))) begin
            glPLActiveSliceIdx_V <= 2'd2;
        end else if ((1'b1 == ap_condition_392)) begin
            glPLActiveSliceIdx_V <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_3_reg_1394 == 1'd1))) begin
        p_019_rec_reg_467 <= i_reg_1398;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_019_rec_reg_467 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_3_reg_1394 == 1'd1))) begin
        arrayNo3_reg_1435 <= {{data_dout[18:17]}};
        newIndex6_reg_1442 <= {{tmp_27_fu_639_p2[9:2]}};
        tmp_11_reg_1423 <= {{data_dout[10:4]}};
        tmp_13_reg_1428 <= {{data_dout[3:2]}};
        tmp_14_reg_1414 <= data_dout[32'd1];
        tmp_8_reg_1418 <= {{data_dout[24:17]}};
        y_reg_1408 <= {{data_dout[10:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        arrayNo3_reg_1435_pp0_iter1_reg <= arrayNo3_reg_1435;
        newIndex6_reg_1442_pp0_iter1_reg <= newIndex6_reg_1442;
        y_reg_1408_pp0_iter1_reg <= y_reg_1408;
        y_reg_1408_pp0_iter2_reg <= y_reg_1408_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_3_reg_1394_pp0_iter2_reg == 1'd1))) begin
        glCnt <= tmp_35_fu_1345_p2;
        i_op_assign_fu_152 <= localCnt_fu_1335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_14_reg_1414 == 1'd1) & (tmp_s_reg_1382 == 1'd1))) begin
        glPLSlice0_V_0_addr_reg_1496 <= newIndex2_fu_715_p1;
        glPLSlice0_V_1_addr_reg_1501 <= newIndex2_fu_715_p1;
        glPLSlice0_V_2_addr_reg_1506 <= newIndex2_fu_715_p1;
        glPLSlice0_V_3_addr_reg_1511 <= newIndex2_fu_715_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_s_reg_1382 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_14_reg_1414 == 1'd1) & (tmp_7_reg_1386 == 1'd1))) begin
        glPLSlice1_V_0_addr_reg_1476 <= newIndex4_fu_707_p1;
        glPLSlice1_V_1_addr_reg_1481 <= newIndex4_fu_707_p1;
        glPLSlice1_V_2_addr_reg_1486 <= newIndex4_fu_707_p1;
        glPLSlice1_V_3_addr_reg_1491 <= newIndex4_fu_707_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_7_reg_1386 == 1'd0) & (tmp_s_reg_1382 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_14_reg_1414 == 1'd1) & (tmp_9_reg_1390 == 1'd1))) begin
        glPLSlice2_V_0_addr_reg_1456 <= newIndex5_fu_699_p1;
        glPLSlice2_V_1_addr_reg_1461 <= newIndex5_fu_699_p1;
        glPLSlice2_V_2_addr_reg_1466 <= newIndex5_fu_699_p1;
        glPLSlice2_V_3_addr_reg_1471 <= newIndex5_fu_699_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_reg_1398 <= i_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_3_reg_1394_pp0_iter2_reg == 1'd1))) begin
        tmp2_reg_1581 <= tmp2_fu_1293_p2;
        tmp_57_reg_1576 <= tmp_57_fu_1255_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_12_reg_1447[8 : 2] <= tmp_12_fu_675_p3[8 : 2];
        tmp_26_reg_1403_pp0_iter1_reg <= tmp_26_reg_1403;
        tmp_26_reg_1403_pp0_iter2_reg <= tmp_26_reg_1403_pp0_iter1_reg;
        tmp_3_reg_1394 <= tmp_3_fu_560_p2;
        tmp_3_reg_1394_pp0_iter1_reg <= tmp_3_reg_1394;
        tmp_3_reg_1394_pp0_iter2_reg <= tmp_3_reg_1394_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_3_fu_560_p2 == 1'd1))) begin
        tmp_26_reg_1403 <= tmp_26_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_7_reg_1386 <= tmp_7_fu_544_p2;
        tmp_9_reg_1390 <= tmp_9_fu_550_p2;
        tmp_s_reg_1382 <= tmp_s_fu_538_p2;
    end
end

always @ (*) begin
    if ((tmp_3_fu_560_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if ((1'b1 == ap_condition_398)) begin
            ap_phi_mux_glPLActiveSliceIdx_V_2_phi_fu_454_p8 = glPLActiveSliceIdx_V;
        end else if ((1'b1 == ap_condition_392)) begin
            ap_phi_mux_glPLActiveSliceIdx_V_2_phi_fu_454_p8 = 2'd0;
        end else if (((tmp_fu_502_p2 == 1'd0) & (tmp_1_fu_508_p2 == 1'd1))) begin
            ap_phi_mux_glPLActiveSliceIdx_V_2_phi_fu_454_p8 = 2'd2;
        end else if ((tmp_fu_502_p2 == 1'd1)) begin
            ap_phi_mux_glPLActiveSliceIdx_V_2_phi_fu_454_p8 = 2'd1;
        end else begin
            ap_phi_mux_glPLActiveSliceIdx_V_2_phi_fu_454_p8 = 'bx;
        end
    end else begin
        ap_phi_mux_glPLActiveSliceIdx_V_2_phi_fu_454_p8 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_3_reg_1394 == 1'd1))) begin
        ap_phi_mux_p_019_rec_phi_fu_471_p4 = i_reg_1398;
    end else begin
        ap_phi_mux_p_019_rec_phi_fu_471_p4 = p_019_rec_reg_467;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_3_reg_1394 == 1'd1) & (1'b0 == ap_block_pp0_stage1))) begin
        data_blk_n = data_empty_n;
    end else begin
        data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_3_reg_1394 == 1'd1))) begin
        data_read = 1'b1;
    end else begin
        data_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_3_reg_1394_pp0_iter2_reg == 1'd1))) begin
        eventSlice_blk_n = eventSlice_full_n;
    end else begin
        eventSlice_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_3_reg_1394_pp0_iter2_reg == 1'd1))) begin
        eventSlice_write = 1'b1;
    end else begin
        eventSlice_write = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice0_V_0_address0 = glPLSlice0_V_0_addr_reg_1496;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice0_V_0_address0 = newIndex2_fu_715_p1;
        end else begin
            glPLSlice0_V_0_address0 = 'bx;
        end
    end else begin
        glPLSlice0_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice0_V_0_ce0 = 1'b1;
    end else begin
        glPLSlice0_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice0_V_0_ce1 = 1'b1;
    end else begin
        glPLSlice0_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_s_reg_1382 == 1'd1))) begin
        glPLSlice0_V_0_we0 = 1'b1;
    end else begin
        glPLSlice0_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice0_V_1_address0 = glPLSlice0_V_1_addr_reg_1501;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice0_V_1_address0 = newIndex2_fu_715_p1;
        end else begin
            glPLSlice0_V_1_address0 = 'bx;
        end
    end else begin
        glPLSlice0_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice0_V_1_ce0 = 1'b1;
    end else begin
        glPLSlice0_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice0_V_1_ce1 = 1'b1;
    end else begin
        glPLSlice0_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_s_reg_1382 == 1'd1))) begin
        glPLSlice0_V_1_we0 = 1'b1;
    end else begin
        glPLSlice0_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice0_V_2_address0 = glPLSlice0_V_2_addr_reg_1506;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice0_V_2_address0 = newIndex2_fu_715_p1;
        end else begin
            glPLSlice0_V_2_address0 = 'bx;
        end
    end else begin
        glPLSlice0_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice0_V_2_ce0 = 1'b1;
    end else begin
        glPLSlice0_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice0_V_2_ce1 = 1'b1;
    end else begin
        glPLSlice0_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_s_reg_1382 == 1'd1))) begin
        glPLSlice0_V_2_we0 = 1'b1;
    end else begin
        glPLSlice0_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice0_V_3_address0 = glPLSlice0_V_3_addr_reg_1511;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice0_V_3_address0 = newIndex2_fu_715_p1;
        end else begin
            glPLSlice0_V_3_address0 = 'bx;
        end
    end else begin
        glPLSlice0_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice0_V_3_ce0 = 1'b1;
    end else begin
        glPLSlice0_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice0_V_3_ce1 = 1'b1;
    end else begin
        glPLSlice0_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd3) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_s_reg_1382 == 1'd1))) begin
        glPLSlice0_V_3_we0 = 1'b1;
    end else begin
        glPLSlice0_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice1_V_0_address0 = glPLSlice1_V_0_addr_reg_1476;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice1_V_0_address0 = newIndex4_fu_707_p1;
        end else begin
            glPLSlice1_V_0_address0 = 'bx;
        end
    end else begin
        glPLSlice1_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice1_V_0_ce0 = 1'b1;
    end else begin
        glPLSlice1_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice1_V_0_ce1 = 1'b1;
    end else begin
        glPLSlice1_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_s_reg_1382 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_7_reg_1386 == 1'd1))) begin
        glPLSlice1_V_0_we0 = 1'b1;
    end else begin
        glPLSlice1_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice1_V_1_address0 = glPLSlice1_V_1_addr_reg_1481;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice1_V_1_address0 = newIndex4_fu_707_p1;
        end else begin
            glPLSlice1_V_1_address0 = 'bx;
        end
    end else begin
        glPLSlice1_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice1_V_1_ce0 = 1'b1;
    end else begin
        glPLSlice1_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice1_V_1_ce1 = 1'b1;
    end else begin
        glPLSlice1_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_s_reg_1382 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_7_reg_1386 == 1'd1))) begin
        glPLSlice1_V_1_we0 = 1'b1;
    end else begin
        glPLSlice1_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice1_V_2_address0 = glPLSlice1_V_2_addr_reg_1486;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice1_V_2_address0 = newIndex4_fu_707_p1;
        end else begin
            glPLSlice1_V_2_address0 = 'bx;
        end
    end else begin
        glPLSlice1_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice1_V_2_ce0 = 1'b1;
    end else begin
        glPLSlice1_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice1_V_2_ce1 = 1'b1;
    end else begin
        glPLSlice1_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_s_reg_1382 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_7_reg_1386 == 1'd1))) begin
        glPLSlice1_V_2_we0 = 1'b1;
    end else begin
        glPLSlice1_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice1_V_3_address0 = glPLSlice1_V_3_addr_reg_1491;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice1_V_3_address0 = newIndex4_fu_707_p1;
        end else begin
            glPLSlice1_V_3_address0 = 'bx;
        end
    end else begin
        glPLSlice1_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice1_V_3_ce0 = 1'b1;
    end else begin
        glPLSlice1_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice1_V_3_ce1 = 1'b1;
    end else begin
        glPLSlice1_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd3) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_s_reg_1382 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_7_reg_1386 == 1'd1))) begin
        glPLSlice1_V_3_we0 = 1'b1;
    end else begin
        glPLSlice1_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice2_V_0_address0 = glPLSlice2_V_0_addr_reg_1456;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice2_V_0_address0 = newIndex5_fu_699_p1;
        end else begin
            glPLSlice2_V_0_address0 = 'bx;
        end
    end else begin
        glPLSlice2_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice2_V_0_ce0 = 1'b1;
    end else begin
        glPLSlice2_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice2_V_0_ce1 = 1'b1;
    end else begin
        glPLSlice2_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_7_reg_1386 == 1'd0) & (tmp_s_reg_1382 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_9_reg_1390 == 1'd1))) begin
        glPLSlice2_V_0_we0 = 1'b1;
    end else begin
        glPLSlice2_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice2_V_1_address0 = glPLSlice2_V_1_addr_reg_1461;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice2_V_1_address0 = newIndex5_fu_699_p1;
        end else begin
            glPLSlice2_V_1_address0 = 'bx;
        end
    end else begin
        glPLSlice2_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice2_V_1_ce0 = 1'b1;
    end else begin
        glPLSlice2_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice2_V_1_ce1 = 1'b1;
    end else begin
        glPLSlice2_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_7_reg_1386 == 1'd0) & (tmp_s_reg_1382 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_9_reg_1390 == 1'd1))) begin
        glPLSlice2_V_1_we0 = 1'b1;
    end else begin
        glPLSlice2_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice2_V_2_address0 = glPLSlice2_V_2_addr_reg_1466;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice2_V_2_address0 = newIndex5_fu_699_p1;
        end else begin
            glPLSlice2_V_2_address0 = 'bx;
        end
    end else begin
        glPLSlice2_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice2_V_2_ce0 = 1'b1;
    end else begin
        glPLSlice2_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice2_V_2_ce1 = 1'b1;
    end else begin
        glPLSlice2_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_7_reg_1386 == 1'd0) & (tmp_s_reg_1382 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_9_reg_1390 == 1'd1))) begin
        glPLSlice2_V_2_we0 = 1'b1;
    end else begin
        glPLSlice2_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            glPLSlice2_V_3_address0 = glPLSlice2_V_3_addr_reg_1471;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            glPLSlice2_V_3_address0 = newIndex5_fu_699_p1;
        end else begin
            glPLSlice2_V_3_address0 = 'bx;
        end
    end else begin
        glPLSlice2_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlice2_V_3_ce0 = 1'b1;
    end else begin
        glPLSlice2_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlice2_V_3_ce1 = 1'b1;
    end else begin
        glPLSlice2_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_reg_1428 == 2'd3) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_7_reg_1386 == 1'd0) & (tmp_s_reg_1382 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_14_reg_1414 == 1'd1) & (tmp_9_reg_1390 == 1'd1))) begin
        glPLSlice2_V_3_we0 = 1'b1;
    end else begin
        glPLSlice2_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_3_fu_560_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_3_fu_560_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((eventSlice_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_3_reg_1394_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((eventSlice_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_3_reg_1394_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((eventSlice_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_3_reg_1394_pp0_iter2_reg == 1'd1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_3_reg_1394 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_3_reg_1394 == 1'd1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((data_empty_n == 1'b0) & (tmp_3_reg_1394 == 1'd1));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter3 = ((eventSlice_full_n == 1'b0) & (tmp_3_reg_1394_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_condition_392 = ((tmp_1_fu_508_p2 == 1'd0) & (tmp_fu_502_p2 == 1'd0) & (tmp_2_fu_514_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_398 = ((tmp_2_fu_514_p2 == 1'd0) & (tmp_1_fu_508_p2 == 1'd0) & (tmp_fu_502_p2 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign eventSlice_din = (tmp2_reg_1581 + tmp1_fu_1324_p2);

assign glPLSlice0_V_0_address1 = newIndex7_fu_1227_p1;

assign glPLSlice0_V_1_address1 = newIndex7_fu_1227_p1;

assign glPLSlice0_V_2_address1 = newIndex7_fu_1227_p1;

assign glPLSlice0_V_3_address1 = newIndex7_fu_1227_p1;

assign glPLSlice1_V_0_address1 = newIndex7_fu_1227_p1;

assign glPLSlice1_V_1_address1 = newIndex7_fu_1227_p1;

assign glPLSlice1_V_2_address1 = newIndex7_fu_1227_p1;

assign glPLSlice1_V_3_address1 = newIndex7_fu_1227_p1;

assign glPLSlice2_V_0_address1 = newIndex7_fu_1227_p1;

assign glPLSlice2_V_1_address1 = newIndex7_fu_1227_p1;

assign glPLSlice2_V_2_address1 = newIndex7_fu_1227_p1;

assign glPLSlice2_V_3_address1 = newIndex7_fu_1227_p1;

assign grp_fu_478_p4 = {{xNewIdx_V_fu_692_p2[9:2]}};

assign grp_fu_487_p2 = (tmp_12_reg_1447 | 9'd2);

assign grp_fu_492_p2 = (tmp_12_reg_1447 | 9'd3);

assign i_cast_fu_556_p1 = ap_phi_mux_p_019_rec_phi_fu_471_p4;

assign i_fu_565_p2 = (ap_phi_mux_p_019_rec_phi_fu_471_p4 + 31'd1);

assign i_op_assign_1_fu_1306_p3 = {{y_reg_1408_pp0_iter2_reg}, {8'd0}};

assign i_op_assign_7_pn_cas_fu_1320_p1 = i_op_assign_7_pn_fu_1313_p3;

assign i_op_assign_7_pn_fu_1313_p3 = ((tmp_26_reg_1403_pp0_iter2_reg[0:0] === 1'b1) ? tmp_40_cast_fu_1302_p1 : i_op_assign_1_fu_1306_p3);

assign index_assign_1_1_cas_fu_1097_p1 = $signed(grp_fu_487_p2);

assign index_assign_1_2_cas_fu_1109_p1 = $signed(grp_fu_492_p2);

assign index_assign_1_s_fu_1083_p2 = (tmp_18_cast_fu_1072_p1 | 32'd1);

assign index_assign_5_1_cas_fu_929_p1 = $signed(grp_fu_487_p2);

assign index_assign_5_2_cas_fu_941_p1 = $signed(grp_fu_492_p2);

assign index_assign_5_s_fu_915_p2 = (tmp_22_cast_fu_904_p1 | 32'd1);

assign index_assign_9_1_cas_fu_761_p1 = $signed(grp_fu_487_p2);

assign index_assign_9_2_cas_fu_773_p1 = $signed(grp_fu_492_p2);

assign index_assign_9_s_fu_747_p2 = (tmp_27_cast_fu_736_p1 | 32'd1);

assign localCnt_fu_1335_p2 = (16'd1 + i_op_assign_fu_152);

assign newIndex2_fu_715_p1 = grp_fu_478_p4;

assign newIndex4_fu_707_p1 = grp_fu_478_p4;

assign newIndex5_fu_699_p1 = grp_fu_478_p4;

assign newIndex7_fu_1227_p1 = newIndex6_reg_1442_pp0_iter1_reg;

assign p_0505_0_i_fu_686_p2 = ($signed(tmp_10_fu_665_p3) - $signed(tmp_14_cast_fu_682_p1));

assign p_Repl2_2_1_fu_1165_p1 = tmp_21_fu_1157_p3;

assign p_Repl2_2_2_fu_1187_p1 = tmp_23_fu_1179_p3;

assign p_Repl2_2_3_fu_1209_p1 = tmp_25_fu_1201_p3;

assign p_Repl2_2_fu_1143_p1 = tmp_19_fu_1139_p1;

assign p_Repl2_4_1_fu_997_p1 = tmp_39_fu_989_p3;

assign p_Repl2_4_2_fu_1019_p1 = tmp_41_fu_1011_p3;

assign p_Repl2_4_3_fu_1041_p1 = tmp_43_fu_1033_p3;

assign p_Repl2_4_fu_975_p1 = tmp_37_fu_971_p1;

assign p_Repl2_5_1_fu_829_p1 = tmp_51_fu_821_p3;

assign p_Repl2_5_2_fu_851_p1 = tmp_53_fu_843_p3;

assign p_Repl2_5_3_fu_873_p1 = tmp_55_fu_865_p3;

assign p_Repl2_5_fu_807_p1 = tmp_49_fu_803_p1;

assign p_Result_12_3_fu_1121_p5 = {{{{tmp_18_fu_1113_p3}, {tmp_17_fu_1101_p3}}, {tmp_16_fu_1089_p3}}, {tmp_15_fu_1075_p3}};

assign p_Result_14_3_fu_953_p5 = {{{{tmp_36_fu_945_p3}, {tmp_34_fu_933_p3}}, {tmp_33_fu_921_p3}}, {tmp_31_fu_907_p3}};

assign p_Result_16_3_fu_785_p5 = {{{{tmp_48_fu_777_p3}, {tmp_47_fu_765_p3}}, {tmp_46_fu_753_p3}}, {tmp_45_fu_739_p3}};

assign tmp1_fu_1324_p2 = (tmp_57_reg_1576 + i_op_assign_7_pn_cas_fu_1320_p1);

assign tmp2_fu_1293_p2 = (tmp_58_fu_1272_p1 + tmp_59_fu_1289_p1);

assign tmpTmpData_V_1_fu_965_p2 = (4'd1 + p_Result_14_3_fu_953_p5);

assign tmpTmpData_V_2_fu_797_p2 = (4'd1 + p_Result_16_3_fu_785_p5);

assign tmpTmpData_V_fu_1133_p2 = (4'd1 + p_Result_12_3_fu_1121_p5);

assign tmp_10_fu_665_p3 = {{tmp_8_reg_1418}, {2'd0}};

assign tmp_12_cast_fu_672_p1 = y_reg_1408;

assign tmp_12_fu_675_p3 = {{tmp_11_reg_1423}, {2'd0}};

assign tmp_14_cast_fu_682_p1 = tmp_12_fu_675_p3;

assign tmp_15_fu_1075_p3 = tmpData_V_fu_1059_p6[tmp_18_cast_fu_1072_p1];

assign tmp_16_fu_1089_p3 = tmpData_V_fu_1059_p6[index_assign_1_s_fu_1083_p2];

assign tmp_17_fu_1101_p3 = tmpData_V_fu_1059_p6[index_assign_1_1_cas_fu_1097_p1];

assign tmp_18_cast_fu_1072_p1 = tmp_12_reg_1447;

assign tmp_18_fu_1113_p3 = tmpData_V_fu_1059_p6[index_assign_1_2_cas_fu_1109_p1];

assign tmp_19_fu_1139_p1 = tmpTmpData_V_fu_1133_p2[0:0];

assign tmp_1_fu_508_p2 = ((glPLActiveSliceIdx_V == 2'd1) ? 1'b1 : 1'b0);

always @ (*) begin
    tmp_20_fu_1147_p4 = tmpData_V_fu_1059_p6;
    tmp_20_fu_1147_p4[tmp_18_cast_fu_1072_p1] = |(p_Repl2_2_fu_1143_p1);
end

assign tmp_21_fu_1157_p3 = tmpTmpData_V_fu_1133_p2[32'd1];

assign tmp_22_cast_fu_904_p1 = tmp_12_reg_1447;

always @ (*) begin
    tmp_22_fu_1169_p4 = tmp_20_fu_1147_p4;
    tmp_22_fu_1169_p4[index_assign_1_s_fu_1083_p2] = |(p_Repl2_2_1_fu_1165_p1);
end

assign tmp_23_fu_1179_p3 = tmpTmpData_V_fu_1133_p2[32'd2];

always @ (*) begin
    tmp_24_fu_1191_p4 = tmp_22_fu_1169_p4;
    tmp_24_fu_1191_p4[index_assign_1_1_cas_fu_1097_p1] = |(p_Repl2_2_2_fu_1187_p1);
end

assign tmp_25_fu_1201_p3 = tmpTmpData_V_fu_1133_p2[32'd3];

assign tmp_26_fu_571_p2 = ((ap_phi_mux_p_019_rec_phi_fu_471_p4 == 31'd0) ? 1'b1 : 1'b0);

assign tmp_27_cast_fu_736_p1 = tmp_12_reg_1447;

assign tmp_27_fu_639_p2 = (10'd1 + tmp_34_cast_fu_635_p1);

always @ (*) begin
    tmp_29_fu_1213_p4 = tmp_24_fu_1191_p4;
    tmp_29_fu_1213_p4[index_assign_1_2_cas_fu_1109_p1] = |(p_Repl2_2_3_fu_1209_p1);
end

assign tmp_2_fu_514_p2 = ((glPLActiveSliceIdx_V == 2'd2) ? 1'b1 : 1'b0);

assign tmp_31_fu_907_p3 = tmpData_V_1_fu_891_p6[tmp_22_cast_fu_904_p1];

assign tmp_33_fu_921_p3 = tmpData_V_1_fu_891_p6[index_assign_5_s_fu_915_p2];

assign tmp_34_cast_fu_635_p1 = x_fu_577_p4;

assign tmp_34_fu_933_p3 = tmpData_V_1_fu_891_p6[index_assign_5_1_cas_fu_929_p1];

assign tmp_35_fu_1345_p2 = (16'd1 + glCnt);

assign tmp_36_fu_945_p3 = tmpData_V_1_fu_891_p6[index_assign_5_2_cas_fu_941_p1];

assign tmp_37_fu_971_p1 = tmpTmpData_V_1_fu_965_p2[0:0];

always @ (*) begin
    tmp_38_fu_979_p4 = tmpData_V_1_fu_891_p6;
    tmp_38_fu_979_p4[tmp_22_cast_fu_904_p1] = |(p_Repl2_4_fu_975_p1);
end

assign tmp_39_fu_989_p3 = tmpTmpData_V_1_fu_965_p2[32'd1];

assign tmp_3_fu_560_p2 = (($signed(i_cast_fu_556_p1) < $signed(eventsArraySize)) ? 1'b1 : 1'b0);

assign tmp_40_cast_fu_1302_p1 = i_op_assign_fu_152;

always @ (*) begin
    tmp_40_fu_1001_p4 = tmp_38_fu_979_p4;
    tmp_40_fu_1001_p4[index_assign_5_s_fu_915_p2] = |(p_Repl2_4_1_fu_997_p1);
end

assign tmp_41_fu_1011_p3 = tmpTmpData_V_1_fu_965_p2[32'd2];

always @ (*) begin
    tmp_42_fu_1023_p4 = tmp_40_fu_1001_p4;
    tmp_42_fu_1023_p4[index_assign_5_1_cas_fu_929_p1] = |(p_Repl2_4_2_fu_1019_p1);
end

assign tmp_43_fu_1033_p3 = tmpTmpData_V_1_fu_965_p2[32'd3];

always @ (*) begin
    tmp_44_fu_1045_p4 = tmp_42_fu_1023_p4;
    tmp_44_fu_1045_p4[index_assign_5_2_cas_fu_941_p1] = |(p_Repl2_4_3_fu_1041_p1);
end

assign tmp_45_fu_739_p3 = tmpData_V_2_fu_723_p6[tmp_27_cast_fu_736_p1];

assign tmp_46_fu_753_p3 = tmpData_V_2_fu_723_p6[index_assign_9_s_fu_747_p2];

assign tmp_47_fu_765_p3 = tmpData_V_2_fu_723_p6[index_assign_9_1_cas_fu_761_p1];

assign tmp_48_fu_777_p3 = tmpData_V_2_fu_723_p6[index_assign_9_2_cas_fu_773_p1];

assign tmp_49_fu_803_p1 = tmpTmpData_V_2_fu_797_p2[0:0];

always @ (*) begin
    tmp_50_fu_811_p4 = tmpData_V_2_fu_723_p6;
    tmp_50_fu_811_p4[tmp_27_cast_fu_736_p1] = |(p_Repl2_5_fu_807_p1);
end

assign tmp_51_fu_821_p3 = tmpTmpData_V_2_fu_797_p2[32'd1];

always @ (*) begin
    tmp_52_fu_833_p4 = tmp_50_fu_811_p4;
    tmp_52_fu_833_p4[index_assign_9_s_fu_747_p2] = |(p_Repl2_5_1_fu_829_p1);
end

assign tmp_53_fu_843_p3 = tmpTmpData_V_2_fu_797_p2[32'd2];

always @ (*) begin
    tmp_54_fu_855_p4 = tmp_52_fu_833_p4;
    tmp_54_fu_855_p4[index_assign_9_1_cas_fu_761_p1] = |(p_Repl2_5_2_fu_851_p1);
end

assign tmp_55_fu_865_p3 = tmpTmpData_V_2_fu_797_p2[32'd3];

always @ (*) begin
    tmp_56_fu_877_p4 = tmp_54_fu_855_p4;
    tmp_56_fu_877_p4[index_assign_9_2_cas_fu_773_p1] = |(p_Repl2_5_3_fu_873_p1);
end

assign tmp_57_fu_1255_p1 = tmp_28_fu_1242_p6[31:0];

assign tmp_58_fu_1272_p1 = tmp_30_fu_1259_p6[31:0];

assign tmp_59_fu_1289_p1 = tmp_32_fu_1276_p6[31:0];

assign tmp_7_fu_544_p2 = ((ap_phi_mux_glPLActiveSliceIdx_V_2_phi_fu_454_p8 == 2'd1) ? 1'b1 : 1'b0);

assign tmp_9_fu_550_p2 = ((ap_phi_mux_glPLActiveSliceIdx_V_2_phi_fu_454_p8 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_fu_502_p2 = ((glPLActiveSliceIdx_V == 2'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_538_p2 = ((ap_phi_mux_glPLActiveSliceIdx_V_2_phi_fu_454_p8 == 2'd0) ? 1'b1 : 1'b0);

assign xNewIdx_V_fu_692_p2 = (tmp_12_cast_fu_672_p1 + p_0505_0_i_fu_686_p2);

assign x_fu_577_p4 = {{data_dout[25:17]}};

always @ (posedge ap_clk) begin
    tmp_12_reg_1447[1:0] <= 2'b00;
end

endmodule //parseEvents
