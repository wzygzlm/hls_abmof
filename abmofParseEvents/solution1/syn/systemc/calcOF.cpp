// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "calcOF.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic calcOF::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic calcOF::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> calcOF::ap_ST_fsm_state1 = "1";
const sc_lv<5> calcOF::ap_ST_fsm_state2 = "10";
const sc_lv<5> calcOF::ap_ST_fsm_state3 = "100";
const sc_lv<5> calcOF::ap_ST_fsm_state4 = "1000";
const sc_lv<5> calcOF::ap_ST_fsm_state5 = "10000";
const sc_lv<32> calcOF::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> calcOF::ap_const_lv32_1 = "1";
const sc_lv<1> calcOF::ap_const_lv1_0 = "0";
const sc_lv<32> calcOF::ap_const_lv32_2 = "10";
const sc_lv<32> calcOF::ap_const_lv32_3 = "11";
const sc_lv<32> calcOF::ap_const_lv32_4 = "100";
const sc_lv<5> calcOF::ap_const_lv5_0 = "00000";
const sc_lv<1> calcOF::ap_const_lv1_1 = "1";
const sc_lv<10> calcOF::ap_const_lv10_0 = "0000000000";
const sc_lv<3> calcOF::ap_const_lv3_0 = "000";
const sc_lv<2> calcOF::ap_const_lv2_0 = "00";
const sc_lv<8> calcOF::ap_const_lv8_0 = "00000000";
const sc_lv<4> calcOF::ap_const_lv4_0 = "0000";
const sc_lv<10> calcOF::ap_const_lv10_17 = "10111";
const sc_lv<5> calcOF::ap_const_lv5_17 = "10111";
const sc_lv<5> calcOF::ap_const_lv5_1 = "1";
const sc_lv<3> calcOF::ap_const_lv3_4 = "100";
const sc_lv<3> calcOF::ap_const_lv3_1 = "1";
const bool calcOF::ap_const_boolean_1 = true;

calcOF::calcOF(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_277_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_277_p2 );

    SC_METHOD(thread_bvh_d_index_1_fu_354_p2);
    sensitive << ( tmp_s_reg_448 );
    sensitive << ( index_assign_cast_fu_350_p1 );

    SC_METHOD(thread_bvh_d_index_fu_346_p1);
    sensitive << ( yIndex_reg_172 );

    SC_METHOD(thread_exitcond1_fu_277_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( k_reg_137 );

    SC_METHOD(thread_exitcond2_fu_322_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( l_reg_160 );

    SC_METHOD(thread_exitcond_fu_334_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( yIndex_reg_172 );

    SC_METHOD(thread_glPLSlices_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_34_cast_fu_307_p1 );

    SC_METHOD(thread_glPLSlices_V_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_35_cast_fu_317_p1 );

    SC_METHOD(thread_glPLSlices_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_glPLSlices_V_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_index_assign_1_cast_fu_359_p1);
    sensitive << ( bvh_d_index_1_fu_354_p2 );

    SC_METHOD(thread_index_assign_cast_fu_350_p1);
    sensitive << ( yIndex_reg_172 );

    SC_METHOD(thread_k_1_fu_283_p2);
    sensitive << ( k_reg_137 );

    SC_METHOD(thread_l_1_fu_328_p2);
    sensitive << ( l_reg_160 );

    SC_METHOD(thread_next_mul_fu_271_p2);
    sensitive << ( phi_mul_reg_148 );

    SC_METHOD(thread_p_Repl2_1_fu_384_p3);
    sensitive << ( tmp2_V_reg_491 );
    sensitive << ( index_assign_1_cast_fu_359_p1 );

    SC_METHOD(thread_p_Repl2_s_fu_363_p3);
    sensitive << ( tmp1_V_reg_486 );
    sensitive << ( index_assign_1_cast_fu_359_p1 );

    SC_METHOD(thread_p_Result_1_fu_395_p4);
    sensitive << ( p_Val2_s_fu_70 );
    sensitive << ( bvh_d_index_fu_346_p1 );
    sensitive << ( val_assign_1_cast_fu_391_p1 );

    SC_METHOD(thread_p_Result_s_fu_374_p4);
    sensitive << ( p_Val2_1_fu_74 );
    sensitive << ( bvh_d_index_fu_346_p1 );
    sensitive << ( val_assign_cast_fu_370_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_261_p1);
    sensitive << ( tmp_24_fu_253_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_215_p1);
    sensitive << ( tmp_19_fu_207_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_227_p1);
    sensitive << ( tmp_20_fu_219_p3 );

    SC_METHOD(thread_p_shl_cast_fu_249_p1);
    sensitive << ( tmp_23_fu_241_p3 );

    SC_METHOD(thread_refBlock_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_37_cast_fu_425_p1 );

    SC_METHOD(thread_refBlock_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_refBlock_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Val2_1_fu_74 );

    SC_METHOD(thread_refBlock_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_334_p2 );

    SC_METHOD(thread_targetBlocks_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_37_cast_fu_425_p1 );

    SC_METHOD(thread_targetBlocks_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_targetBlocks_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Val2_s_fu_70 );

    SC_METHOD(thread_targetBlocks_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_334_p2 );

    SC_METHOD(thread_tmp_19_fu_207_p3);
    sensitive << ( glPLTminus1SliceIdx_s );

    SC_METHOD(thread_tmp_20_fu_219_p3);
    sensitive << ( glPLTminus1SliceIdx_s );

    SC_METHOD(thread_tmp_21_fu_231_p2);
    sensitive << ( p_shl2_cast_fu_215_p1 );
    sensitive << ( p_shl3_cast_fu_227_p1 );

    SC_METHOD(thread_tmp_23_cast_fu_415_p1);
    sensitive << ( l_reg_160 );

    SC_METHOD(thread_tmp_23_fu_241_p3);
    sensitive << ( glPLTminus2SliceIdx_s );

    SC_METHOD(thread_tmp_24_fu_253_p3);
    sensitive << ( glPLTminus2SliceIdx_s );

    SC_METHOD(thread_tmp_25_fu_265_p2);
    sensitive << ( p_shl_cast_fu_249_p1 );
    sensitive << ( p_shl1_cast_fu_261_p1 );

    SC_METHOD(thread_tmp_26_fu_289_p1);
    sensitive << ( k_reg_137 );

    SC_METHOD(thread_tmp_27_fu_293_p1);
    sensitive << ( x );

    SC_METHOD(thread_tmp_28_fu_296_p2);
    sensitive << ( tmp_27_fu_293_p1 );
    sensitive << ( tmp_26_fu_289_p1 );

    SC_METHOD(thread_tmp_29_fu_302_p2);
    sensitive << ( tmp_21_reg_453 );
    sensitive << ( tmp_28_fu_296_p2 );

    SC_METHOD(thread_tmp_30_fu_312_p2);
    sensitive << ( tmp_25_reg_458 );
    sensitive << ( tmp_28_fu_296_p2 );

    SC_METHOD(thread_tmp_31_fu_419_p2);
    sensitive << ( phi_mul_reg_148 );
    sensitive << ( tmp_23_cast_fu_415_p1 );

    SC_METHOD(thread_tmp_34_cast_fu_307_p1);
    sensitive << ( tmp_29_fu_302_p2 );

    SC_METHOD(thread_tmp_35_cast_fu_317_p1);
    sensitive << ( tmp_30_fu_312_p2 );

    SC_METHOD(thread_tmp_37_cast_fu_425_p1);
    sensitive << ( tmp_31_fu_419_p2 );

    SC_METHOD(thread_tmp_fu_191_p1);
    sensitive << ( y );

    SC_METHOD(thread_tmp_s_fu_195_p3);
    sensitive << ( tmp_fu_191_p1 );

    SC_METHOD(thread_val_assign_1_cast_fu_391_p1);
    sensitive << ( p_Repl2_1_fu_384_p3 );

    SC_METHOD(thread_val_assign_cast_fu_370_p1);
    sensitive << ( p_Repl2_s_fu_363_p3 );

    SC_METHOD(thread_yIndex_1_fu_340_p2);
    sensitive << ( yIndex_reg_172 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_277_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_322_p2 );
    sensitive << ( exitcond_fu_334_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "calcOF_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, glPLTminus1SliceIdx_s, "(port)glPLTminus1SliceIdx_s");
    sc_trace(mVcdFile, glPLTminus2SliceIdx_s, "(port)glPLTminus2SliceIdx_s");
    sc_trace(mVcdFile, glPLSlices_V_address0, "(port)glPLSlices_V_address0");
    sc_trace(mVcdFile, glPLSlices_V_ce0, "(port)glPLSlices_V_ce0");
    sc_trace(mVcdFile, glPLSlices_V_q0, "(port)glPLSlices_V_q0");
    sc_trace(mVcdFile, glPLSlices_V_address1, "(port)glPLSlices_V_address1");
    sc_trace(mVcdFile, glPLSlices_V_ce1, "(port)glPLSlices_V_ce1");
    sc_trace(mVcdFile, glPLSlices_V_q1, "(port)glPLSlices_V_q1");
    sc_trace(mVcdFile, refBlock_V_address0, "(port)refBlock_V_address0");
    sc_trace(mVcdFile, refBlock_V_ce0, "(port)refBlock_V_ce0");
    sc_trace(mVcdFile, refBlock_V_we0, "(port)refBlock_V_we0");
    sc_trace(mVcdFile, refBlock_V_d0, "(port)refBlock_V_d0");
    sc_trace(mVcdFile, targetBlocks_V_address0, "(port)targetBlocks_V_address0");
    sc_trace(mVcdFile, targetBlocks_V_ce0, "(port)targetBlocks_V_ce0");
    sc_trace(mVcdFile, targetBlocks_V_we0, "(port)targetBlocks_V_we0");
    sc_trace(mVcdFile, targetBlocks_V_d0, "(port)targetBlocks_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_s_fu_195_p3, "tmp_s_fu_195_p3");
    sc_trace(mVcdFile, tmp_s_reg_448, "tmp_s_reg_448");
    sc_trace(mVcdFile, tmp_21_fu_231_p2, "tmp_21_fu_231_p2");
    sc_trace(mVcdFile, tmp_21_reg_453, "tmp_21_reg_453");
    sc_trace(mVcdFile, tmp_25_fu_265_p2, "tmp_25_fu_265_p2");
    sc_trace(mVcdFile, tmp_25_reg_458, "tmp_25_reg_458");
    sc_trace(mVcdFile, next_mul_fu_271_p2, "next_mul_fu_271_p2");
    sc_trace(mVcdFile, next_mul_reg_463, "next_mul_reg_463");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, k_1_fu_283_p2, "k_1_fu_283_p2");
    sc_trace(mVcdFile, k_1_reg_471, "k_1_reg_471");
    sc_trace(mVcdFile, exitcond1_fu_277_p2, "exitcond1_fu_277_p2");
    sc_trace(mVcdFile, tmp1_V_reg_486, "tmp1_V_reg_486");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp2_V_reg_491, "tmp2_V_reg_491");
    sc_trace(mVcdFile, l_1_fu_328_p2, "l_1_fu_328_p2");
    sc_trace(mVcdFile, l_1_reg_499, "l_1_reg_499");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, yIndex_1_fu_340_p2, "yIndex_1_fu_340_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, k_reg_137, "k_reg_137");
    sc_trace(mVcdFile, exitcond2_fu_322_p2, "exitcond2_fu_322_p2");
    sc_trace(mVcdFile, phi_mul_reg_148, "phi_mul_reg_148");
    sc_trace(mVcdFile, l_reg_160, "l_reg_160");
    sc_trace(mVcdFile, exitcond_fu_334_p2, "exitcond_fu_334_p2");
    sc_trace(mVcdFile, yIndex_reg_172, "yIndex_reg_172");
    sc_trace(mVcdFile, tmp_34_cast_fu_307_p1, "tmp_34_cast_fu_307_p1");
    sc_trace(mVcdFile, tmp_35_cast_fu_317_p1, "tmp_35_cast_fu_317_p1");
    sc_trace(mVcdFile, tmp_37_cast_fu_425_p1, "tmp_37_cast_fu_425_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_70, "p_Val2_s_fu_70");
    sc_trace(mVcdFile, p_Result_1_fu_395_p4, "p_Result_1_fu_395_p4");
    sc_trace(mVcdFile, p_Val2_1_fu_74, "p_Val2_1_fu_74");
    sc_trace(mVcdFile, p_Result_s_fu_374_p4, "p_Result_s_fu_374_p4");
    sc_trace(mVcdFile, tmp_fu_191_p1, "tmp_fu_191_p1");
    sc_trace(mVcdFile, tmp_19_fu_207_p3, "tmp_19_fu_207_p3");
    sc_trace(mVcdFile, tmp_20_fu_219_p3, "tmp_20_fu_219_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_215_p1, "p_shl2_cast_fu_215_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_227_p1, "p_shl3_cast_fu_227_p1");
    sc_trace(mVcdFile, tmp_23_fu_241_p3, "tmp_23_fu_241_p3");
    sc_trace(mVcdFile, tmp_24_fu_253_p3, "tmp_24_fu_253_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_249_p1, "p_shl_cast_fu_249_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_261_p1, "p_shl1_cast_fu_261_p1");
    sc_trace(mVcdFile, tmp_27_fu_293_p1, "tmp_27_fu_293_p1");
    sc_trace(mVcdFile, tmp_26_fu_289_p1, "tmp_26_fu_289_p1");
    sc_trace(mVcdFile, tmp_28_fu_296_p2, "tmp_28_fu_296_p2");
    sc_trace(mVcdFile, tmp_29_fu_302_p2, "tmp_29_fu_302_p2");
    sc_trace(mVcdFile, tmp_30_fu_312_p2, "tmp_30_fu_312_p2");
    sc_trace(mVcdFile, index_assign_cast_fu_350_p1, "index_assign_cast_fu_350_p1");
    sc_trace(mVcdFile, bvh_d_index_1_fu_354_p2, "bvh_d_index_1_fu_354_p2");
    sc_trace(mVcdFile, index_assign_1_cast_fu_359_p1, "index_assign_1_cast_fu_359_p1");
    sc_trace(mVcdFile, p_Repl2_s_fu_363_p3, "p_Repl2_s_fu_363_p3");
    sc_trace(mVcdFile, bvh_d_index_fu_346_p1, "bvh_d_index_fu_346_p1");
    sc_trace(mVcdFile, val_assign_cast_fu_370_p1, "val_assign_cast_fu_370_p1");
    sc_trace(mVcdFile, p_Repl2_1_fu_384_p3, "p_Repl2_1_fu_384_p3");
    sc_trace(mVcdFile, val_assign_1_cast_fu_391_p1, "val_assign_1_cast_fu_391_p1");
    sc_trace(mVcdFile, tmp_23_cast_fu_415_p1, "tmp_23_cast_fu_415_p1");
    sc_trace(mVcdFile, tmp_31_fu_419_p2, "tmp_31_fu_419_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

calcOF::~calcOF() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void calcOF::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_322_p2.read(), ap_const_lv1_1))) {
        k_reg_137 = k_1_reg_471.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_reg_137 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_334_p2.read(), ap_const_lv1_1))) {
        l_reg_160 = l_1_reg_499.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        l_reg_160 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_322_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_148 = next_mul_reg_463.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_148 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_334_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        yIndex_reg_172 = yIndex_1_fu_340_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond2_fu_322_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        yIndex_reg_172 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        k_1_reg_471 = k_1_fu_283_p2.read();
        next_mul_reg_463 = next_mul_fu_271_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        l_1_reg_499 = l_1_fu_328_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_334_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        p_Val2_1_fu_74 = p_Result_s_fu_374_p4.read();
        p_Val2_s_fu_70 = p_Result_1_fu_395_p4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp1_V_reg_486 = glPLSlices_V_q0.read();
        tmp2_V_reg_491 = glPLSlices_V_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_21_reg_453 = tmp_21_fu_231_p2.read();
        tmp_25_reg_458 = tmp_25_fu_265_p2.read();
        tmp_s_reg_448 = tmp_s_fu_195_p3.read();
    }
}

void calcOF::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void calcOF::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void calcOF::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void calcOF::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void calcOF::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void calcOF::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond1_fu_277_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void calcOF::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void calcOF::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_277_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void calcOF::thread_bvh_d_index_1_fu_354_p2() {
    bvh_d_index_1_fu_354_p2 = (!index_assign_cast_fu_350_p1.read().is_01() || !tmp_s_reg_448.read().is_01())? sc_lv<17>(): (sc_biguint<17>(index_assign_cast_fu_350_p1.read()) + sc_biguint<17>(tmp_s_reg_448.read()));
}

void calcOF::thread_bvh_d_index_fu_346_p1() {
    bvh_d_index_fu_346_p1 = esl_zext<32,3>(yIndex_reg_172.read());
}

void calcOF::thread_exitcond1_fu_277_p2() {
    exitcond1_fu_277_p2 = (!k_reg_137.read().is_01() || !ap_const_lv5_17.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_137.read() == ap_const_lv5_17);
}

void calcOF::thread_exitcond2_fu_322_p2() {
    exitcond2_fu_322_p2 = (!l_reg_160.read().is_01() || !ap_const_lv5_17.is_01())? sc_lv<1>(): sc_lv<1>(l_reg_160.read() == ap_const_lv5_17);
}

void calcOF::thread_exitcond_fu_334_p2() {
    exitcond_fu_334_p2 = (!yIndex_reg_172.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(yIndex_reg_172.read() == ap_const_lv3_4);
}

void calcOF::thread_glPLSlices_V_address0() {
    glPLSlices_V_address0 =  (sc_lv<10>) (tmp_34_cast_fu_307_p1.read());
}

void calcOF::thread_glPLSlices_V_address1() {
    glPLSlices_V_address1 =  (sc_lv<10>) (tmp_35_cast_fu_317_p1.read());
}

void calcOF::thread_glPLSlices_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_V_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_V_ce0 = ap_const_logic_0;
    }
}

void calcOF::thread_glPLSlices_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_V_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_V_ce1 = ap_const_logic_0;
    }
}

void calcOF::thread_index_assign_1_cast_fu_359_p1() {
    index_assign_1_cast_fu_359_p1 = esl_zext<32,17>(bvh_d_index_1_fu_354_p2.read());
}

void calcOF::thread_index_assign_cast_fu_350_p1() {
    index_assign_cast_fu_350_p1 = esl_zext<17,3>(yIndex_reg_172.read());
}

void calcOF::thread_k_1_fu_283_p2() {
    k_1_fu_283_p2 = (!k_reg_137.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(k_reg_137.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void calcOF::thread_l_1_fu_328_p2() {
    l_1_fu_328_p2 = (!l_reg_160.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(l_reg_160.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void calcOF::thread_next_mul_fu_271_p2() {
    next_mul_fu_271_p2 = (!phi_mul_reg_148.read().is_01() || !ap_const_lv10_17.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul_reg_148.read()) + sc_biguint<10>(ap_const_lv10_17));
}

void calcOF::thread_p_Repl2_1_fu_384_p3() {
    p_Repl2_1_fu_384_p3 = (!index_assign_1_cast_fu_359_p1.read().is_01() || sc_biguint<32>(index_assign_1_cast_fu_359_p1.read()).to_uint() >= 720)? sc_lv<1>(): tmp2_V_reg_491.read().range(sc_biguint<32>(index_assign_1_cast_fu_359_p1.read()).to_uint(), sc_biguint<32>(index_assign_1_cast_fu_359_p1.read()).to_uint());
}

void calcOF::thread_p_Repl2_s_fu_363_p3() {
    p_Repl2_s_fu_363_p3 = (!index_assign_1_cast_fu_359_p1.read().is_01() || sc_biguint<32>(index_assign_1_cast_fu_359_p1.read()).to_uint() >= 720)? sc_lv<1>(): tmp1_V_reg_486.read().range(sc_biguint<32>(index_assign_1_cast_fu_359_p1.read()).to_uint(), sc_biguint<32>(index_assign_1_cast_fu_359_p1.read()).to_uint());
}

void calcOF::thread_p_Result_1_fu_395_p4() {
    p_Result_1_fu_395_p4 = esl_bitset<4,4,32,64>(p_Val2_s_fu_70.read(), bvh_d_index_fu_346_p1.read(), val_assign_1_cast_fu_391_p1.read());
}

void calcOF::thread_p_Result_s_fu_374_p4() {
    p_Result_s_fu_374_p4 = esl_bitset<4,4,32,64>(p_Val2_1_fu_74.read(), bvh_d_index_fu_346_p1.read(), val_assign_cast_fu_370_p1.read());
}

void calcOF::thread_p_shl1_cast_fu_261_p1() {
    p_shl1_cast_fu_261_p1 = esl_zext<11,6>(tmp_24_fu_253_p3.read());
}

void calcOF::thread_p_shl2_cast_fu_215_p1() {
    p_shl2_cast_fu_215_p1 = esl_zext<11,10>(tmp_19_fu_207_p3.read());
}

void calcOF::thread_p_shl3_cast_fu_227_p1() {
    p_shl3_cast_fu_227_p1 = esl_zext<11,6>(tmp_20_fu_219_p3.read());
}

void calcOF::thread_p_shl_cast_fu_249_p1() {
    p_shl_cast_fu_249_p1 = esl_zext<11,10>(tmp_23_fu_241_p3.read());
}

void calcOF::thread_refBlock_V_address0() {
    refBlock_V_address0 =  (sc_lv<10>) (tmp_37_cast_fu_425_p1.read());
}

void calcOF::thread_refBlock_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        refBlock_V_ce0 = ap_const_logic_1;
    } else {
        refBlock_V_ce0 = ap_const_logic_0;
    }
}

void calcOF::thread_refBlock_V_d0() {
    refBlock_V_d0 = p_Val2_1_fu_74.read();
}

void calcOF::thread_refBlock_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_334_p2.read(), ap_const_lv1_1))) {
        refBlock_V_we0 = ap_const_logic_1;
    } else {
        refBlock_V_we0 = ap_const_logic_0;
    }
}

void calcOF::thread_targetBlocks_V_address0() {
    targetBlocks_V_address0 =  (sc_lv<10>) (tmp_37_cast_fu_425_p1.read());
}

void calcOF::thread_targetBlocks_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        targetBlocks_V_ce0 = ap_const_logic_1;
    } else {
        targetBlocks_V_ce0 = ap_const_logic_0;
    }
}

void calcOF::thread_targetBlocks_V_d0() {
    targetBlocks_V_d0 = p_Val2_s_fu_70.read();
}

void calcOF::thread_targetBlocks_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_334_p2.read(), ap_const_lv1_1))) {
        targetBlocks_V_we0 = ap_const_logic_1;
    } else {
        targetBlocks_V_we0 = ap_const_logic_0;
    }
}

void calcOF::thread_tmp_19_fu_207_p3() {
    tmp_19_fu_207_p3 = esl_concat<2,8>(glPLTminus1SliceIdx_s.read(), ap_const_lv8_0);
}

void calcOF::thread_tmp_20_fu_219_p3() {
    tmp_20_fu_219_p3 = esl_concat<2,4>(glPLTminus1SliceIdx_s.read(), ap_const_lv4_0);
}

void calcOF::thread_tmp_21_fu_231_p2() {
    tmp_21_fu_231_p2 = (!p_shl2_cast_fu_215_p1.read().is_01() || !p_shl3_cast_fu_227_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl2_cast_fu_215_p1.read()) - sc_biguint<11>(p_shl3_cast_fu_227_p1.read()));
}

void calcOF::thread_tmp_23_cast_fu_415_p1() {
    tmp_23_cast_fu_415_p1 = esl_zext<10,5>(l_reg_160.read());
}

void calcOF::thread_tmp_23_fu_241_p3() {
    tmp_23_fu_241_p3 = esl_concat<2,8>(glPLTminus2SliceIdx_s.read(), ap_const_lv8_0);
}

void calcOF::thread_tmp_24_fu_253_p3() {
    tmp_24_fu_253_p3 = esl_concat<2,4>(glPLTminus2SliceIdx_s.read(), ap_const_lv4_0);
}

void calcOF::thread_tmp_25_fu_265_p2() {
    tmp_25_fu_265_p2 = (!p_shl_cast_fu_249_p1.read().is_01() || !p_shl1_cast_fu_261_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl_cast_fu_249_p1.read()) - sc_biguint<11>(p_shl1_cast_fu_261_p1.read()));
}

void calcOF::thread_tmp_26_fu_289_p1() {
    tmp_26_fu_289_p1 = esl_zext<11,5>(k_reg_137.read());
}

void calcOF::thread_tmp_27_fu_293_p1() {
    tmp_27_fu_293_p1 = x.read().range(11-1, 0);
}

void calcOF::thread_tmp_28_fu_296_p2() {
    tmp_28_fu_296_p2 = (!tmp_27_fu_293_p1.read().is_01() || !tmp_26_fu_289_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_27_fu_293_p1.read()) + sc_biguint<11>(tmp_26_fu_289_p1.read()));
}

void calcOF::thread_tmp_29_fu_302_p2() {
    tmp_29_fu_302_p2 = (!tmp_21_reg_453.read().is_01() || !tmp_28_fu_296_p2.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_21_reg_453.read()) + sc_biguint<11>(tmp_28_fu_296_p2.read()));
}

void calcOF::thread_tmp_30_fu_312_p2() {
    tmp_30_fu_312_p2 = (!tmp_25_reg_458.read().is_01() || !tmp_28_fu_296_p2.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_25_reg_458.read()) + sc_biguint<11>(tmp_28_fu_296_p2.read()));
}

void calcOF::thread_tmp_31_fu_419_p2() {
    tmp_31_fu_419_p2 = (!phi_mul_reg_148.read().is_01() || !tmp_23_cast_fu_415_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul_reg_148.read()) + sc_biguint<10>(tmp_23_cast_fu_415_p1.read()));
}

void calcOF::thread_tmp_34_cast_fu_307_p1() {
    tmp_34_cast_fu_307_p1 = esl_sext<64,11>(tmp_29_fu_302_p2.read());
}

void calcOF::thread_tmp_35_cast_fu_317_p1() {
    tmp_35_cast_fu_317_p1 = esl_sext<64,11>(tmp_30_fu_312_p2.read());
}

void calcOF::thread_tmp_37_cast_fu_425_p1() {
    tmp_37_cast_fu_425_p1 = esl_zext<64,10>(tmp_31_fu_419_p2.read());
}

void calcOF::thread_tmp_fu_191_p1() {
    tmp_fu_191_p1 = y.read().range(15-1, 0);
}

void calcOF::thread_tmp_s_fu_195_p3() {
    tmp_s_fu_195_p3 = esl_concat<15,2>(tmp_fu_191_p1.read(), ap_const_lv2_0);
}

void calcOF::thread_val_assign_1_cast_fu_391_p1() {
    val_assign_1_cast_fu_391_p1 = esl_zext<64,1>(p_Repl2_1_fu_384_p3.read());
}

void calcOF::thread_val_assign_cast_fu_370_p1() {
    val_assign_cast_fu_370_p1 = esl_zext<64,1>(p_Repl2_s_fu_363_p3.read());
}

void calcOF::thread_yIndex_1_fu_340_p2() {
    yIndex_1_fu_340_p2 = (!yIndex_reg_172.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(yIndex_reg_172.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void calcOF::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_277_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_322_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_334_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

