// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _calcOF_HH_
#define _calcOF_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct calcOF : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > x;
    sc_in< sc_lv<16> > y;
    sc_in< sc_lv<2> > glPLTminus1SliceIdx_s;
    sc_in< sc_lv<2> > glPLTminus2SliceIdx_s;
    sc_out< sc_lv<10> > glPLSlices_V_address0;
    sc_out< sc_logic > glPLSlices_V_ce0;
    sc_in< sc_lv<720> > glPLSlices_V_q0;
    sc_out< sc_lv<10> > glPLSlices_V_address1;
    sc_out< sc_logic > glPLSlices_V_ce1;
    sc_in< sc_lv<720> > glPLSlices_V_q1;
    sc_out< sc_lv<10> > refBlock_V_address0;
    sc_out< sc_logic > refBlock_V_ce0;
    sc_out< sc_logic > refBlock_V_we0;
    sc_out< sc_lv<4> > refBlock_V_d0;
    sc_out< sc_lv<10> > targetBlocks_V_address0;
    sc_out< sc_logic > targetBlocks_V_ce0;
    sc_out< sc_logic > targetBlocks_V_we0;
    sc_out< sc_lv<4> > targetBlocks_V_d0;


    // Module declarations
    calcOF(sc_module_name name);
    SC_HAS_PROCESS(calcOF);

    ~calcOF();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<17> > tmp_s_fu_195_p3;
    sc_signal< sc_lv<17> > tmp_s_reg_448;
    sc_signal< sc_lv<11> > tmp_21_fu_231_p2;
    sc_signal< sc_lv<11> > tmp_21_reg_453;
    sc_signal< sc_lv<11> > tmp_25_fu_265_p2;
    sc_signal< sc_lv<11> > tmp_25_reg_458;
    sc_signal< sc_lv<10> > next_mul_fu_271_p2;
    sc_signal< sc_lv<10> > next_mul_reg_463;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > k_1_fu_283_p2;
    sc_signal< sc_lv<5> > k_1_reg_471;
    sc_signal< sc_lv<1> > exitcond1_fu_277_p2;
    sc_signal< sc_lv<720> > tmp1_V_reg_486;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<720> > tmp2_V_reg_491;
    sc_signal< sc_lv<5> > l_1_fu_328_p2;
    sc_signal< sc_lv<5> > l_1_reg_499;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > yIndex_1_fu_340_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > k_reg_137;
    sc_signal< sc_lv<1> > exitcond2_fu_322_p2;
    sc_signal< sc_lv<10> > phi_mul_reg_148;
    sc_signal< sc_lv<5> > l_reg_160;
    sc_signal< sc_lv<1> > exitcond_fu_334_p2;
    sc_signal< sc_lv<3> > yIndex_reg_172;
    sc_signal< sc_lv<64> > tmp_34_cast_fu_307_p1;
    sc_signal< sc_lv<64> > tmp_35_cast_fu_317_p1;
    sc_signal< sc_lv<64> > tmp_37_cast_fu_425_p1;
    sc_signal< sc_lv<4> > p_Val2_s_fu_70;
    sc_signal< sc_lv<4> > p_Result_1_fu_395_p4;
    sc_signal< sc_lv<4> > p_Val2_1_fu_74;
    sc_signal< sc_lv<4> > p_Result_s_fu_374_p4;
    sc_signal< sc_lv<15> > tmp_fu_191_p1;
    sc_signal< sc_lv<10> > tmp_19_fu_207_p3;
    sc_signal< sc_lv<6> > tmp_20_fu_219_p3;
    sc_signal< sc_lv<11> > p_shl2_cast_fu_215_p1;
    sc_signal< sc_lv<11> > p_shl3_cast_fu_227_p1;
    sc_signal< sc_lv<10> > tmp_23_fu_241_p3;
    sc_signal< sc_lv<6> > tmp_24_fu_253_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_249_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_261_p1;
    sc_signal< sc_lv<11> > tmp_27_fu_293_p1;
    sc_signal< sc_lv<11> > tmp_26_fu_289_p1;
    sc_signal< sc_lv<11> > tmp_28_fu_296_p2;
    sc_signal< sc_lv<11> > tmp_29_fu_302_p2;
    sc_signal< sc_lv<11> > tmp_30_fu_312_p2;
    sc_signal< sc_lv<17> > index_assign_cast_fu_350_p1;
    sc_signal< sc_lv<17> > bvh_d_index_1_fu_354_p2;
    sc_signal< sc_lv<32> > index_assign_1_cast_fu_359_p1;
    sc_signal< sc_lv<1> > p_Repl2_s_fu_363_p3;
    sc_signal< sc_lv<32> > bvh_d_index_fu_346_p1;
    sc_signal< sc_lv<64> > val_assign_cast_fu_370_p1;
    sc_signal< sc_lv<1> > p_Repl2_1_fu_384_p3;
    sc_signal< sc_lv<64> > val_assign_1_cast_fu_391_p1;
    sc_signal< sc_lv<10> > tmp_23_cast_fu_415_p1;
    sc_signal< sc_lv<10> > tmp_31_fu_419_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<10> ap_const_lv10_17;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bvh_d_index_1_fu_354_p2();
    void thread_bvh_d_index_fu_346_p1();
    void thread_exitcond1_fu_277_p2();
    void thread_exitcond2_fu_322_p2();
    void thread_exitcond_fu_334_p2();
    void thread_glPLSlices_V_address0();
    void thread_glPLSlices_V_address1();
    void thread_glPLSlices_V_ce0();
    void thread_glPLSlices_V_ce1();
    void thread_index_assign_1_cast_fu_359_p1();
    void thread_index_assign_cast_fu_350_p1();
    void thread_k_1_fu_283_p2();
    void thread_l_1_fu_328_p2();
    void thread_next_mul_fu_271_p2();
    void thread_p_Repl2_1_fu_384_p3();
    void thread_p_Repl2_s_fu_363_p3();
    void thread_p_Result_1_fu_395_p4();
    void thread_p_Result_s_fu_374_p4();
    void thread_p_shl1_cast_fu_261_p1();
    void thread_p_shl2_cast_fu_215_p1();
    void thread_p_shl3_cast_fu_227_p1();
    void thread_p_shl_cast_fu_249_p1();
    void thread_refBlock_V_address0();
    void thread_refBlock_V_ce0();
    void thread_refBlock_V_d0();
    void thread_refBlock_V_we0();
    void thread_targetBlocks_V_address0();
    void thread_targetBlocks_V_ce0();
    void thread_targetBlocks_V_d0();
    void thread_targetBlocks_V_we0();
    void thread_tmp_19_fu_207_p3();
    void thread_tmp_20_fu_219_p3();
    void thread_tmp_21_fu_231_p2();
    void thread_tmp_23_cast_fu_415_p1();
    void thread_tmp_23_fu_241_p3();
    void thread_tmp_24_fu_253_p3();
    void thread_tmp_25_fu_265_p2();
    void thread_tmp_26_fu_289_p1();
    void thread_tmp_27_fu_293_p1();
    void thread_tmp_28_fu_296_p2();
    void thread_tmp_29_fu_302_p2();
    void thread_tmp_30_fu_312_p2();
    void thread_tmp_31_fu_419_p2();
    void thread_tmp_34_cast_fu_307_p1();
    void thread_tmp_35_cast_fu_317_p1();
    void thread_tmp_37_cast_fu_425_p1();
    void thread_tmp_fu_191_p1();
    void thread_tmp_s_fu_195_p3();
    void thread_val_assign_1_cast_fu_391_p1();
    void thread_val_assign_cast_fu_370_p1();
    void thread_yIndex_1_fu_340_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
