// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _parseEvents_HH_
#define _parseEvents_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "accumulateHW.h"
#include "calcOF.h"
#include "parseEvents_glPLSbkb.h"
#include "parseEvents_refBlcud.h"

namespace ap_rtl {

struct parseEvents : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > data_dout;
    sc_in< sc_logic > data_empty_n;
    sc_out< sc_logic > data_read;
    sc_in< sc_lv<32> > eventsArraySize;
    sc_out< sc_lv<32> > eventSlice_din;
    sc_in< sc_logic > eventSlice_full_n;
    sc_out< sc_logic > eventSlice_write;


    // Module declarations
    parseEvents(sc_module_name name);
    SC_HAS_PROCESS(parseEvents);

    ~parseEvents();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    parseEvents_glPLSbkb* glPLSlices_V_U;
    parseEvents_refBlcud* refBlock_V_U;
    parseEvents_refBlcud* targetBlocks_V_U;
    accumulateHW* grp_accumulateHW_fu_186;
    calcOF* grp_calcOF_fu_197;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > glPLActiveSliceIdx_V;
    sc_signal< sc_lv<2> > glPLTminus1SliceIdx_s;
    sc_signal< sc_lv<2> > glPLTminus2SliceIdx_s;
    sc_signal< sc_lv<10> > glPLSlices_V_address0;
    sc_signal< sc_logic > glPLSlices_V_ce0;
    sc_signal< sc_logic > glPLSlices_V_we0;
    sc_signal< sc_lv<720> > glPLSlices_V_q0;
    sc_signal< sc_logic > glPLSlices_V_ce1;
    sc_signal< sc_lv<720> > glPLSlices_V_q1;
    sc_signal< sc_lv<10> > refBlock_V_address0;
    sc_signal< sc_logic > refBlock_V_ce0;
    sc_signal< sc_logic > refBlock_V_we0;
    sc_signal< sc_lv<4> > refBlock_V_q0;
    sc_signal< sc_lv<10> > targetBlocks_V_address0;
    sc_signal< sc_logic > targetBlocks_V_ce0;
    sc_signal< sc_logic > targetBlocks_V_we0;
    sc_signal< sc_lv<4> > targetBlocks_V_q0;
    sc_signal< sc_lv<16> > sum;
    sc_signal< sc_lv<16> > glCnt;
    sc_signal< sc_logic > data_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_6_fu_294_p2;
    sc_signal< sc_logic > eventSlice_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > tmp_5_fu_289_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_539;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<11> > tmp_11_fu_323_p2;
    sc_signal< sc_lv<11> > tmp_11_reg_547;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<16> > x_fu_339_p1;
    sc_signal< sc_lv<16> > x_reg_552;
    sc_signal< sc_lv<15> > y_fu_344_p4;
    sc_signal< sc_lv<15> > y_reg_559;
    sc_signal< sc_lv<16> > y_cast_fu_354_p1;
    sc_signal< sc_lv<16> > y_cast_reg_564;
    sc_signal< sc_lv<1> > tmp_18_fu_359_p3;
    sc_signal< sc_lv<1> > tmp_18_reg_570;
    sc_signal< sc_lv<1> > pol_fu_375_p2;
    sc_signal< sc_lv<1> > pol_reg_575;
    sc_signal< sc_lv<1> > tmp_10_fu_382_p2;
    sc_signal< sc_lv<1> > tmp_10_reg_580;
    sc_signal< sc_lv<32> > i_1_fu_388_p2;
    sc_signal< sc_lv<32> > i_1_reg_585;
    sc_signal< sc_lv<24> > tmp1_fu_415_p2;
    sc_signal< sc_lv<24> > tmp1_reg_590;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > refBlock_V_load_reg_605;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > targetBlocks_V_load_reg_610;
    sc_signal< sc_lv<5> > tmp3_fu_434_p2;
    sc_signal< sc_lv<5> > tmp3_reg_615;
    sc_signal< sc_logic > grp_accumulateHW_fu_186_ap_start;
    sc_signal< sc_logic > grp_accumulateHW_fu_186_ap_done;
    sc_signal< sc_logic > grp_accumulateHW_fu_186_ap_idle;
    sc_signal< sc_logic > grp_accumulateHW_fu_186_ap_ready;
    sc_signal< sc_logic > grp_accumulateHW_fu_186_pol;
    sc_signal< sc_lv<10> > grp_accumulateHW_fu_186_glPLSlices_V_address0;
    sc_signal< sc_logic > grp_accumulateHW_fu_186_glPLSlices_V_ce0;
    sc_signal< sc_logic > grp_accumulateHW_fu_186_glPLSlices_V_we0;
    sc_signal< sc_lv<720> > grp_accumulateHW_fu_186_glPLSlices_V_d0;
    sc_signal< sc_logic > grp_calcOF_fu_197_ap_start;
    sc_signal< sc_logic > grp_calcOF_fu_197_ap_done;
    sc_signal< sc_logic > grp_calcOF_fu_197_ap_idle;
    sc_signal< sc_logic > grp_calcOF_fu_197_ap_ready;
    sc_signal< sc_lv<10> > grp_calcOF_fu_197_glPLSlices_V_address0;
    sc_signal< sc_logic > grp_calcOF_fu_197_glPLSlices_V_ce0;
    sc_signal< sc_lv<10> > grp_calcOF_fu_197_glPLSlices_V_address1;
    sc_signal< sc_logic > grp_calcOF_fu_197_glPLSlices_V_ce1;
    sc_signal< sc_lv<10> > grp_calcOF_fu_197_refBlock_V_address0;
    sc_signal< sc_logic > grp_calcOF_fu_197_refBlock_V_ce0;
    sc_signal< sc_logic > grp_calcOF_fu_197_refBlock_V_we0;
    sc_signal< sc_lv<4> > grp_calcOF_fu_197_refBlock_V_d0;
    sc_signal< sc_lv<10> > grp_calcOF_fu_197_targetBlocks_V_address0;
    sc_signal< sc_logic > grp_calcOF_fu_197_targetBlocks_V_ce0;
    sc_signal< sc_logic > grp_calcOF_fu_197_targetBlocks_V_we0;
    sc_signal< sc_lv<4> > grp_calcOF_fu_197_targetBlocks_V_d0;
    sc_signal< sc_lv<2> > tmp_1_reg_151;
    sc_signal< sc_lv<1> > tmp_fu_217_p2;
    sc_signal< sc_lv<2> > tmp_3_reg_163;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_2_fu_241_p2;
    sc_signal< sc_lv<32> > i_reg_175;
    sc_signal< sc_logic > grp_accumulateHW_fu_186_ap_start_reg;
    sc_signal< bool > ap_block_state4_ignore_call19;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_calcOF_fu_197_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > tmp_21_cast_fu_421_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_265_p2;
    sc_signal< sc_lv<16> > tmp_17_fu_508_p2;
    sc_signal< sc_lv<6> > tmp_7_fu_299_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_311_p1;
    sc_signal< sc_lv<11> > p_shl_cast_fu_303_p3;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_315_p3;
    sc_signal< sc_lv<15> > tmp_15_fu_329_p4;
    sc_signal< sc_lv<2> > tmp_s_fu_367_p3;
    sc_signal< sc_lv<23> > tmp_12_fu_394_p3;
    sc_signal< sc_lv<17> > tmp_13_fu_405_p3;
    sc_signal< sc_lv<24> > tmp_15_cast_cast_fu_401_p1;
    sc_signal< sc_lv<24> > tmp_14_cast_fu_411_p1;
    sc_signal< sc_lv<5> > tmp_18_cast_fu_426_p1;
    sc_signal< sc_lv<5> > tmp_19_cast_fu_430_p1;
    sc_signal< sc_lv<17> > lhs_V_fu_444_p1;
    sc_signal< sc_lv<17> > rhs_V_fu_448_p1;
    sc_signal< sc_lv<17> > r_V_fu_451_p2;
    sc_signal< sc_lv<17> > rhs_V_1_cast_fu_457_p1;
    sc_signal< sc_lv<17> > r_V_1_fu_460_p2;
    sc_signal< sc_lv<17> > tmp3_cast_fu_473_p1;
    sc_signal< sc_lv<17> > tmp2_fu_476_p2;
    sc_signal< sc_lv<25> > tmp2_cast_cast_fu_482_p1;
    sc_signal< sc_lv<25> > tmp1_cast_fu_470_p1;
    sc_signal< sc_lv<25> > tmp_11_cast_fu_466_p1;
    sc_signal< sc_lv<25> > tmp_16_fu_486_p2;
    sc_signal< sc_lv<25> > storemerge_fu_492_p3;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state4();
    void thread_ap_block_state4_ignore_call19();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data_blk_n();
    void thread_data_read();
    void thread_eventSlice_blk_n();
    void thread_eventSlice_din();
    void thread_eventSlice_write();
    void thread_glPLSlices_V_address0();
    void thread_glPLSlices_V_ce0();
    void thread_glPLSlices_V_ce1();
    void thread_glPLSlices_V_we0();
    void thread_grp_accumulateHW_fu_186_ap_start();
    void thread_grp_accumulateHW_fu_186_pol();
    void thread_grp_calcOF_fu_197_ap_start();
    void thread_i_1_fu_388_p2();
    void thread_lhs_V_fu_444_p1();
    void thread_p_shl1_cast_fu_315_p3();
    void thread_p_shl_cast_fu_303_p3();
    void thread_pol_fu_375_p2();
    void thread_r_V_1_fu_460_p2();
    void thread_r_V_fu_451_p2();
    void thread_refBlock_V_address0();
    void thread_refBlock_V_ce0();
    void thread_refBlock_V_we0();
    void thread_rhs_V_1_cast_fu_457_p1();
    void thread_rhs_V_fu_448_p1();
    void thread_storemerge_fu_492_p3();
    void thread_targetBlocks_V_address0();
    void thread_targetBlocks_V_ce0();
    void thread_targetBlocks_V_we0();
    void thread_tmp1_cast_fu_470_p1();
    void thread_tmp1_fu_415_p2();
    void thread_tmp2_cast_cast_fu_482_p1();
    void thread_tmp2_fu_476_p2();
    void thread_tmp3_cast_fu_473_p1();
    void thread_tmp3_fu_434_p2();
    void thread_tmp_10_fu_382_p2();
    void thread_tmp_11_cast_fu_466_p1();
    void thread_tmp_11_fu_323_p2();
    void thread_tmp_12_fu_394_p3();
    void thread_tmp_13_fu_405_p3();
    void thread_tmp_14_cast_fu_411_p1();
    void thread_tmp_15_cast_cast_fu_401_p1();
    void thread_tmp_15_fu_329_p4();
    void thread_tmp_16_fu_486_p2();
    void thread_tmp_17_fu_508_p2();
    void thread_tmp_18_cast_fu_426_p1();
    void thread_tmp_18_fu_359_p3();
    void thread_tmp_19_cast_fu_430_p1();
    void thread_tmp_21_cast_fu_421_p1();
    void thread_tmp_2_fu_241_p2();
    void thread_tmp_4_fu_265_p2();
    void thread_tmp_5_fu_289_p2();
    void thread_tmp_6_fu_294_p2();
    void thread_tmp_7_fu_299_p1();
    void thread_tmp_9_fu_311_p1();
    void thread_tmp_fu_217_p2();
    void thread_tmp_s_fu_367_p3();
    void thread_x_fu_339_p1();
    void thread_y_cast_fu_354_p1();
    void thread_y_fu_344_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
